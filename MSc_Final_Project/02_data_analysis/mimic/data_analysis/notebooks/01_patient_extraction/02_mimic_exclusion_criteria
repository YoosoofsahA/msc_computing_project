{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMVAfsXl3c37yJ9EmR0GT+0"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Exclusion Criteria applied to patient set**\n","\n","Dr Murali was consulted to define a set of clincially relevant exclusion criteria to refine the patient set and generate the final dataset for training and testing of the models to be developed.\n","\n","The following are the exlcusion criteria applied in this project:\n","\n","- Criteria 1: Age > 18 and < 89\n","- Criteria 2: Duration of ventilation < 24 hours\n","- Criteria 3: Not first ICU admission\n","- Criteria 4: Patients under palliative care and end-of-life patients\n","- Criteria 5: Patients that died during ventilation\n","- Criteria 6: Patients who had major head and neck surgeries\n","\n","In this notebook, criteria will be applied sequentially to determine the final set of patients."],"metadata":{"id":"btKnJb0YSErD"}},{"cell_type":"code","source":["import pandas as pd\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HnpzJpDYXWcO","executionInfo":{"status":"ok","timestamp":1719826315380,"user_tz":-60,"elapsed":17961,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"0124f096-4e67-4d72-c391-5544f9303967"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["inclusion_set_parquet = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic_data_analysis/datasets/inclusion_set/vent_durations_df_v01.parquet'\n","\n","inclusion_set = pd.read_parquet(inclusion_set_parquet)\n","\n","inclusion_set.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RcY1EZHxXiIb","executionInfo":{"status":"ok","timestamp":1719650183512,"user_tz":-60,"elapsed":2035,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"572c0fe3-7d8e-4582-b485-0a1569040bd0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["16243"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["inclusion_set.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Pc7mrqqRXqUg","executionInfo":{"status":"ok","timestamp":1719570187542,"user_tz":-60,"elapsed":13,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"e12e24e7-3ab4-4d8e-b701-77de9ba561be"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   stay_id  ventilation_duration_minutes  stay_number\n","0    10001884  37510196                        2220.0            1\n","1    10002428  38875437                        4135.0            1\n","2    10002428  35479615                       12640.0            2\n","3    10002760  31831386                        1044.0            1\n","4    10004235  34100191                        4296.0            1"],"text/html":["\n","  <div id=\"df-7a14e5cc-2de0-4871-82a9-341e306e82b4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>stay_id</th>\n","      <th>ventilation_duration_minutes</th>\n","      <th>stay_number</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>37510196</td>\n","      <td>2220.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002428</td>\n","      <td>38875437</td>\n","      <td>4135.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10002428</td>\n","      <td>35479615</td>\n","      <td>12640.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10002760</td>\n","      <td>31831386</td>\n","      <td>1044.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10004235</td>\n","      <td>34100191</td>\n","      <td>4296.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a14e5cc-2de0-4871-82a9-341e306e82b4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7a14e5cc-2de0-4871-82a9-341e306e82b4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7a14e5cc-2de0-4871-82a9-341e306e82b4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cb24854f-6615-4a4c-bc1c-73162ee21295\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cb24854f-6615-4a4c-bc1c-73162ee21295')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cb24854f-6615-4a4c-bc1c-73162ee21295 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"inclusion_set","summary":"{\n  \"name\": \"inclusion_set\",\n  \"rows\": 16243,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2897673,\n        \"min\": 10001884,\n        \"max\": 19999442,\n        \"num_unique_values\": 14315,\n        \"samples\": [\n          17010257,\n          19119661,\n          18216140\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stay_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2884757,\n        \"min\": 30000153,\n        \"max\": 39999552,\n        \"num_unique_values\": 15488,\n        \"samples\": [\n          36446798,\n          33774611,\n          32391848\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_duration_minutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4486.240555326654,\n        \"min\": 1.0,\n        \"max\": 59273.0,\n        \"num_unique_values\": 6244,\n        \"samples\": [\n          566.0,\n          124.0,\n          5784.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stay_number\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 6,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          2,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["inclusion_set.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VQDQ7gnxXs52","executionInfo":{"status":"ok","timestamp":1719570199133,"user_tz":-60,"elapsed":245,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"5d8a6f59-0baa-48f9-b012-fd5408d756cf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 16243 entries, 0 to 16242\n","Data columns (total 4 columns):\n"," #   Column                        Non-Null Count  Dtype  \n","---  ------                        --------------  -----  \n"," 0   subject_id                    16243 non-null  int64  \n"," 1   stay_id                       16243 non-null  int64  \n"," 2   ventilation_duration_minutes  16243 non-null  float64\n"," 3   stay_number                   16243 non-null  int64  \n","dtypes: float64(1), int64(3)\n","memory usage: 507.7 KB\n"]}]},{"cell_type":"markdown","source":["Inclusion set with times"],"metadata":{"id":"n189CdZ3X6Wx"}},{"cell_type":"code","source":["inclusion_set_parquet = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic_data_analysis/datasets/inclusion_set/final_inclusion_set_full.parquet'\n","\n","inclusion_set_full = pd.read_parquet(inclusion_set_parquet)\n","\n","inclusion_set_full.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QG9WitKtX2qD","executionInfo":{"status":"ok","timestamp":1719650192374,"user_tz":-60,"elapsed":773,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"a069534a-05e7-4df7-b4bb-7beb21ebaaee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["16243"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["**Criteria 1: Age > 18 and < 89**\n","\n","Rationale: Pediatric patients have different physiological responses and treatment protocols\n","compared to adults. Similarly, very elderly patients may have multiple comorbidities that\n","could confound the analysis.\n","\n","Age is taken as anchor_age as it provides the best estimate"],"metadata":{"id":"pWcXV-rRU5mv"}},{"cell_type":"code","source":["# Calculate the age for each of the patients using anchor_year (relative year of birth) and admission_year\n","\n","# Need to extract 'admissions' file and 'patients' file\n","admissions_file_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic-iv-2.2-raw-data/hosp/admissions.csv'\n","patients_file_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic-iv-2.2-raw-data/hosp/patients.csv'\n","\n","admissions_df = pd.read_csv(admissions_file_path)\n","patients_df = pd.read_csv(patients_file_path)"],"metadata":{"id":"Hcv_FcJcU43j"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["admissions_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UTH3eGZKYHm1","executionInfo":{"status":"ok","timestamp":1719570307620,"user_tz":-60,"elapsed":258,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"7c01de74-522e-4e66-d55c-187771ef509f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 431231 entries, 0 to 431230\n","Data columns (total 16 columns):\n"," #   Column                Non-Null Count   Dtype \n","---  ------                --------------   ----- \n"," 0   subject_id            431231 non-null  int64 \n"," 1   hadm_id               431231 non-null  int64 \n"," 2   admittime             431231 non-null  object\n"," 3   dischtime             431231 non-null  object\n"," 4   deathtime             8598 non-null    object\n"," 5   admission_type        431231 non-null  object\n"," 6   admit_provider_id     431227 non-null  object\n"," 7   admission_location    431231 non-null  object\n"," 8   discharge_location    312076 non-null  object\n"," 9   insurance             431231 non-null  object\n"," 10  language              431231 non-null  object\n"," 11  marital_status        421998 non-null  object\n"," 12  race                  431231 non-null  object\n"," 13  edregtime             299282 non-null  object\n"," 14  edouttime             299282 non-null  object\n"," 15  hospital_expire_flag  431231 non-null  int64 \n","dtypes: int64(3), object(13)\n","memory usage: 52.6+ MB\n"]}]},{"cell_type":"code","source":["admissions_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"VZJYsr4fYLRo","executionInfo":{"status":"ok","timestamp":1719570497929,"user_tz":-60,"elapsed":234,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"3e509ae8-6ce6-4e6b-e727-09ed297a0d4b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id            admittime            dischtime deathtime  \\\n","0    10000032  22595853  2180-05-06 22:23:00  2180-05-07 17:15:00       NaN   \n","1    10000032  22841357  2180-06-26 18:27:00  2180-06-27 18:49:00       NaN   \n","2    10000032  25742920  2180-08-05 23:44:00  2180-08-07 17:50:00       NaN   \n","3    10000032  29079034  2180-07-23 12:35:00  2180-07-25 17:55:00       NaN   \n","4    10000068  25022803  2160-03-03 23:16:00  2160-03-04 06:26:00       NaN   \n","\n","   admission_type admit_provider_id      admission_location  \\\n","0          URGENT            P874LG  TRANSFER FROM HOSPITAL   \n","1        EW EMER.            P09Q6Y          EMERGENCY ROOM   \n","2        EW EMER.            P60CC5          EMERGENCY ROOM   \n","3        EW EMER.            P30KEH          EMERGENCY ROOM   \n","4  EU OBSERVATION            P51VDL          EMERGENCY ROOM   \n","\n","  discharge_location insurance language marital_status   race  \\\n","0               HOME     Other  ENGLISH        WIDOWED  WHITE   \n","1               HOME  Medicaid  ENGLISH        WIDOWED  WHITE   \n","2            HOSPICE  Medicaid  ENGLISH        WIDOWED  WHITE   \n","3               HOME  Medicaid  ENGLISH        WIDOWED  WHITE   \n","4                NaN     Other  ENGLISH         SINGLE  WHITE   \n","\n","             edregtime            edouttime  hospital_expire_flag  \n","0  2180-05-06 19:17:00  2180-05-06 23:30:00                     0  \n","1  2180-06-26 15:54:00  2180-06-26 21:31:00                     0  \n","2  2180-08-05 20:58:00  2180-08-06 01:44:00                     0  \n","3  2180-07-23 05:54:00  2180-07-23 14:00:00                     0  \n","4  2160-03-03 21:55:00  2160-03-04 06:26:00                     0  "],"text/html":["\n","  <div id=\"df-7be8e0b0-5095-4cc4-893b-962b07028c4f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>admittime</th>\n","      <th>dischtime</th>\n","      <th>deathtime</th>\n","      <th>admission_type</th>\n","      <th>admit_provider_id</th>\n","      <th>admission_location</th>\n","      <th>discharge_location</th>\n","      <th>insurance</th>\n","      <th>language</th>\n","      <th>marital_status</th>\n","      <th>race</th>\n","      <th>edregtime</th>\n","      <th>edouttime</th>\n","      <th>hospital_expire_flag</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10000032</td>\n","      <td>22595853</td>\n","      <td>2180-05-06 22:23:00</td>\n","      <td>2180-05-07 17:15:00</td>\n","      <td>NaN</td>\n","      <td>URGENT</td>\n","      <td>P874LG</td>\n","      <td>TRANSFER FROM HOSPITAL</td>\n","      <td>HOME</td>\n","      <td>Other</td>\n","      <td>ENGLISH</td>\n","      <td>WIDOWED</td>\n","      <td>WHITE</td>\n","      <td>2180-05-06 19:17:00</td>\n","      <td>2180-05-06 23:30:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10000032</td>\n","      <td>22841357</td>\n","      <td>2180-06-26 18:27:00</td>\n","      <td>2180-06-27 18:49:00</td>\n","      <td>NaN</td>\n","      <td>EW EMER.</td>\n","      <td>P09Q6Y</td>\n","      <td>EMERGENCY ROOM</td>\n","      <td>HOME</td>\n","      <td>Medicaid</td>\n","      <td>ENGLISH</td>\n","      <td>WIDOWED</td>\n","      <td>WHITE</td>\n","      <td>2180-06-26 15:54:00</td>\n","      <td>2180-06-26 21:31:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10000032</td>\n","      <td>25742920</td>\n","      <td>2180-08-05 23:44:00</td>\n","      <td>2180-08-07 17:50:00</td>\n","      <td>NaN</td>\n","      <td>EW EMER.</td>\n","      <td>P60CC5</td>\n","      <td>EMERGENCY ROOM</td>\n","      <td>HOSPICE</td>\n","      <td>Medicaid</td>\n","      <td>ENGLISH</td>\n","      <td>WIDOWED</td>\n","      <td>WHITE</td>\n","      <td>2180-08-05 20:58:00</td>\n","      <td>2180-08-06 01:44:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10000032</td>\n","      <td>29079034</td>\n","      <td>2180-07-23 12:35:00</td>\n","      <td>2180-07-25 17:55:00</td>\n","      <td>NaN</td>\n","      <td>EW EMER.</td>\n","      <td>P30KEH</td>\n","      <td>EMERGENCY ROOM</td>\n","      <td>HOME</td>\n","      <td>Medicaid</td>\n","      <td>ENGLISH</td>\n","      <td>WIDOWED</td>\n","      <td>WHITE</td>\n","      <td>2180-07-23 05:54:00</td>\n","      <td>2180-07-23 14:00:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10000068</td>\n","      <td>25022803</td>\n","      <td>2160-03-03 23:16:00</td>\n","      <td>2160-03-04 06:26:00</td>\n","      <td>NaN</td>\n","      <td>EU OBSERVATION</td>\n","      <td>P51VDL</td>\n","      <td>EMERGENCY ROOM</td>\n","      <td>NaN</td>\n","      <td>Other</td>\n","      <td>ENGLISH</td>\n","      <td>SINGLE</td>\n","      <td>WHITE</td>\n","      <td>2160-03-03 21:55:00</td>\n","      <td>2160-03-04 06:26:00</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7be8e0b0-5095-4cc4-893b-962b07028c4f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7be8e0b0-5095-4cc4-893b-962b07028c4f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7be8e0b0-5095-4cc4-893b-962b07028c4f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0d6f18d2-5647-43de-a46a-0edec6ed8ca7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0d6f18d2-5647-43de-a46a-0edec6ed8ca7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0d6f18d2-5647-43de-a46a-0edec6ed8ca7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"admissions_df"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z4HmiKL-R7jW","executionInfo":{"status":"ok","timestamp":1719570502465,"user_tz":-60,"elapsed":272,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"016ee12e-3a54-4f25-bddc-d966ddaac4a5"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 299712 entries, 0 to 299711\n","Data columns (total 6 columns):\n"," #   Column             Non-Null Count   Dtype \n","---  ------             --------------   ----- \n"," 0   subject_id         299712 non-null  int64 \n"," 1   gender             299712 non-null  object\n"," 2   anchor_age         299712 non-null  int64 \n"," 3   anchor_year        299712 non-null  int64 \n"," 4   anchor_year_group  299712 non-null  object\n"," 5   dod                29076 non-null   object\n","dtypes: int64(3), object(3)\n","memory usage: 13.7+ MB\n"]}],"source":["patients_df.info()"]},{"cell_type":"code","source":["patients_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"VrdBVnGPY5pi","executionInfo":{"status":"ok","timestamp":1719570507117,"user_tz":-60,"elapsed":269,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"1c17e9c0-6237-429e-9141-6e516db8e414"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id gender  anchor_age  anchor_year anchor_year_group         dod\n","0    10000032      F          52         2180       2014 - 2016  2180-09-09\n","1    10000048      F          23         2126       2008 - 2010         NaN\n","2    10000068      F          19         2160       2008 - 2010         NaN\n","3    10000084      M          72         2160       2017 - 2019  2161-02-13\n","4    10000102      F          27         2136       2008 - 2010         NaN"],"text/html":["\n","  <div id=\"df-b91e5c33-b28b-4532-a569-59c8477c4ebb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>gender</th>\n","      <th>anchor_age</th>\n","      <th>anchor_year</th>\n","      <th>anchor_year_group</th>\n","      <th>dod</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10000032</td>\n","      <td>F</td>\n","      <td>52</td>\n","      <td>2180</td>\n","      <td>2014 - 2016</td>\n","      <td>2180-09-09</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10000048</td>\n","      <td>F</td>\n","      <td>23</td>\n","      <td>2126</td>\n","      <td>2008 - 2010</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10000068</td>\n","      <td>F</td>\n","      <td>19</td>\n","      <td>2160</td>\n","      <td>2008 - 2010</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10000084</td>\n","      <td>M</td>\n","      <td>72</td>\n","      <td>2160</td>\n","      <td>2017 - 2019</td>\n","      <td>2161-02-13</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10000102</td>\n","      <td>F</td>\n","      <td>27</td>\n","      <td>2136</td>\n","      <td>2008 - 2010</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b91e5c33-b28b-4532-a569-59c8477c4ebb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b91e5c33-b28b-4532-a569-59c8477c4ebb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b91e5c33-b28b-4532-a569-59c8477c4ebb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e6950107-3651-44d6-8fe2-5488d7582453\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e6950107-3651-44d6-8fe2-5488d7582453')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e6950107-3651-44d6-8fe2-5488d7582453 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"patients_df"}},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["The anchor_year is ambiguous and shifted to maintain patient anonymity as per MIMIC documentation (https://mimic.mit.edu/docs/iv/modules/hosp/patients/). As such, this is not a good measure in retrospect.\n","\n","Anchor age is therefore likely the best proxy for patient age despite it not being exact for anonymity reasons."],"metadata":{"id":"Of452wi2Z-kt"}},{"cell_type":"code","source":["# Merge anchor_age with inclusion set of patients\n","age_merged_df = pd.merge(inclusion_set_full, patients_df[['subject_id', 'anchor_age']], on='subject_id', how='left')\n","\n","age_merged_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"16tm884FZ8Ae","executionInfo":{"status":"ok","timestamp":1719570798926,"user_tz":-60,"elapsed":236,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"aa58f4a2-a3fc-400a-ef50-b4d0277f4cda"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id   stay_id ventilation_starttime ventilation_endtime  \\\n","0    10001884  26184834  37510196   2131-01-11 04:40:00 2131-01-12 17:40:00   \n","1    10002428  23473524  35479615   2156-05-11 16:05:00 2156-05-20 10:45:00   \n","2    10002428  28662225  38875437   2156-04-19 20:10:00 2156-04-22 17:05:00   \n","3    10002760  28094813  31831386   2141-04-20 14:36:00 2141-04-21 08:00:00   \n","4    10004235  24181354  34100191   2196-02-24 16:52:00 2196-02-27 16:28:00   \n","\n","   ventilation_itemid ventilation_ordercategoryname extubation_starttime  \\\n","0              225792                   Ventilation  2131-01-12 17:40:00   \n","1              225792                   Ventilation  2156-05-20 10:45:00   \n","2              225792                   Ventilation  2156-04-22 17:10:00   \n","3              225792                   Ventilation  2141-04-21 08:00:00   \n","4              225792                   Ventilation  2196-02-27 16:28:00   \n","\n","   extubation_endtime  extubation_itemid extubation_ordercategoryname  \\\n","0 2131-01-12 17:41:00             227194        Intubation/Extubation   \n","1 2156-05-20 10:46:00             227194        Intubation/Extubation   \n","2 2156-04-22 17:11:00             227194        Intubation/Extubation   \n","3 2141-04-21 08:01:00             227194        Intubation/Extubation   \n","4 2196-02-27 16:29:00             227194        Intubation/Extubation   \n","\n","   ventilation_duration  anchor_age  \n","0                2220.0          68  \n","1               12640.0          80  \n","2                4135.0          80  \n","3                1044.0          56  \n","4                4296.0          47  "],"text/html":["\n","  <div id=\"df-50b7b0d5-0972-4380-9e6d-d2b53e01684d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>stay_id</th>\n","      <th>ventilation_starttime</th>\n","      <th>ventilation_endtime</th>\n","      <th>ventilation_itemid</th>\n","      <th>ventilation_ordercategoryname</th>\n","      <th>extubation_starttime</th>\n","      <th>extubation_endtime</th>\n","      <th>extubation_itemid</th>\n","      <th>extubation_ordercategoryname</th>\n","      <th>ventilation_duration</th>\n","      <th>anchor_age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>26184834</td>\n","      <td>37510196</td>\n","      <td>2131-01-11 04:40:00</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>2131-01-12 17:41:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>2220.0</td>\n","      <td>68</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002428</td>\n","      <td>23473524</td>\n","      <td>35479615</td>\n","      <td>2156-05-11 16:05:00</td>\n","      <td>2156-05-20 10:45:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2156-05-20 10:45:00</td>\n","      <td>2156-05-20 10:46:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>12640.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10002428</td>\n","      <td>28662225</td>\n","      <td>38875437</td>\n","      <td>2156-04-19 20:10:00</td>\n","      <td>2156-04-22 17:05:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2156-04-22 17:10:00</td>\n","      <td>2156-04-22 17:11:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4135.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10002760</td>\n","      <td>28094813</td>\n","      <td>31831386</td>\n","      <td>2141-04-20 14:36:00</td>\n","      <td>2141-04-21 08:00:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2141-04-21 08:00:00</td>\n","      <td>2141-04-21 08:01:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>1044.0</td>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10004235</td>\n","      <td>24181354</td>\n","      <td>34100191</td>\n","      <td>2196-02-24 16:52:00</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>2196-02-27 16:29:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4296.0</td>\n","      <td>47</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50b7b0d5-0972-4380-9e6d-d2b53e01684d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-50b7b0d5-0972-4380-9e6d-d2b53e01684d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-50b7b0d5-0972-4380-9e6d-d2b53e01684d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-70c79e05-2217-4277-91f9-7adf4d81c8d4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-70c79e05-2217-4277-91f9-7adf4d81c8d4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-70c79e05-2217-4277-91f9-7adf4d81c8d4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"age_merged_df","summary":"{\n  \"name\": \"age_merged_df\",\n  \"rows\": 16243,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2897673,\n        \"min\": 10001884,\n        \"max\": 19999442,\n        \"num_unique_values\": 14315,\n        \"samples\": [\n          17010257,\n          19119661,\n          18216140\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hadm_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2878749,\n        \"min\": 20000147,\n        \"max\": 29998399,\n        \"num_unique_values\": 15178,\n        \"samples\": [\n          26168964,\n          28451711,\n          25462705\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stay_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2884757,\n        \"min\": 30000153,\n        \"max\": 39999552,\n        \"num_unique_values\": 15488,\n        \"samples\": [\n          36446798,\n          33774611,\n          32391848\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-11 12:40:00\",\n        \"max\": \"2211-05-01 10:00:00\",\n        \"num_unique_values\": 16125,\n        \"samples\": [\n          \"2171-11-15 14:40:00\",\n          \"2132-12-16 12:02:00\",\n          \"2172-05-19 19:05:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-11 16:30:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 16129,\n        \"samples\": [\n          \"2143-01-05 14:27:00\",\n          \"2149-05-05 09:47:00\",\n          \"2201-02-24 09:50:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 225792,\n        \"max\": 225792,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          225792\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Ventilation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-11 16:30:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 16234,\n        \"samples\": [\n          \"2153-12-19 17:45:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-11 16:31:00\",\n        \"max\": \"2211-05-08 13:08:00\",\n        \"num_unique_values\": 16234,\n        \"samples\": [\n          \"2153-12-19 17:46:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 227194,\n        \"max\": 227194,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          227194\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Intubation/Extubation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4486.240555326654,\n        \"min\": 1.0,\n        \"max\": 59273.0,\n        \"num_unique_values\": 6244,\n        \"samples\": [\n          566.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anchor_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 18,\n        \"max\": 91,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          65\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["# Filter out patients under 18 years of age\n","age_filter = age_merged_df['anchor_age'] >= 18\n","\n","filtered_inclusion_set_df = age_merged_df[age_filter]\n","\n","filtered_inclusion_set_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"WFmZdgIAaDXH","executionInfo":{"status":"ok","timestamp":1719570810762,"user_tz":-60,"elapsed":255,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"8d26446e-d471-4880-a109-0db7731893f8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id   stay_id ventilation_starttime ventilation_endtime  \\\n","0    10001884  26184834  37510196   2131-01-11 04:40:00 2131-01-12 17:40:00   \n","1    10002428  23473524  35479615   2156-05-11 16:05:00 2156-05-20 10:45:00   \n","2    10002428  28662225  38875437   2156-04-19 20:10:00 2156-04-22 17:05:00   \n","3    10002760  28094813  31831386   2141-04-20 14:36:00 2141-04-21 08:00:00   \n","4    10004235  24181354  34100191   2196-02-24 16:52:00 2196-02-27 16:28:00   \n","\n","   ventilation_itemid ventilation_ordercategoryname extubation_starttime  \\\n","0              225792                   Ventilation  2131-01-12 17:40:00   \n","1              225792                   Ventilation  2156-05-20 10:45:00   \n","2              225792                   Ventilation  2156-04-22 17:10:00   \n","3              225792                   Ventilation  2141-04-21 08:00:00   \n","4              225792                   Ventilation  2196-02-27 16:28:00   \n","\n","   extubation_endtime  extubation_itemid extubation_ordercategoryname  \\\n","0 2131-01-12 17:41:00             227194        Intubation/Extubation   \n","1 2156-05-20 10:46:00             227194        Intubation/Extubation   \n","2 2156-04-22 17:11:00             227194        Intubation/Extubation   \n","3 2141-04-21 08:01:00             227194        Intubation/Extubation   \n","4 2196-02-27 16:29:00             227194        Intubation/Extubation   \n","\n","   ventilation_duration  anchor_age  \n","0                2220.0          68  \n","1               12640.0          80  \n","2                4135.0          80  \n","3                1044.0          56  \n","4                4296.0          47  "],"text/html":["\n","  <div id=\"df-d329531f-a0dd-47bf-84d5-5cd7b7981d5f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>stay_id</th>\n","      <th>ventilation_starttime</th>\n","      <th>ventilation_endtime</th>\n","      <th>ventilation_itemid</th>\n","      <th>ventilation_ordercategoryname</th>\n","      <th>extubation_starttime</th>\n","      <th>extubation_endtime</th>\n","      <th>extubation_itemid</th>\n","      <th>extubation_ordercategoryname</th>\n","      <th>ventilation_duration</th>\n","      <th>anchor_age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>26184834</td>\n","      <td>37510196</td>\n","      <td>2131-01-11 04:40:00</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>2131-01-12 17:41:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>2220.0</td>\n","      <td>68</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002428</td>\n","      <td>23473524</td>\n","      <td>35479615</td>\n","      <td>2156-05-11 16:05:00</td>\n","      <td>2156-05-20 10:45:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2156-05-20 10:45:00</td>\n","      <td>2156-05-20 10:46:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>12640.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10002428</td>\n","      <td>28662225</td>\n","      <td>38875437</td>\n","      <td>2156-04-19 20:10:00</td>\n","      <td>2156-04-22 17:05:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2156-04-22 17:10:00</td>\n","      <td>2156-04-22 17:11:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4135.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10002760</td>\n","      <td>28094813</td>\n","      <td>31831386</td>\n","      <td>2141-04-20 14:36:00</td>\n","      <td>2141-04-21 08:00:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2141-04-21 08:00:00</td>\n","      <td>2141-04-21 08:01:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>1044.0</td>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10004235</td>\n","      <td>24181354</td>\n","      <td>34100191</td>\n","      <td>2196-02-24 16:52:00</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>2196-02-27 16:29:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4296.0</td>\n","      <td>47</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d329531f-a0dd-47bf-84d5-5cd7b7981d5f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d329531f-a0dd-47bf-84d5-5cd7b7981d5f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d329531f-a0dd-47bf-84d5-5cd7b7981d5f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d2d08dc6-17e3-4ab0-8485-7bd2219b8f1a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d2d08dc6-17e3-4ab0-8485-7bd2219b8f1a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d2d08dc6-17e3-4ab0-8485-7bd2219b8f1a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"filtered_inclusion_set_df","summary":"{\n  \"name\": \"filtered_inclusion_set_df\",\n  \"rows\": 16243,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2897673,\n        \"min\": 10001884,\n        \"max\": 19999442,\n        \"num_unique_values\": 14315,\n        \"samples\": [\n          17010257,\n          19119661,\n          18216140\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hadm_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2878749,\n        \"min\": 20000147,\n        \"max\": 29998399,\n        \"num_unique_values\": 15178,\n        \"samples\": [\n          26168964,\n          28451711,\n          25462705\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stay_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2884757,\n        \"min\": 30000153,\n        \"max\": 39999552,\n        \"num_unique_values\": 15488,\n        \"samples\": [\n          36446798,\n          33774611,\n          32391848\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-11 12:40:00\",\n        \"max\": \"2211-05-01 10:00:00\",\n        \"num_unique_values\": 16125,\n        \"samples\": [\n          \"2171-11-15 14:40:00\",\n          \"2132-12-16 12:02:00\",\n          \"2172-05-19 19:05:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-11 16:30:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 16129,\n        \"samples\": [\n          \"2143-01-05 14:27:00\",\n          \"2149-05-05 09:47:00\",\n          \"2201-02-24 09:50:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 225792,\n        \"max\": 225792,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          225792\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Ventilation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-11 16:30:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 16234,\n        \"samples\": [\n          \"2153-12-19 17:45:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-11 16:31:00\",\n        \"max\": \"2211-05-08 13:08:00\",\n        \"num_unique_values\": 16234,\n        \"samples\": [\n          \"2153-12-19 17:46:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 227194,\n        \"max\": 227194,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          227194\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Intubation/Extubation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4486.240555326654,\n        \"min\": 1.0,\n        \"max\": 59273.0,\n        \"num_unique_values\": 6244,\n        \"samples\": [\n          566.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anchor_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 18,\n        \"max\": 91,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          65\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["filtered_inclusion_set_df.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5IbW93sDaKCf","executionInfo":{"status":"ok","timestamp":1719570842656,"user_tz":-60,"elapsed":258,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"83913df8-2799-4c54-ac7b-f196e5451d19"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["16243"]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["Now lets filter out any patients over the age of 89, who in MIMIC are give an anchor_age of 91."],"metadata":{"id":"-DUH_QI9aNDq"}},{"cell_type":"code","source":["old_age_filter = filtered_inclusion_set_df['anchor_age'] < 91\n","\n","filtered_inclusion_set_df = filtered_inclusion_set_df[old_age_filter]\n","\n","filtered_inclusion_set_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"vE9QiuBWaQr5","executionInfo":{"status":"ok","timestamp":1719570872277,"user_tz":-60,"elapsed":256,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"dab232e4-90b5-40d3-8b35-f69cfa619542"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id   stay_id ventilation_starttime ventilation_endtime  \\\n","0    10001884  26184834  37510196   2131-01-11 04:40:00 2131-01-12 17:40:00   \n","1    10002428  23473524  35479615   2156-05-11 16:05:00 2156-05-20 10:45:00   \n","2    10002428  28662225  38875437   2156-04-19 20:10:00 2156-04-22 17:05:00   \n","3    10002760  28094813  31831386   2141-04-20 14:36:00 2141-04-21 08:00:00   \n","4    10004235  24181354  34100191   2196-02-24 16:52:00 2196-02-27 16:28:00   \n","\n","   ventilation_itemid ventilation_ordercategoryname extubation_starttime  \\\n","0              225792                   Ventilation  2131-01-12 17:40:00   \n","1              225792                   Ventilation  2156-05-20 10:45:00   \n","2              225792                   Ventilation  2156-04-22 17:10:00   \n","3              225792                   Ventilation  2141-04-21 08:00:00   \n","4              225792                   Ventilation  2196-02-27 16:28:00   \n","\n","   extubation_endtime  extubation_itemid extubation_ordercategoryname  \\\n","0 2131-01-12 17:41:00             227194        Intubation/Extubation   \n","1 2156-05-20 10:46:00             227194        Intubation/Extubation   \n","2 2156-04-22 17:11:00             227194        Intubation/Extubation   \n","3 2141-04-21 08:01:00             227194        Intubation/Extubation   \n","4 2196-02-27 16:29:00             227194        Intubation/Extubation   \n","\n","   ventilation_duration  anchor_age  \n","0                2220.0          68  \n","1               12640.0          80  \n","2                4135.0          80  \n","3                1044.0          56  \n","4                4296.0          47  "],"text/html":["\n","  <div id=\"df-5fa5cf73-4093-4761-a595-1bf66473b0e5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>stay_id</th>\n","      <th>ventilation_starttime</th>\n","      <th>ventilation_endtime</th>\n","      <th>ventilation_itemid</th>\n","      <th>ventilation_ordercategoryname</th>\n","      <th>extubation_starttime</th>\n","      <th>extubation_endtime</th>\n","      <th>extubation_itemid</th>\n","      <th>extubation_ordercategoryname</th>\n","      <th>ventilation_duration</th>\n","      <th>anchor_age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>26184834</td>\n","      <td>37510196</td>\n","      <td>2131-01-11 04:40:00</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>2131-01-12 17:41:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>2220.0</td>\n","      <td>68</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002428</td>\n","      <td>23473524</td>\n","      <td>35479615</td>\n","      <td>2156-05-11 16:05:00</td>\n","      <td>2156-05-20 10:45:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2156-05-20 10:45:00</td>\n","      <td>2156-05-20 10:46:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>12640.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10002428</td>\n","      <td>28662225</td>\n","      <td>38875437</td>\n","      <td>2156-04-19 20:10:00</td>\n","      <td>2156-04-22 17:05:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2156-04-22 17:10:00</td>\n","      <td>2156-04-22 17:11:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4135.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10002760</td>\n","      <td>28094813</td>\n","      <td>31831386</td>\n","      <td>2141-04-20 14:36:00</td>\n","      <td>2141-04-21 08:00:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2141-04-21 08:00:00</td>\n","      <td>2141-04-21 08:01:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>1044.0</td>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10004235</td>\n","      <td>24181354</td>\n","      <td>34100191</td>\n","      <td>2196-02-24 16:52:00</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>2196-02-27 16:29:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4296.0</td>\n","      <td>47</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5fa5cf73-4093-4761-a595-1bf66473b0e5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5fa5cf73-4093-4761-a595-1bf66473b0e5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5fa5cf73-4093-4761-a595-1bf66473b0e5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8987faba-c2ac-47a4-801e-ac322fd2bca8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8987faba-c2ac-47a4-801e-ac322fd2bca8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8987faba-c2ac-47a4-801e-ac322fd2bca8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"filtered_inclusion_set_df","summary":"{\n  \"name\": \"filtered_inclusion_set_df\",\n  \"rows\": 15869,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2897983,\n        \"min\": 10001884,\n        \"max\": 19999442,\n        \"num_unique_values\": 13970,\n        \"samples\": [\n          19913577,\n          17195991,\n          10258162\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hadm_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2878897,\n        \"min\": 20000147,\n        \"max\": 29998399,\n        \"num_unique_values\": 14822,\n        \"samples\": [\n          28037207,\n          29562130,\n          22852513\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stay_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2883213,\n        \"min\": 30000153,\n        \"max\": 39999552,\n        \"num_unique_values\": 15126,\n        \"samples\": [\n          36035871,\n          34815030,\n          35885338\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-11 12:40:00\",\n        \"max\": \"2211-05-01 10:00:00\",\n        \"num_unique_values\": 15753,\n        \"samples\": [\n          \"2155-12-11 13:15:00\",\n          \"2175-08-28 12:55:00\",\n          \"2114-05-05 11:15:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-11 16:30:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 15757,\n        \"samples\": [\n          \"2111-09-10 11:20:00\",\n          \"2174-08-17 12:20:00\",\n          \"2168-11-19 09:50:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 225792,\n        \"max\": 225792,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          225792\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Ventilation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-11 16:30:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 15860,\n        \"samples\": [\n          \"2174-05-23 09:20:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-11 16:31:00\",\n        \"max\": \"2211-05-08 13:08:00\",\n        \"num_unique_values\": 15860,\n        \"samples\": [\n          \"2174-05-23 09:21:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 227194,\n        \"max\": 227194,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          227194\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Intubation/Extubation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4490.504239672159,\n        \"min\": 1.0,\n        \"max\": 59273.0,\n        \"num_unique_values\": 6165,\n        \"samples\": [\n          7795.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anchor_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 18,\n        \"max\": 89,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          65\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["filtered_inclusion_set_df.shape[0]\n","\n","print(f'There are {filtered_inclusion_set_df.shape[0]} patients under IMV with extubation between the ages of 18 and 89')"],"metadata":{"id":"E-_P0BzraXpa","collapsed":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Save the file after Criteria 1\n","file_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic_data_analysis/datasets/inclusion_set/criteria_1.parquet'\n","\n","filtered_inclusion_set_df.to_parquet(file_path)"],"metadata":{"id":"URclGa65aesU"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Criteria 2: Duration of ventilation < 24 hours and > 30 days**\n","\n","Rationale: Very short durations might indicate procedural ventilation rather than true\n","respiratory failure.\n","\n","Extended ventilation durations may indicate chronic conditions or complications\n","that are not the focus of our analysis."],"metadata":{"id":"ko_y2SQ7bAqr"}},{"cell_type":"code","source":["# Load criteria 1 dataset\n","file_path_2 = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic_data_analysis/datasets/exclusion_criteria/criteria_1.parquet'\n","\n","criteria_1_df = pd.read_parquet(file_path_2)\n","\n","criteria_1_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"rC0MuDr3bjJ1","executionInfo":{"status":"ok","timestamp":1719571379964,"user_tz":-60,"elapsed":259,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"19171e89-755a-473a-a439-4084d4f17424"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id   stay_id ventilation_starttime ventilation_endtime  \\\n","0    10001884  26184834  37510196   2131-01-11 04:40:00 2131-01-12 17:40:00   \n","1    10002428  23473524  35479615   2156-05-11 16:05:00 2156-05-20 10:45:00   \n","2    10002428  28662225  38875437   2156-04-19 20:10:00 2156-04-22 17:05:00   \n","3    10002760  28094813  31831386   2141-04-20 14:36:00 2141-04-21 08:00:00   \n","4    10004235  24181354  34100191   2196-02-24 16:52:00 2196-02-27 16:28:00   \n","\n","   ventilation_itemid ventilation_ordercategoryname extubation_starttime  \\\n","0              225792                   Ventilation  2131-01-12 17:40:00   \n","1              225792                   Ventilation  2156-05-20 10:45:00   \n","2              225792                   Ventilation  2156-04-22 17:10:00   \n","3              225792                   Ventilation  2141-04-21 08:00:00   \n","4              225792                   Ventilation  2196-02-27 16:28:00   \n","\n","   extubation_endtime  extubation_itemid extubation_ordercategoryname  \\\n","0 2131-01-12 17:41:00             227194        Intubation/Extubation   \n","1 2156-05-20 10:46:00             227194        Intubation/Extubation   \n","2 2156-04-22 17:11:00             227194        Intubation/Extubation   \n","3 2141-04-21 08:01:00             227194        Intubation/Extubation   \n","4 2196-02-27 16:29:00             227194        Intubation/Extubation   \n","\n","   ventilation_duration  anchor_age  \n","0                2220.0          68  \n","1               12640.0          80  \n","2                4135.0          80  \n","3                1044.0          56  \n","4                4296.0          47  "],"text/html":["\n","  <div id=\"df-be34240e-29a8-413c-a344-f385081c5292\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>stay_id</th>\n","      <th>ventilation_starttime</th>\n","      <th>ventilation_endtime</th>\n","      <th>ventilation_itemid</th>\n","      <th>ventilation_ordercategoryname</th>\n","      <th>extubation_starttime</th>\n","      <th>extubation_endtime</th>\n","      <th>extubation_itemid</th>\n","      <th>extubation_ordercategoryname</th>\n","      <th>ventilation_duration</th>\n","      <th>anchor_age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>26184834</td>\n","      <td>37510196</td>\n","      <td>2131-01-11 04:40:00</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>2131-01-12 17:41:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>2220.0</td>\n","      <td>68</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002428</td>\n","      <td>23473524</td>\n","      <td>35479615</td>\n","      <td>2156-05-11 16:05:00</td>\n","      <td>2156-05-20 10:45:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2156-05-20 10:45:00</td>\n","      <td>2156-05-20 10:46:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>12640.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10002428</td>\n","      <td>28662225</td>\n","      <td>38875437</td>\n","      <td>2156-04-19 20:10:00</td>\n","      <td>2156-04-22 17:05:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2156-04-22 17:10:00</td>\n","      <td>2156-04-22 17:11:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4135.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10002760</td>\n","      <td>28094813</td>\n","      <td>31831386</td>\n","      <td>2141-04-20 14:36:00</td>\n","      <td>2141-04-21 08:00:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2141-04-21 08:00:00</td>\n","      <td>2141-04-21 08:01:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>1044.0</td>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10004235</td>\n","      <td>24181354</td>\n","      <td>34100191</td>\n","      <td>2196-02-24 16:52:00</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>2196-02-27 16:29:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4296.0</td>\n","      <td>47</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-be34240e-29a8-413c-a344-f385081c5292')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-be34240e-29a8-413c-a344-f385081c5292 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-be34240e-29a8-413c-a344-f385081c5292');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ff483e95-0e20-445f-bfff-f4a1b024393c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ff483e95-0e20-445f-bfff-f4a1b024393c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ff483e95-0e20-445f-bfff-f4a1b024393c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"criteria_1_df","summary":"{\n  \"name\": \"criteria_1_df\",\n  \"rows\": 15869,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2897983,\n        \"min\": 10001884,\n        \"max\": 19999442,\n        \"num_unique_values\": 13970,\n        \"samples\": [\n          19913577,\n          17195991,\n          10258162\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hadm_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2878897,\n        \"min\": 20000147,\n        \"max\": 29998399,\n        \"num_unique_values\": 14822,\n        \"samples\": [\n          28037207,\n          29562130,\n          22852513\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stay_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2883213,\n        \"min\": 30000153,\n        \"max\": 39999552,\n        \"num_unique_values\": 15126,\n        \"samples\": [\n          36035871,\n          34815030,\n          35885338\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-11 12:40:00\",\n        \"max\": \"2211-05-01 10:00:00\",\n        \"num_unique_values\": 15753,\n        \"samples\": [\n          \"2155-12-11 13:15:00\",\n          \"2175-08-28 12:55:00\",\n          \"2114-05-05 11:15:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-11 16:30:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 15757,\n        \"samples\": [\n          \"2111-09-10 11:20:00\",\n          \"2174-08-17 12:20:00\",\n          \"2168-11-19 09:50:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 225792,\n        \"max\": 225792,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          225792\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Ventilation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-11 16:30:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 15860,\n        \"samples\": [\n          \"2174-05-23 09:20:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-11 16:31:00\",\n        \"max\": \"2211-05-08 13:08:00\",\n        \"num_unique_values\": 15860,\n        \"samples\": [\n          \"2174-05-23 09:21:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 227194,\n        \"max\": 227194,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          227194\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Intubation/Extubation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4490.504239672159,\n        \"min\": 1.0,\n        \"max\": 59273.0,\n        \"num_unique_values\": 6165,\n        \"samples\": [\n          7795.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anchor_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 18,\n        \"max\": 89,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          65\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["criteria_1_df.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W_gi5KAxcQsH","executionInfo":{"status":"ok","timestamp":1719571396967,"user_tz":-60,"elapsed":257,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"32672810-7d14-4e35-c75e-cbaadff51fbb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["15869"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["criteria_1_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RTKzlbQRcUgn","executionInfo":{"status":"ok","timestamp":1719571440307,"user_tz":-60,"elapsed":251,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"85529e7b-b88b-4b90-b4a2-037b6ec49d39"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 15869 entries, 0 to 16242\n","Data columns (total 13 columns):\n"," #   Column                         Non-Null Count  Dtype         \n","---  ------                         --------------  -----         \n"," 0   subject_id                     15869 non-null  int64         \n"," 1   hadm_id                        15869 non-null  int64         \n"," 2   stay_id                        15869 non-null  int64         \n"," 3   ventilation_starttime          15869 non-null  datetime64[ns]\n"," 4   ventilation_endtime            15869 non-null  datetime64[ns]\n"," 5   ventilation_itemid             15869 non-null  int64         \n"," 6   ventilation_ordercategoryname  15869 non-null  object        \n"," 7   extubation_starttime           15869 non-null  datetime64[ns]\n"," 8   extubation_endtime             15869 non-null  datetime64[ns]\n"," 9   extubation_itemid              15869 non-null  int64         \n"," 10  extubation_ordercategoryname   15869 non-null  object        \n"," 11  ventilation_duration           15869 non-null  float64       \n"," 12  anchor_age                     15869 non-null  int64         \n","dtypes: datetime64[ns](4), float64(1), int64(6), object(2)\n","memory usage: 1.7+ MB\n"]}]},{"cell_type":"code","source":["lower_bound = 24 * 60\n","upper_bound = 30 * 24 * 60"],"metadata":{"id":"RlhBubeif2o_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Filter for greater than 24 hours\n","duration_filter = criteria_1_df['ventilation_duration'] >= lower_bound\n","duration_filter_df = criteria_1_df[duration_filter]\n","duration_filter_df.shape[0]\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QumcF_8ie6XX","executionInfo":{"status":"ok","timestamp":1719572410894,"user_tz":-60,"elapsed":233,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"aab422cb-85c1-41e5-9548-e34a92fcbe46"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["7005"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["# Filter for less than 30 days\n","duration_filter = duration_filter_df['ventilation_duration'] <= upper_bound\n","duration_filter_df = duration_filter_df[duration_filter]\n","duration_filter_df.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9HuAGGRxgLNx","executionInfo":{"status":"ok","timestamp":1719572444965,"user_tz":-60,"elapsed":224,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"e5a2f35f-b20d-4d38-b5cc-6a6af42ffe59"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["7000"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["print(f'There are {duration_filter_df.shape[0]} patients with ventilation duration greater than 24 hours and less than 30 days')"],"metadata":{"id":"pDyveyD_gVlh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Save criterion 2 dataset\n","file_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic_data_analysis/datasets/exclusion_criteria/criteria_2.parquet'\n","\n","duration_filter_df.to_parquet(file_path)"],"metadata":{"id":"gvkjoWckgYPh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Criteria 3: Not first ICU admission**\n","\n","Rationale: Repeated admissions might introduce variability related to different stages of\n","illness or treatment response, complicating the analysis.\n","\n","As such, we only want a dataset that focuses on the first Ventilation event determined by the earliest ventilwtion start time."],"metadata":{"id":"SU8ZueI2gfb7"}},{"cell_type":"code","source":["# Load criteria 2 set\n","file_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic_data_analysis/datasets/exclusion_criteria/criteria_2.parquet'\n","\n","criteria_2_df = pd.read_parquet(file_path)\n","\n","criteria_2_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"XyUrYXCRjRn4","executionInfo":{"status":"ok","timestamp":1719573264311,"user_tz":-60,"elapsed":255,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"2b468167-6e51-412e-d861-8bdd2b5e8e17"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id   stay_id ventilation_starttime ventilation_endtime  \\\n","0    10001884  26184834  37510196   2131-01-11 04:40:00 2131-01-12 17:40:00   \n","1    10002428  23473524  35479615   2156-05-11 16:05:00 2156-05-20 10:45:00   \n","2    10002428  28662225  38875437   2156-04-19 20:10:00 2156-04-22 17:05:00   \n","4    10004235  24181354  34100191   2196-02-24 16:52:00 2196-02-27 16:28:00   \n","6    10004720  22081550  35009126   2186-11-12 20:29:00 2186-11-17 14:00:00   \n","\n","   ventilation_itemid ventilation_ordercategoryname extubation_starttime  \\\n","0              225792                   Ventilation  2131-01-12 17:40:00   \n","1              225792                   Ventilation  2156-05-20 10:45:00   \n","2              225792                   Ventilation  2156-04-22 17:10:00   \n","4              225792                   Ventilation  2196-02-27 16:28:00   \n","6              225792                   Ventilation  2186-11-17 14:00:00   \n","\n","   extubation_endtime  extubation_itemid extubation_ordercategoryname  \\\n","0 2131-01-12 17:41:00             227194        Intubation/Extubation   \n","1 2156-05-20 10:46:00             227194        Intubation/Extubation   \n","2 2156-04-22 17:11:00             227194        Intubation/Extubation   \n","4 2196-02-27 16:29:00             227194        Intubation/Extubation   \n","6 2186-11-17 14:01:00             227194        Intubation/Extubation   \n","\n","   ventilation_duration  anchor_age  \n","0                2220.0          68  \n","1               12640.0          80  \n","2                4135.0          80  \n","4                4296.0          47  \n","6                6811.0          61  "],"text/html":["\n","  <div id=\"df-d9671984-0900-4c6a-b8f3-2e1aed361b1b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>stay_id</th>\n","      <th>ventilation_starttime</th>\n","      <th>ventilation_endtime</th>\n","      <th>ventilation_itemid</th>\n","      <th>ventilation_ordercategoryname</th>\n","      <th>extubation_starttime</th>\n","      <th>extubation_endtime</th>\n","      <th>extubation_itemid</th>\n","      <th>extubation_ordercategoryname</th>\n","      <th>ventilation_duration</th>\n","      <th>anchor_age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>26184834</td>\n","      <td>37510196</td>\n","      <td>2131-01-11 04:40:00</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>2131-01-12 17:41:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>2220.0</td>\n","      <td>68</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002428</td>\n","      <td>23473524</td>\n","      <td>35479615</td>\n","      <td>2156-05-11 16:05:00</td>\n","      <td>2156-05-20 10:45:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2156-05-20 10:45:00</td>\n","      <td>2156-05-20 10:46:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>12640.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10002428</td>\n","      <td>28662225</td>\n","      <td>38875437</td>\n","      <td>2156-04-19 20:10:00</td>\n","      <td>2156-04-22 17:05:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2156-04-22 17:10:00</td>\n","      <td>2156-04-22 17:11:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4135.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10004235</td>\n","      <td>24181354</td>\n","      <td>34100191</td>\n","      <td>2196-02-24 16:52:00</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>2196-02-27 16:29:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4296.0</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>10004720</td>\n","      <td>22081550</td>\n","      <td>35009126</td>\n","      <td>2186-11-12 20:29:00</td>\n","      <td>2186-11-17 14:00:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2186-11-17 14:00:00</td>\n","      <td>2186-11-17 14:01:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>6811.0</td>\n","      <td>61</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d9671984-0900-4c6a-b8f3-2e1aed361b1b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d9671984-0900-4c6a-b8f3-2e1aed361b1b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d9671984-0900-4c6a-b8f3-2e1aed361b1b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f936dd13-6ac2-474f-86ef-4a016a2c7281\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f936dd13-6ac2-474f-86ef-4a016a2c7281')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f936dd13-6ac2-474f-86ef-4a016a2c7281 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"criteria_2_df","summary":"{\n  \"name\": \"criteria_2_df\",\n  \"rows\": 7000,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2909814,\n        \"min\": 10001884,\n        \"max\": 19998843,\n        \"num_unique_values\": 6111,\n        \"samples\": [\n          11809548,\n          14182243,\n          19913577\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hadm_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2847745,\n        \"min\": 20001361,\n        \"max\": 29998399,\n        \"num_unique_values\": 6427,\n        \"samples\": [\n          29816598,\n          25678529,\n          22489202\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stay_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2891495,\n        \"min\": 30000213,\n        \"max\": 39998622,\n        \"num_unique_values\": 6560,\n        \"samples\": [\n          30954082,\n          32465570,\n          32757193\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-12 01:00:00\",\n        \"max\": \"2211-05-01 10:00:00\",\n        \"num_unique_values\": 6942,\n        \"samples\": [\n          \"2181-09-01 22:50:00\",\n          \"2139-06-13 15:30:00\",\n          \"2121-03-19 15:45:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:22:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 6943,\n        \"samples\": [\n          \"2129-02-20 19:27:00\",\n          \"2167-09-30 12:07:00\",\n          \"2118-06-19 13:19:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 225792,\n        \"max\": 225792,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          225792\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Ventilation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:23:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 6998,\n        \"samples\": [\n          \"2129-03-10 10:34:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:24:00\",\n        \"max\": \"2211-05-08 13:08:00\",\n        \"num_unique_values\": 6998,\n        \"samples\": [\n          \"2129-03-10 10:35:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 227194,\n        \"max\": 227194,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          227194\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Intubation/Extubation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5179.522470664632,\n        \"min\": 1440.0,\n        \"max\": 42432.0,\n        \"num_unique_values\": 4765,\n        \"samples\": [\n          17458.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anchor_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 18,\n        \"max\": 89,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          51\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["criteria_2_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3yKEApTBjKHY","executionInfo":{"status":"ok","timestamp":1719573284955,"user_tz":-60,"elapsed":249,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"b31a8487-c0d5-4b6a-aefe-86870b7145c0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 7000 entries, 0 to 16240\n","Data columns (total 13 columns):\n"," #   Column                         Non-Null Count  Dtype         \n","---  ------                         --------------  -----         \n"," 0   subject_id                     7000 non-null   int64         \n"," 1   hadm_id                        7000 non-null   int64         \n"," 2   stay_id                        7000 non-null   int64         \n"," 3   ventilation_starttime          7000 non-null   datetime64[ns]\n"," 4   ventilation_endtime            7000 non-null   datetime64[ns]\n"," 5   ventilation_itemid             7000 non-null   int64         \n"," 6   ventilation_ordercategoryname  7000 non-null   object        \n"," 7   extubation_starttime           7000 non-null   datetime64[ns]\n"," 8   extubation_endtime             7000 non-null   datetime64[ns]\n"," 9   extubation_itemid              7000 non-null   int64         \n"," 10  extubation_ordercategoryname   7000 non-null   object        \n"," 11  ventilation_duration           7000 non-null   float64       \n"," 12  anchor_age                     7000 non-null   int64         \n","dtypes: datetime64[ns](4), float64(1), int64(6), object(2)\n","memory usage: 765.6+ KB\n"]}]},{"cell_type":"code","source":["inclusion_set.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h9t6jL5-jQlO","executionInfo":{"status":"ok","timestamp":1719573315528,"user_tz":-60,"elapsed":4,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"f8ecf35b-d008-48d4-a494-49a77b23aa3c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 16243 entries, 0 to 16242\n","Data columns (total 4 columns):\n"," #   Column                        Non-Null Count  Dtype  \n","---  ------                        --------------  -----  \n"," 0   subject_id                    16243 non-null  int64  \n"," 1   stay_id                       16243 non-null  int64  \n"," 2   ventilation_duration_minutes  16243 non-null  float64\n"," 3   stay_number                   16243 non-null  int64  \n","dtypes: float64(1), int64(3)\n","memory usage: 507.7 KB\n"]}]},{"cell_type":"code","source":["# Only include the first ventilation event for each patient\n","sorted_df = criteria_2_df.sort_values(by=['subject_id', 'ventilation_starttime'])\n","sorted_unique_df = sorted_df.drop_duplicates(subset=['subject_id'], keep='first')\n","\n","sorted_unique_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"t4xo-L_2j94Y","executionInfo":{"status":"ok","timestamp":1719573454821,"user_tz":-60,"elapsed":227,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"3ad045fa-529f-42de-8468-df52560cc623"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id   stay_id ventilation_starttime ventilation_endtime  \\\n","0    10001884  26184834  37510196   2131-01-11 04:40:00 2131-01-12 17:40:00   \n","2    10002428  28662225  38875437   2156-04-19 20:10:00 2156-04-22 17:05:00   \n","4    10004235  24181354  34100191   2196-02-24 16:52:00 2196-02-27 16:28:00   \n","6    10004720  22081550  35009126   2186-11-12 20:29:00 2186-11-17 14:00:00   \n","7    10004733  27411876  39635619   2174-12-04 12:25:00 2174-12-07 16:20:00   \n","\n","   ventilation_itemid ventilation_ordercategoryname extubation_starttime  \\\n","0              225792                   Ventilation  2131-01-12 17:40:00   \n","2              225792                   Ventilation  2156-04-22 17:10:00   \n","4              225792                   Ventilation  2196-02-27 16:28:00   \n","6              225792                   Ventilation  2186-11-17 14:00:00   \n","7              225792                   Ventilation  2174-12-07 16:20:00   \n","\n","   extubation_endtime  extubation_itemid extubation_ordercategoryname  \\\n","0 2131-01-12 17:41:00             227194        Intubation/Extubation   \n","2 2156-04-22 17:11:00             227194        Intubation/Extubation   \n","4 2196-02-27 16:29:00             227194        Intubation/Extubation   \n","6 2186-11-17 14:01:00             227194        Intubation/Extubation   \n","7 2174-12-07 16:21:00             227194        Intubation/Extubation   \n","\n","   ventilation_duration  anchor_age  \n","0                2220.0          68  \n","2                4135.0          80  \n","4                4296.0          47  \n","6                6811.0          61  \n","7                4555.0          51  "],"text/html":["\n","  <div id=\"df-7622f2d0-3c1b-44d6-9ecd-e06c3fe53841\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>stay_id</th>\n","      <th>ventilation_starttime</th>\n","      <th>ventilation_endtime</th>\n","      <th>ventilation_itemid</th>\n","      <th>ventilation_ordercategoryname</th>\n","      <th>extubation_starttime</th>\n","      <th>extubation_endtime</th>\n","      <th>extubation_itemid</th>\n","      <th>extubation_ordercategoryname</th>\n","      <th>ventilation_duration</th>\n","      <th>anchor_age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>26184834</td>\n","      <td>37510196</td>\n","      <td>2131-01-11 04:40:00</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>2131-01-12 17:41:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>2220.0</td>\n","      <td>68</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10002428</td>\n","      <td>28662225</td>\n","      <td>38875437</td>\n","      <td>2156-04-19 20:10:00</td>\n","      <td>2156-04-22 17:05:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2156-04-22 17:10:00</td>\n","      <td>2156-04-22 17:11:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4135.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10004235</td>\n","      <td>24181354</td>\n","      <td>34100191</td>\n","      <td>2196-02-24 16:52:00</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>2196-02-27 16:29:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4296.0</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>10004720</td>\n","      <td>22081550</td>\n","      <td>35009126</td>\n","      <td>2186-11-12 20:29:00</td>\n","      <td>2186-11-17 14:00:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2186-11-17 14:00:00</td>\n","      <td>2186-11-17 14:01:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>6811.0</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>10004733</td>\n","      <td>27411876</td>\n","      <td>39635619</td>\n","      <td>2174-12-04 12:25:00</td>\n","      <td>2174-12-07 16:20:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2174-12-07 16:20:00</td>\n","      <td>2174-12-07 16:21:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4555.0</td>\n","      <td>51</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7622f2d0-3c1b-44d6-9ecd-e06c3fe53841')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7622f2d0-3c1b-44d6-9ecd-e06c3fe53841 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7622f2d0-3c1b-44d6-9ecd-e06c3fe53841');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fc65ee24-92f7-40a3-b95a-fcdca4025fd5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fc65ee24-92f7-40a3-b95a-fcdca4025fd5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fc65ee24-92f7-40a3-b95a-fcdca4025fd5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"sorted_unique_df","summary":"{\n  \"name\": \"sorted_unique_df\",\n  \"rows\": 6111,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2908871,\n        \"min\": 10001884,\n        \"max\": 19998843,\n        \"num_unique_values\": 6111,\n        \"samples\": [\n          11809548,\n          14182243,\n          19913577\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hadm_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2852430,\n        \"min\": 20001361,\n        \"max\": 29998399,\n        \"num_unique_values\": 6111,\n        \"samples\": [\n          20495053,\n          23034067,\n          20355379\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stay_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2889948,\n        \"min\": 30000213,\n        \"max\": 39998622,\n        \"num_unique_values\": 6111,\n        \"samples\": [\n          36638286,\n          35804465,\n          37544707\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-12 01:00:00\",\n        \"max\": \"2211-05-01 10:00:00\",\n        \"num_unique_values\": 6110,\n        \"samples\": [\n          \"2125-10-15 13:26:00\",\n          \"2171-08-06 17:50:00\",\n          \"2114-05-10 14:40:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:22:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 6111,\n        \"samples\": [\n          \"2125-10-17 07:30:00\",\n          \"2171-08-12 19:00:00\",\n          \"2114-05-11 16:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 225792,\n        \"max\": 225792,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          225792\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Ventilation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:23:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 6109,\n        \"samples\": [\n          \"2125-10-17 07:30:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:24:00\",\n        \"max\": \"2211-05-08 13:08:00\",\n        \"num_unique_values\": 6109,\n        \"samples\": [\n          \"2125-10-17 07:31:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 227194,\n        \"max\": 227194,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          227194\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Intubation/Extubation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5166.766372756307,\n        \"min\": 1440.0,\n        \"max\": 42432.0,\n        \"num_unique_values\": 4325,\n        \"samples\": [\n          2854.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anchor_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 18,\n        \"max\": 89,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          51\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["print(f'{sorted_unique_df.shape[0]} patients with first ventilation event')"],"metadata":{"id":"onP-3ybxkNiU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Save criterion 3 dataset\n","file_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic_data_analysis/datasets/exclusion_criteria/criteria_3.parquet'\n","\n","sorted_unique_df.to_parquet(file_path)"],"metadata":{"id":"FSd_jYS6kVXQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Criteria 4: Patients under palliative care and end-of-life patients**\n","\n","Exclude patients indicated to be under palliative care / end of life\n","\n","ICD diagnoses:\n","V667/Z515 = Encounter for palliative care\n","\n","Chartevents:\n","229150\n","229152\n","229154\n","229155\n","\n","All itemid that relate to palliative care.\n","\n","All patients that either have a linked diagnosis of palliative care or a chart event corresponding to one of the itemids listed above prior to or during ventilation for that stay will be removed."],"metadata":{"id":"yC6NCew1xHOl"}},{"cell_type":"code","source":["# Load criterion 3 dataset\n","file_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic_data_analysis/datasets/exclusion_criteria/criteria_3.parquet'\n","\n","criteria_3_df = pd.read_parquet(file_path)\n","\n","criteria_3_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"Ggp6gbKt18GQ","executionInfo":{"status":"ok","timestamp":1719826531260,"user_tz":-60,"elapsed":1049,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"37ab429c-8df0-4658-bcc1-568020bf732c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id   stay_id ventilation_starttime ventilation_endtime  \\\n","0    10001884  26184834  37510196   2131-01-11 04:40:00 2131-01-12 17:40:00   \n","2    10002428  28662225  38875437   2156-04-19 20:10:00 2156-04-22 17:05:00   \n","4    10004235  24181354  34100191   2196-02-24 16:52:00 2196-02-27 16:28:00   \n","6    10004720  22081550  35009126   2186-11-12 20:29:00 2186-11-17 14:00:00   \n","7    10004733  27411876  39635619   2174-12-04 12:25:00 2174-12-07 16:20:00   \n","\n","   ventilation_itemid ventilation_ordercategoryname extubation_starttime  \\\n","0              225792                   Ventilation  2131-01-12 17:40:00   \n","2              225792                   Ventilation  2156-04-22 17:10:00   \n","4              225792                   Ventilation  2196-02-27 16:28:00   \n","6              225792                   Ventilation  2186-11-17 14:00:00   \n","7              225792                   Ventilation  2174-12-07 16:20:00   \n","\n","   extubation_endtime  extubation_itemid extubation_ordercategoryname  \\\n","0 2131-01-12 17:41:00             227194        Intubation/Extubation   \n","2 2156-04-22 17:11:00             227194        Intubation/Extubation   \n","4 2196-02-27 16:29:00             227194        Intubation/Extubation   \n","6 2186-11-17 14:01:00             227194        Intubation/Extubation   \n","7 2174-12-07 16:21:00             227194        Intubation/Extubation   \n","\n","   ventilation_duration  anchor_age  \n","0                2220.0          68  \n","2                4135.0          80  \n","4                4296.0          47  \n","6                6811.0          61  \n","7                4555.0          51  "],"text/html":["\n","  <div id=\"df-6f586808-b418-4180-beb7-4d3ef137c86a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>stay_id</th>\n","      <th>ventilation_starttime</th>\n","      <th>ventilation_endtime</th>\n","      <th>ventilation_itemid</th>\n","      <th>ventilation_ordercategoryname</th>\n","      <th>extubation_starttime</th>\n","      <th>extubation_endtime</th>\n","      <th>extubation_itemid</th>\n","      <th>extubation_ordercategoryname</th>\n","      <th>ventilation_duration</th>\n","      <th>anchor_age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>26184834</td>\n","      <td>37510196</td>\n","      <td>2131-01-11 04:40:00</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>2131-01-12 17:41:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>2220.0</td>\n","      <td>68</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10002428</td>\n","      <td>28662225</td>\n","      <td>38875437</td>\n","      <td>2156-04-19 20:10:00</td>\n","      <td>2156-04-22 17:05:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2156-04-22 17:10:00</td>\n","      <td>2156-04-22 17:11:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4135.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10004235</td>\n","      <td>24181354</td>\n","      <td>34100191</td>\n","      <td>2196-02-24 16:52:00</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>2196-02-27 16:29:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4296.0</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>10004720</td>\n","      <td>22081550</td>\n","      <td>35009126</td>\n","      <td>2186-11-12 20:29:00</td>\n","      <td>2186-11-17 14:00:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2186-11-17 14:00:00</td>\n","      <td>2186-11-17 14:01:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>6811.0</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>10004733</td>\n","      <td>27411876</td>\n","      <td>39635619</td>\n","      <td>2174-12-04 12:25:00</td>\n","      <td>2174-12-07 16:20:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2174-12-07 16:20:00</td>\n","      <td>2174-12-07 16:21:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4555.0</td>\n","      <td>51</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6f586808-b418-4180-beb7-4d3ef137c86a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6f586808-b418-4180-beb7-4d3ef137c86a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6f586808-b418-4180-beb7-4d3ef137c86a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d0e2d3bd-2e9c-4f3d-8c01-3e53960e05f0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d0e2d3bd-2e9c-4f3d-8c01-3e53960e05f0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d0e2d3bd-2e9c-4f3d-8c01-3e53960e05f0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"criteria_3_df","summary":"{\n  \"name\": \"criteria_3_df\",\n  \"rows\": 6111,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2908871,\n        \"min\": 10001884,\n        \"max\": 19998843,\n        \"num_unique_values\": 6111,\n        \"samples\": [\n          11809548,\n          14182243,\n          19913577\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hadm_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2852430,\n        \"min\": 20001361,\n        \"max\": 29998399,\n        \"num_unique_values\": 6111,\n        \"samples\": [\n          20495053,\n          23034067,\n          20355379\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stay_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2889948,\n        \"min\": 30000213,\n        \"max\": 39998622,\n        \"num_unique_values\": 6111,\n        \"samples\": [\n          36638286,\n          35804465,\n          37544707\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-12 01:00:00\",\n        \"max\": \"2211-05-01 10:00:00\",\n        \"num_unique_values\": 6110,\n        \"samples\": [\n          \"2125-10-15 13:26:00\",\n          \"2171-08-06 17:50:00\",\n          \"2114-05-10 14:40:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:22:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 6111,\n        \"samples\": [\n          \"2125-10-17 07:30:00\",\n          \"2171-08-12 19:00:00\",\n          \"2114-05-11 16:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 225792,\n        \"max\": 225792,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          225792\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Ventilation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:23:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 6109,\n        \"samples\": [\n          \"2125-10-17 07:30:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:24:00\",\n        \"max\": \"2211-05-08 13:08:00\",\n        \"num_unique_values\": 6109,\n        \"samples\": [\n          \"2125-10-17 07:31:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 227194,\n        \"max\": 227194,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          227194\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Intubation/Extubation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5166.766372756307,\n        \"min\": 1440.0,\n        \"max\": 42432.0,\n        \"num_unique_values\": 4325,\n        \"samples\": [\n          2854.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anchor_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 18,\n        \"max\": 89,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          51\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# Convert and save criteria_3 df to csv for visualisaton\n","criteria_3_df.to_csv('/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic_data_analysis/datasets/exclusion_criteria/criteria_3.csv')"],"metadata":{"id":"fiOmaexn2Mqr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Remove all patients with diagnoses corresponding to palliative care\n","diagnoses_codes = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic-iv-2.2-raw-data/hosp/d_icd_diagnoses.csv'\n","patitient_diagnoses = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic-iv-2.2-raw-data/hosp/diagnoses_icd.csv'\n","\n","diagnoses_codes_df = pd.read_csv(diagnoses_codes)\n","patient_diagnoses_df = pd.read_csv(patitient_diagnoses)"],"metadata":{"id":"Jqb_luqE1HmO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["diagnoses_codes_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"XtNHofeI1S-P","executionInfo":{"status":"ok","timestamp":1719577953002,"user_tz":-60,"elapsed":225,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"583ca337-0af4-4ad4-d6ac-58fee63a0bd9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  icd_code  icd_version                             long_title\n","0     0010            9         Cholera due to vibrio cholerae\n","1     0011            9  Cholera due to vibrio cholerae el tor\n","2     0019            9                   Cholera, unspecified\n","3     0020            9                          Typhoid fever\n","4     0021            9                    Paratyphoid fever A"],"text/html":["\n","  <div id=\"df-dd11a993-01a2-4e97-bfb2-a1df2cba801f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>icd_code</th>\n","      <th>icd_version</th>\n","      <th>long_title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0010</td>\n","      <td>9</td>\n","      <td>Cholera due to vibrio cholerae</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0011</td>\n","      <td>9</td>\n","      <td>Cholera due to vibrio cholerae el tor</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0019</td>\n","      <td>9</td>\n","      <td>Cholera, unspecified</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0020</td>\n","      <td>9</td>\n","      <td>Typhoid fever</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0021</td>\n","      <td>9</td>\n","      <td>Paratyphoid fever A</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd11a993-01a2-4e97-bfb2-a1df2cba801f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dd11a993-01a2-4e97-bfb2-a1df2cba801f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dd11a993-01a2-4e97-bfb2-a1df2cba801f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b3bf3b53-7695-49ff-b17b-c9b08662d191\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b3bf3b53-7695-49ff-b17b-c9b08662d191')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b3bf3b53-7695-49ff-b17b-c9b08662d191 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"diagnoses_codes_df"}},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["patient_diagnoses_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"DJXUMgEd1UnO","executionInfo":{"status":"ok","timestamp":1719577958910,"user_tz":-60,"elapsed":257,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"63864244-d9a9-412c-b297-cae8ff6cdfc5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id  seq_num icd_code  icd_version\n","0    10000032  22595853        1     5723            9\n","1    10000032  22595853        2    78959            9\n","2    10000032  22595853        3     5715            9\n","3    10000032  22595853        4    07070            9\n","4    10000032  22595853        5      496            9"],"text/html":["\n","  <div id=\"df-b53ff84b-fec1-4ebc-8118-efd9f1f55c39\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>seq_num</th>\n","      <th>icd_code</th>\n","      <th>icd_version</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10000032</td>\n","      <td>22595853</td>\n","      <td>1</td>\n","      <td>5723</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10000032</td>\n","      <td>22595853</td>\n","      <td>2</td>\n","      <td>78959</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10000032</td>\n","      <td>22595853</td>\n","      <td>3</td>\n","      <td>5715</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10000032</td>\n","      <td>22595853</td>\n","      <td>4</td>\n","      <td>07070</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10000032</td>\n","      <td>22595853</td>\n","      <td>5</td>\n","      <td>496</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b53ff84b-fec1-4ebc-8118-efd9f1f55c39')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b53ff84b-fec1-4ebc-8118-efd9f1f55c39 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b53ff84b-fec1-4ebc-8118-efd9f1f55c39');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d86822e6-f1f5-47ad-a56e-76d37ce1d555\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d86822e6-f1f5-47ad-a56e-76d37ce1d555')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d86822e6-f1f5-47ad-a56e-76d37ce1d555 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"patient_diagnoses_df"}},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["patient_diagnoses_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z7B0ke791WGX","executionInfo":{"status":"ok","timestamp":1719577990480,"user_tz":-60,"elapsed":227,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"2e84350a-028f-43ed-e518-03be68ca63f8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 4756326 entries, 0 to 4756325\n","Data columns (total 5 columns):\n"," #   Column       Dtype \n","---  ------       ----- \n"," 0   subject_id   int64 \n"," 1   hadm_id      int64 \n"," 2   seq_num      int64 \n"," 3   icd_code     object\n"," 4   icd_version  int64 \n","dtypes: int64(4), object(1)\n","memory usage: 181.4+ MB\n"]}]},{"cell_type":"code","source":["filtered_df = diagnoses_codes_df[diagnoses_codes_df['icd_code'] == 'V667']\n","\n","if not filtered_df.empty:\n","    long_title = filtered_df.iloc[0]['long_title']\n","    print(f\"The long title associated with ICD code V667 is: {long_title}\")\n","else:\n","    print(\"ICD code V667 not found in the dataframe.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xeVle6UD2tzy","executionInfo":{"status":"ok","timestamp":1719592669412,"user_tz":-60,"elapsed":221,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"c8c1fe01-22d6-457a-a91d-712c4d61f910"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The long title associated with ICD code V667 is: Encounter for palliative care\n"]}]},{"cell_type":"code","source":["filtered_df = diagnoses_codes_df[diagnoses_codes_df['icd_code'] == 'Z515']\n","\n","if not filtered_df.empty:\n","    long_title = filtered_df.iloc[0]['long_title']\n","    print(f\"The long title associated with ICD code Z515 is: {long_title}\")\n","else:\n","    print(\"ICD code Z515 not found in the dataframe.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P7rqGQVo28ga","executionInfo":{"status":"ok","timestamp":1719578401821,"user_tz":-60,"elapsed":235,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"800b1c1a-570e-423f-f0b3-0c4ff2d0dc64"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The long title associated with ICD code Z515 is: Encounter for palliative care\n"]}]},{"cell_type":"code","source":["codes_to_exclude = ['V667', 'Z515']\n","patients_to_exclude = patient_diagnoses_df[patient_diagnoses_df['icd_code'].isin(codes_to_exclude)]\n","\n","# Remove these patients from the latest set\n","non_palliative_df = criteria_3_df[~criteria_3_df['subject_id'].isin(patients_to_exclude)]\n","\n","non_palliative_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"CJ12l5_k1eRV","executionInfo":{"status":"ok","timestamp":1719592672978,"user_tz":-60,"elapsed":241,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"031ffd6f-9a84-426f-bc29-88c05c40614c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id   stay_id ventilation_starttime ventilation_endtime  \\\n","0    10001884  26184834  37510196   2131-01-11 04:40:00 2131-01-12 17:40:00   \n","2    10002428  28662225  38875437   2156-04-19 20:10:00 2156-04-22 17:05:00   \n","4    10004235  24181354  34100191   2196-02-24 16:52:00 2196-02-27 16:28:00   \n","6    10004720  22081550  35009126   2186-11-12 20:29:00 2186-11-17 14:00:00   \n","7    10004733  27411876  39635619   2174-12-04 12:25:00 2174-12-07 16:20:00   \n","\n","   ventilation_itemid ventilation_ordercategoryname extubation_starttime  \\\n","0              225792                   Ventilation  2131-01-12 17:40:00   \n","2              225792                   Ventilation  2156-04-22 17:10:00   \n","4              225792                   Ventilation  2196-02-27 16:28:00   \n","6              225792                   Ventilation  2186-11-17 14:00:00   \n","7              225792                   Ventilation  2174-12-07 16:20:00   \n","\n","   extubation_endtime  extubation_itemid extubation_ordercategoryname  \\\n","0 2131-01-12 17:41:00             227194        Intubation/Extubation   \n","2 2156-04-22 17:11:00             227194        Intubation/Extubation   \n","4 2196-02-27 16:29:00             227194        Intubation/Extubation   \n","6 2186-11-17 14:01:00             227194        Intubation/Extubation   \n","7 2174-12-07 16:21:00             227194        Intubation/Extubation   \n","\n","   ventilation_duration  anchor_age  \n","0                2220.0          68  \n","2                4135.0          80  \n","4                4296.0          47  \n","6                6811.0          61  \n","7                4555.0          51  "],"text/html":["\n","  <div id=\"df-8198f34c-8f24-492b-a807-a6640b221015\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>stay_id</th>\n","      <th>ventilation_starttime</th>\n","      <th>ventilation_endtime</th>\n","      <th>ventilation_itemid</th>\n","      <th>ventilation_ordercategoryname</th>\n","      <th>extubation_starttime</th>\n","      <th>extubation_endtime</th>\n","      <th>extubation_itemid</th>\n","      <th>extubation_ordercategoryname</th>\n","      <th>ventilation_duration</th>\n","      <th>anchor_age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>26184834</td>\n","      <td>37510196</td>\n","      <td>2131-01-11 04:40:00</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>2131-01-12 17:41:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>2220.0</td>\n","      <td>68</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10002428</td>\n","      <td>28662225</td>\n","      <td>38875437</td>\n","      <td>2156-04-19 20:10:00</td>\n","      <td>2156-04-22 17:05:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2156-04-22 17:10:00</td>\n","      <td>2156-04-22 17:11:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4135.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10004235</td>\n","      <td>24181354</td>\n","      <td>34100191</td>\n","      <td>2196-02-24 16:52:00</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>2196-02-27 16:29:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4296.0</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>10004720</td>\n","      <td>22081550</td>\n","      <td>35009126</td>\n","      <td>2186-11-12 20:29:00</td>\n","      <td>2186-11-17 14:00:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2186-11-17 14:00:00</td>\n","      <td>2186-11-17 14:01:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>6811.0</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>10004733</td>\n","      <td>27411876</td>\n","      <td>39635619</td>\n","      <td>2174-12-04 12:25:00</td>\n","      <td>2174-12-07 16:20:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2174-12-07 16:20:00</td>\n","      <td>2174-12-07 16:21:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4555.0</td>\n","      <td>51</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8198f34c-8f24-492b-a807-a6640b221015')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8198f34c-8f24-492b-a807-a6640b221015 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8198f34c-8f24-492b-a807-a6640b221015');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d1146d0c-d7e4-4b99-972e-834e676103c0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d1146d0c-d7e4-4b99-972e-834e676103c0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d1146d0c-d7e4-4b99-972e-834e676103c0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"non_palliative_df","summary":"{\n  \"name\": \"non_palliative_df\",\n  \"rows\": 6111,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2908871,\n        \"min\": 10001884,\n        \"max\": 19998843,\n        \"num_unique_values\": 6111,\n        \"samples\": [\n          11809548,\n          14182243,\n          19913577\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hadm_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2852430,\n        \"min\": 20001361,\n        \"max\": 29998399,\n        \"num_unique_values\": 6111,\n        \"samples\": [\n          20495053,\n          23034067,\n          20355379\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stay_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2889948,\n        \"min\": 30000213,\n        \"max\": 39998622,\n        \"num_unique_values\": 6111,\n        \"samples\": [\n          36638286,\n          35804465,\n          37544707\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-12 01:00:00\",\n        \"max\": \"2211-05-01 10:00:00\",\n        \"num_unique_values\": 6110,\n        \"samples\": [\n          \"2125-10-15 13:26:00\",\n          \"2171-08-06 17:50:00\",\n          \"2114-05-10 14:40:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:22:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 6111,\n        \"samples\": [\n          \"2125-10-17 07:30:00\",\n          \"2171-08-12 19:00:00\",\n          \"2114-05-11 16:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 225792,\n        \"max\": 225792,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          225792\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Ventilation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:23:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 6109,\n        \"samples\": [\n          \"2125-10-17 07:30:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:24:00\",\n        \"max\": \"2211-05-08 13:08:00\",\n        \"num_unique_values\": 6109,\n        \"samples\": [\n          \"2125-10-17 07:31:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 227194,\n        \"max\": 227194,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          227194\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Intubation/Extubation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5166.766372756307,\n        \"min\": 1440.0,\n        \"max\": 42432.0,\n        \"num_unique_values\": 4325,\n        \"samples\": [\n          2854.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anchor_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 18,\n        \"max\": 89,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          51\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["print('Number of patients with associated palliative diagnoses')\n","non_palliative_df.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"668PSD_B2Fgh","executionInfo":{"status":"ok","timestamp":1719578455411,"user_tz":-60,"elapsed":213,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"b58c1a9f-a9bd-45ef-bcaf-223b3a6154b5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6111"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["# Save criterion 4.1 for now\n","file_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic_data_analysis/datasets/exclusion_criteria/criteria_4_1.parquet'\n","\n","non_palliative_df.to_parquet(file_path)"],"metadata":{"id":"xdNpuFvTssC4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Apply Criterion 4 using data from chartevents table**"],"metadata":{"id":"lJyfH0t5eBF2"}},{"cell_type":"markdown","source":["**Note: The file is too large to be handled on Google Colab. Thus, the exclusion of palliative patients as indicated by the chartevents table will be carried out locally and the file then re-uploaded onto here for the next criteria to be applied.**\n","\n","To see the code used to extract the palliative patients under chart event please see the following file:\n","*exclusion_criteria_criteria_4_chartevents_applied.ipynb*\n","\n","The logic was applied as below:\n","Patients who have an associated itemid in chartevents that is one of the following {229150, 229152, 229154, 229155} relating to palliative care and the charttime of that event is before the ventilation_endtime for the patient were removed."],"metadata":{"id":"GTSUSBf5eQVz"}},{"cell_type":"code","source":["# Load dataset prior to chartevents palliative care patient extraction\n","criteria_4_1_file_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic_data_analysis/datasets/exclusion_criteria/criteria_4_1.parquet'\n","\n","criteria_4_1_df = pd.read_parquet(criteria_4_1_file_path)\n","\n","criteria_4_1_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"VPRpf2k9o80w","executionInfo":{"status":"ok","timestamp":1719826410291,"user_tz":-60,"elapsed":923,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"6854540e-359b-46ee-ff14-80c3798dd68d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id   stay_id ventilation_starttime ventilation_endtime  \\\n","0    10001884  26184834  37510196   2131-01-11 04:40:00 2131-01-12 17:40:00   \n","2    10002428  28662225  38875437   2156-04-19 20:10:00 2156-04-22 17:05:00   \n","4    10004235  24181354  34100191   2196-02-24 16:52:00 2196-02-27 16:28:00   \n","6    10004720  22081550  35009126   2186-11-12 20:29:00 2186-11-17 14:00:00   \n","7    10004733  27411876  39635619   2174-12-04 12:25:00 2174-12-07 16:20:00   \n","\n","   ventilation_itemid ventilation_ordercategoryname extubation_starttime  \\\n","0              225792                   Ventilation  2131-01-12 17:40:00   \n","2              225792                   Ventilation  2156-04-22 17:10:00   \n","4              225792                   Ventilation  2196-02-27 16:28:00   \n","6              225792                   Ventilation  2186-11-17 14:00:00   \n","7              225792                   Ventilation  2174-12-07 16:20:00   \n","\n","   extubation_endtime  extubation_itemid extubation_ordercategoryname  \\\n","0 2131-01-12 17:41:00             227194        Intubation/Extubation   \n","2 2156-04-22 17:11:00             227194        Intubation/Extubation   \n","4 2196-02-27 16:29:00             227194        Intubation/Extubation   \n","6 2186-11-17 14:01:00             227194        Intubation/Extubation   \n","7 2174-12-07 16:21:00             227194        Intubation/Extubation   \n","\n","   ventilation_duration  anchor_age  \n","0                2220.0          68  \n","2                4135.0          80  \n","4                4296.0          47  \n","6                6811.0          61  \n","7                4555.0          51  "],"text/html":["\n","  <div id=\"df-64cdd42e-59e9-4dd1-829b-ac75f7b0cde6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>stay_id</th>\n","      <th>ventilation_starttime</th>\n","      <th>ventilation_endtime</th>\n","      <th>ventilation_itemid</th>\n","      <th>ventilation_ordercategoryname</th>\n","      <th>extubation_starttime</th>\n","      <th>extubation_endtime</th>\n","      <th>extubation_itemid</th>\n","      <th>extubation_ordercategoryname</th>\n","      <th>ventilation_duration</th>\n","      <th>anchor_age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>26184834</td>\n","      <td>37510196</td>\n","      <td>2131-01-11 04:40:00</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>2131-01-12 17:41:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>2220.0</td>\n","      <td>68</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10002428</td>\n","      <td>28662225</td>\n","      <td>38875437</td>\n","      <td>2156-04-19 20:10:00</td>\n","      <td>2156-04-22 17:05:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2156-04-22 17:10:00</td>\n","      <td>2156-04-22 17:11:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4135.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10004235</td>\n","      <td>24181354</td>\n","      <td>34100191</td>\n","      <td>2196-02-24 16:52:00</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>2196-02-27 16:29:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4296.0</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>10004720</td>\n","      <td>22081550</td>\n","      <td>35009126</td>\n","      <td>2186-11-12 20:29:00</td>\n","      <td>2186-11-17 14:00:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2186-11-17 14:00:00</td>\n","      <td>2186-11-17 14:01:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>6811.0</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>10004733</td>\n","      <td>27411876</td>\n","      <td>39635619</td>\n","      <td>2174-12-04 12:25:00</td>\n","      <td>2174-12-07 16:20:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2174-12-07 16:20:00</td>\n","      <td>2174-12-07 16:21:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4555.0</td>\n","      <td>51</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-64cdd42e-59e9-4dd1-829b-ac75f7b0cde6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-64cdd42e-59e9-4dd1-829b-ac75f7b0cde6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-64cdd42e-59e9-4dd1-829b-ac75f7b0cde6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2bd83977-6613-4839-abd5-07f500582c46\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2bd83977-6613-4839-abd5-07f500582c46')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2bd83977-6613-4839-abd5-07f500582c46 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"criteria_4_1_df","summary":"{\n  \"name\": \"criteria_4_1_df\",\n  \"rows\": 6111,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2908871,\n        \"min\": 10001884,\n        \"max\": 19998843,\n        \"num_unique_values\": 6111,\n        \"samples\": [\n          11809548,\n          14182243,\n          19913577\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hadm_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2852430,\n        \"min\": 20001361,\n        \"max\": 29998399,\n        \"num_unique_values\": 6111,\n        \"samples\": [\n          20495053,\n          23034067,\n          20355379\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stay_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2889948,\n        \"min\": 30000213,\n        \"max\": 39998622,\n        \"num_unique_values\": 6111,\n        \"samples\": [\n          36638286,\n          35804465,\n          37544707\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-12 01:00:00\",\n        \"max\": \"2211-05-01 10:00:00\",\n        \"num_unique_values\": 6110,\n        \"samples\": [\n          \"2125-10-15 13:26:00\",\n          \"2171-08-06 17:50:00\",\n          \"2114-05-10 14:40:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:22:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 6111,\n        \"samples\": [\n          \"2125-10-17 07:30:00\",\n          \"2171-08-12 19:00:00\",\n          \"2114-05-11 16:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 225792,\n        \"max\": 225792,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          225792\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Ventilation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:23:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 6109,\n        \"samples\": [\n          \"2125-10-17 07:30:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:24:00\",\n        \"max\": \"2211-05-08 13:08:00\",\n        \"num_unique_values\": 6109,\n        \"samples\": [\n          \"2125-10-17 07:31:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 227194,\n        \"max\": 227194,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          227194\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Intubation/Extubation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5166.766372756307,\n        \"min\": 1440.0,\n        \"max\": 42432.0,\n        \"num_unique_values\": 4325,\n        \"samples\": [\n          2854.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anchor_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 18,\n        \"max\": 89,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          51\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# Load file post palliative filtering being applied\n","criteria_4_2_file_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic_data_analysis/datasets/exclusion_criteria/criteria_4_2.parquet'\n","\n","criteria_4_2_df = pd.read_parquet(criteria_4_2_file_path)\n","\n","criteria_4_2_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"Xl7yd8RgeP6A","executionInfo":{"status":"ok","timestamp":1719826322786,"user_tz":-60,"elapsed":2633,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"c0c3d6b1-39df-4136-d6a6-9139528005b0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id   stay_id ventilation_starttime ventilation_endtime  \\\n","0    10001884  26184834  37510196   2131-01-11 04:40:00 2131-01-12 17:40:00   \n","1    10002428  28662225  38875437   2156-04-19 20:10:00 2156-04-22 17:05:00   \n","2    10004235  24181354  34100191   2196-02-24 16:52:00 2196-02-27 16:28:00   \n","3    10004720  22081550  35009126   2186-11-12 20:29:00 2186-11-17 14:00:00   \n","4    10004733  27411876  39635619   2174-12-04 12:25:00 2174-12-07 16:20:00   \n","\n","   ventilation_itemid ventilation_ordercategoryname extubation_starttime  \\\n","0              225792                   Ventilation  2131-01-12 17:40:00   \n","1              225792                   Ventilation  2156-04-22 17:10:00   \n","2              225792                   Ventilation  2196-02-27 16:28:00   \n","3              225792                   Ventilation  2186-11-17 14:00:00   \n","4              225792                   Ventilation  2174-12-07 16:20:00   \n","\n","   extubation_endtime  extubation_itemid extubation_ordercategoryname  \\\n","0 2131-01-12 17:41:00             227194        Intubation/Extubation   \n","1 2156-04-22 17:11:00             227194        Intubation/Extubation   \n","2 2196-02-27 16:29:00             227194        Intubation/Extubation   \n","3 2186-11-17 14:01:00             227194        Intubation/Extubation   \n","4 2174-12-07 16:21:00             227194        Intubation/Extubation   \n","\n","   ventilation_duration  anchor_age  \n","0                2220.0          68  \n","1                4135.0          80  \n","2                4296.0          47  \n","3                6811.0          61  \n","4                4555.0          51  "],"text/html":["\n","  <div id=\"df-ae8849fc-52c7-4f20-8295-77e9cc644967\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>stay_id</th>\n","      <th>ventilation_starttime</th>\n","      <th>ventilation_endtime</th>\n","      <th>ventilation_itemid</th>\n","      <th>ventilation_ordercategoryname</th>\n","      <th>extubation_starttime</th>\n","      <th>extubation_endtime</th>\n","      <th>extubation_itemid</th>\n","      <th>extubation_ordercategoryname</th>\n","      <th>ventilation_duration</th>\n","      <th>anchor_age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>26184834</td>\n","      <td>37510196</td>\n","      <td>2131-01-11 04:40:00</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>2131-01-12 17:41:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>2220.0</td>\n","      <td>68</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002428</td>\n","      <td>28662225</td>\n","      <td>38875437</td>\n","      <td>2156-04-19 20:10:00</td>\n","      <td>2156-04-22 17:05:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2156-04-22 17:10:00</td>\n","      <td>2156-04-22 17:11:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4135.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10004235</td>\n","      <td>24181354</td>\n","      <td>34100191</td>\n","      <td>2196-02-24 16:52:00</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>2196-02-27 16:29:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4296.0</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10004720</td>\n","      <td>22081550</td>\n","      <td>35009126</td>\n","      <td>2186-11-12 20:29:00</td>\n","      <td>2186-11-17 14:00:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2186-11-17 14:00:00</td>\n","      <td>2186-11-17 14:01:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>6811.0</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10004733</td>\n","      <td>27411876</td>\n","      <td>39635619</td>\n","      <td>2174-12-04 12:25:00</td>\n","      <td>2174-12-07 16:20:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2174-12-07 16:20:00</td>\n","      <td>2174-12-07 16:21:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4555.0</td>\n","      <td>51</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae8849fc-52c7-4f20-8295-77e9cc644967')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ae8849fc-52c7-4f20-8295-77e9cc644967 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ae8849fc-52c7-4f20-8295-77e9cc644967');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-954b7ed3-110f-47a5-b125-0b4ac9cb68fa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-954b7ed3-110f-47a5-b125-0b4ac9cb68fa')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-954b7ed3-110f-47a5-b125-0b4ac9cb68fa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"criteria_4_2_df","summary":"{\n  \"name\": \"criteria_4_2_df\",\n  \"rows\": 6048,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2910745,\n        \"min\": 10001884,\n        \"max\": 19998843,\n        \"num_unique_values\": 6048,\n        \"samples\": [\n          16089043,\n          14283210,\n          17601166\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hadm_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2853206,\n        \"min\": 20001361,\n        \"max\": 29998399,\n        \"num_unique_values\": 6048,\n        \"samples\": [\n          29949151,\n          23769391,\n          20563015\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stay_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2888487,\n        \"min\": 30000213,\n        \"max\": 39998622,\n        \"num_unique_values\": 6048,\n        \"samples\": [\n          37520476,\n          34912892,\n          37906635\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-12 01:00:00\",\n        \"max\": \"2211-05-01 10:00:00\",\n        \"num_unique_values\": 6047,\n        \"samples\": [\n          \"2183-07-03 17:08:00\",\n          \"2171-10-29 21:11:00\",\n          \"2151-02-18 17:45:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:22:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 6048,\n        \"samples\": [\n          \"2192-07-31 14:32:00\",\n          \"2125-10-14 16:45:00\",\n          \"2181-09-04 10:48:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 225792,\n        \"max\": 225792,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          225792\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Ventilation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:23:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 6046,\n        \"samples\": [\n          \"2189-08-15 11:45:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:24:00\",\n        \"max\": \"2211-05-08 13:08:00\",\n        \"num_unique_values\": 6046,\n        \"samples\": [\n          \"2189-08-15 11:46:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 227194,\n        \"max\": 227194,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          227194\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Intubation/Extubation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5119.525950483065,\n        \"min\": 1440.0,\n        \"max\": 42432.0,\n        \"num_unique_values\": 4278,\n        \"samples\": [\n          6863.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anchor_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 18,\n        \"max\": 89,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          51\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["criteria_4_2_df.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nOH9VXAwox2l","executionInfo":{"status":"ok","timestamp":1719826332174,"user_tz":-60,"elapsed":271,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"f48ef476-2c70-4e73-db6e-9e0927d0bcfb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6048"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["print(f'{criteria_4_1_df.shape[0] - criteria_4_2_df.shape[0]} palliative patients extracted based on data from chartevents table')"],"metadata":{"id":"AoRUhsZvoz9F","collapsed":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f'{criteria_3_df.shape[0] - criteria_4_2_df.shape[0]} patients with associated palliative diagnoses')"],"metadata":{"id":"sLVXEpkPpQxG","collapsed":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["criteria_4_df = criteria_4_2_df"],"metadata":{"id":"aBWcL7ENqfYB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Save criteria 4 final filtered file\n","file_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic_data_analysis/datasets/exclusion_criteria/criteria_4.parquet'\n","\n","criteria_4_df.to_parquet(file_path)"],"metadata":{"id":"t9_IuhuUqkjk"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Criteria 5: Patients that died during ventilation**\n","\n","Rationale: These cases do not provide information on extubation outcomes and can skew the analysis"],"metadata":{"id":"bbsIDZ_sprOW"}},{"cell_type":"code","source":["# Load admissions file to obtain time of death\n","admissions_file_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic-iv-2.2-raw-data/hosp/admissions.csv'\n","admissions_df = pd.read_csv(admissions_file_path)\n","admissions_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"lWYFwF5zp1hQ","executionInfo":{"status":"ok","timestamp":1719826706257,"user_tz":-60,"elapsed":3666,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"175d019a-3bd4-4356-d13e-f205438bdae0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id            admittime            dischtime deathtime  \\\n","0    10000032  22595853  2180-05-06 22:23:00  2180-05-07 17:15:00       NaN   \n","1    10000032  22841357  2180-06-26 18:27:00  2180-06-27 18:49:00       NaN   \n","2    10000032  25742920  2180-08-05 23:44:00  2180-08-07 17:50:00       NaN   \n","3    10000032  29079034  2180-07-23 12:35:00  2180-07-25 17:55:00       NaN   \n","4    10000068  25022803  2160-03-03 23:16:00  2160-03-04 06:26:00       NaN   \n","\n","   admission_type admit_provider_id      admission_location  \\\n","0          URGENT            P874LG  TRANSFER FROM HOSPITAL   \n","1        EW EMER.            P09Q6Y          EMERGENCY ROOM   \n","2        EW EMER.            P60CC5          EMERGENCY ROOM   \n","3        EW EMER.            P30KEH          EMERGENCY ROOM   \n","4  EU OBSERVATION            P51VDL          EMERGENCY ROOM   \n","\n","  discharge_location insurance language marital_status   race  \\\n","0               HOME     Other  ENGLISH        WIDOWED  WHITE   \n","1               HOME  Medicaid  ENGLISH        WIDOWED  WHITE   \n","2            HOSPICE  Medicaid  ENGLISH        WIDOWED  WHITE   \n","3               HOME  Medicaid  ENGLISH        WIDOWED  WHITE   \n","4                NaN     Other  ENGLISH         SINGLE  WHITE   \n","\n","             edregtime            edouttime  hospital_expire_flag  \n","0  2180-05-06 19:17:00  2180-05-06 23:30:00                     0  \n","1  2180-06-26 15:54:00  2180-06-26 21:31:00                     0  \n","2  2180-08-05 20:58:00  2180-08-06 01:44:00                     0  \n","3  2180-07-23 05:54:00  2180-07-23 14:00:00                     0  \n","4  2160-03-03 21:55:00  2160-03-04 06:26:00                     0  "],"text/html":["\n","  <div id=\"df-900109b8-1c91-4de3-ac1f-d2f243bd1f55\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>admittime</th>\n","      <th>dischtime</th>\n","      <th>deathtime</th>\n","      <th>admission_type</th>\n","      <th>admit_provider_id</th>\n","      <th>admission_location</th>\n","      <th>discharge_location</th>\n","      <th>insurance</th>\n","      <th>language</th>\n","      <th>marital_status</th>\n","      <th>race</th>\n","      <th>edregtime</th>\n","      <th>edouttime</th>\n","      <th>hospital_expire_flag</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10000032</td>\n","      <td>22595853</td>\n","      <td>2180-05-06 22:23:00</td>\n","      <td>2180-05-07 17:15:00</td>\n","      <td>NaN</td>\n","      <td>URGENT</td>\n","      <td>P874LG</td>\n","      <td>TRANSFER FROM HOSPITAL</td>\n","      <td>HOME</td>\n","      <td>Other</td>\n","      <td>ENGLISH</td>\n","      <td>WIDOWED</td>\n","      <td>WHITE</td>\n","      <td>2180-05-06 19:17:00</td>\n","      <td>2180-05-06 23:30:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10000032</td>\n","      <td>22841357</td>\n","      <td>2180-06-26 18:27:00</td>\n","      <td>2180-06-27 18:49:00</td>\n","      <td>NaN</td>\n","      <td>EW EMER.</td>\n","      <td>P09Q6Y</td>\n","      <td>EMERGENCY ROOM</td>\n","      <td>HOME</td>\n","      <td>Medicaid</td>\n","      <td>ENGLISH</td>\n","      <td>WIDOWED</td>\n","      <td>WHITE</td>\n","      <td>2180-06-26 15:54:00</td>\n","      <td>2180-06-26 21:31:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10000032</td>\n","      <td>25742920</td>\n","      <td>2180-08-05 23:44:00</td>\n","      <td>2180-08-07 17:50:00</td>\n","      <td>NaN</td>\n","      <td>EW EMER.</td>\n","      <td>P60CC5</td>\n","      <td>EMERGENCY ROOM</td>\n","      <td>HOSPICE</td>\n","      <td>Medicaid</td>\n","      <td>ENGLISH</td>\n","      <td>WIDOWED</td>\n","      <td>WHITE</td>\n","      <td>2180-08-05 20:58:00</td>\n","      <td>2180-08-06 01:44:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10000032</td>\n","      <td>29079034</td>\n","      <td>2180-07-23 12:35:00</td>\n","      <td>2180-07-25 17:55:00</td>\n","      <td>NaN</td>\n","      <td>EW EMER.</td>\n","      <td>P30KEH</td>\n","      <td>EMERGENCY ROOM</td>\n","      <td>HOME</td>\n","      <td>Medicaid</td>\n","      <td>ENGLISH</td>\n","      <td>WIDOWED</td>\n","      <td>WHITE</td>\n","      <td>2180-07-23 05:54:00</td>\n","      <td>2180-07-23 14:00:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10000068</td>\n","      <td>25022803</td>\n","      <td>2160-03-03 23:16:00</td>\n","      <td>2160-03-04 06:26:00</td>\n","      <td>NaN</td>\n","      <td>EU OBSERVATION</td>\n","      <td>P51VDL</td>\n","      <td>EMERGENCY ROOM</td>\n","      <td>NaN</td>\n","      <td>Other</td>\n","      <td>ENGLISH</td>\n","      <td>SINGLE</td>\n","      <td>WHITE</td>\n","      <td>2160-03-03 21:55:00</td>\n","      <td>2160-03-04 06:26:00</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-900109b8-1c91-4de3-ac1f-d2f243bd1f55')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-900109b8-1c91-4de3-ac1f-d2f243bd1f55 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-900109b8-1c91-4de3-ac1f-d2f243bd1f55');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-307639cc-b568-4004-851f-f7481729c6df\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-307639cc-b568-4004-851f-f7481729c6df')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-307639cc-b568-4004-851f-f7481729c6df button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"admissions_df"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["admissions_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HyzK7mu6qTmy","executionInfo":{"status":"ok","timestamp":1719826729116,"user_tz":-60,"elapsed":247,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"bf30fa06-b893-4d5e-a80c-5c9237cdec16"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 431231 entries, 0 to 431230\n","Data columns (total 16 columns):\n"," #   Column                Non-Null Count   Dtype \n","---  ------                --------------   ----- \n"," 0   subject_id            431231 non-null  int64 \n"," 1   hadm_id               431231 non-null  int64 \n"," 2   admittime             431231 non-null  object\n"," 3   dischtime             431231 non-null  object\n"," 4   deathtime             8598 non-null    object\n"," 5   admission_type        431231 non-null  object\n"," 6   admit_provider_id     431227 non-null  object\n"," 7   admission_location    431231 non-null  object\n"," 8   discharge_location    312076 non-null  object\n"," 9   insurance             431231 non-null  object\n"," 10  language              431231 non-null  object\n"," 11  marital_status        421998 non-null  object\n"," 12  race                  431231 non-null  object\n"," 13  edregtime             299282 non-null  object\n"," 14  edouttime             299282 non-null  object\n"," 15  hospital_expire_flag  431231 non-null  int64 \n","dtypes: int64(3), object(13)\n","memory usage: 52.6+ MB\n"]}]},{"cell_type":"markdown","source":["If the patient did not die there is no death time recorded\n","\n","We can filter out any patients in our inclusion set that have a recorded death time"],"metadata":{"id":"mOe2s9P0qWx8"}},{"cell_type":"code","source":["# Load criteria 4 set of patients\n","criteria_4_file_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic_data_analysis/datasets/exclusion_criteria/criteria_4.parquet'\n","\n","criteria_4_df = pd.read_parquet(criteria_4_file_path)\n","\n","criteria_4_df.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vZx0zABJqpw1","executionInfo":{"status":"ok","timestamp":1719826862713,"user_tz":-60,"elapsed":243,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"a9987f53-e100-4373-9c1c-47a437cccf59"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6048"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["criteria_4_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bp985POpq1mS","executionInfo":{"status":"ok","timestamp":1719826872292,"user_tz":-60,"elapsed":304,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"251a40cf-0237-4180-9820-141acd60ce56"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 6048 entries, 0 to 6047\n","Data columns (total 13 columns):\n"," #   Column                         Non-Null Count  Dtype         \n","---  ------                         --------------  -----         \n"," 0   subject_id                     6048 non-null   int64         \n"," 1   hadm_id                        6048 non-null   int64         \n"," 2   stay_id                        6048 non-null   int64         \n"," 3   ventilation_starttime          6048 non-null   datetime64[ns]\n"," 4   ventilation_endtime            6048 non-null   datetime64[ns]\n"," 5   ventilation_itemid             6048 non-null   int64         \n"," 6   ventilation_ordercategoryname  6048 non-null   object        \n"," 7   extubation_starttime           6048 non-null   datetime64[ns]\n"," 8   extubation_endtime             6048 non-null   datetime64[ns]\n"," 9   extubation_itemid              6048 non-null   int64         \n"," 10  extubation_ordercategoryname   6048 non-null   object        \n"," 11  ventilation_duration           6048 non-null   float64       \n"," 12  anchor_age                     6048 non-null   int64         \n","dtypes: datetime64[ns](4), float64(1), int64(6), object(2)\n","memory usage: 614.4+ KB\n"]}]},{"cell_type":"code","source":["admissions_merged_df = pd.merge(criteria_4_df, admissions_df[['subject_id', 'deathtime']], on='subject_id', how='left')\n","\n","admissions_merged_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"n6oCjcG0qYt-","executionInfo":{"status":"ok","timestamp":1719826923633,"user_tz":-60,"elapsed":250,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"f04ed794-7ae6-4058-e4bf-7b8c5601ed0d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id   stay_id ventilation_starttime ventilation_endtime  \\\n","0    10001884  26184834  37510196   2131-01-11 04:40:00 2131-01-12 17:40:00   \n","1    10001884  26184834  37510196   2131-01-11 04:40:00 2131-01-12 17:40:00   \n","2    10001884  26184834  37510196   2131-01-11 04:40:00 2131-01-12 17:40:00   \n","3    10001884  26184834  37510196   2131-01-11 04:40:00 2131-01-12 17:40:00   \n","4    10001884  26184834  37510196   2131-01-11 04:40:00 2131-01-12 17:40:00   \n","\n","   ventilation_itemid ventilation_ordercategoryname extubation_starttime  \\\n","0              225792                   Ventilation  2131-01-12 17:40:00   \n","1              225792                   Ventilation  2131-01-12 17:40:00   \n","2              225792                   Ventilation  2131-01-12 17:40:00   \n","3              225792                   Ventilation  2131-01-12 17:40:00   \n","4              225792                   Ventilation  2131-01-12 17:40:00   \n","\n","   extubation_endtime  extubation_itemid extubation_ordercategoryname  \\\n","0 2131-01-12 17:41:00             227194        Intubation/Extubation   \n","1 2131-01-12 17:41:00             227194        Intubation/Extubation   \n","2 2131-01-12 17:41:00             227194        Intubation/Extubation   \n","3 2131-01-12 17:41:00             227194        Intubation/Extubation   \n","4 2131-01-12 17:41:00             227194        Intubation/Extubation   \n","\n","   ventilation_duration  anchor_age deathtime  \n","0                2220.0          68       NaN  \n","1                2220.0          68       NaN  \n","2                2220.0          68       NaN  \n","3                2220.0          68       NaN  \n","4                2220.0          68       NaN  "],"text/html":["\n","  <div id=\"df-488232dd-723f-424b-8cc6-59053ae42613\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>stay_id</th>\n","      <th>ventilation_starttime</th>\n","      <th>ventilation_endtime</th>\n","      <th>ventilation_itemid</th>\n","      <th>ventilation_ordercategoryname</th>\n","      <th>extubation_starttime</th>\n","      <th>extubation_endtime</th>\n","      <th>extubation_itemid</th>\n","      <th>extubation_ordercategoryname</th>\n","      <th>ventilation_duration</th>\n","      <th>anchor_age</th>\n","      <th>deathtime</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>26184834</td>\n","      <td>37510196</td>\n","      <td>2131-01-11 04:40:00</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>2131-01-12 17:41:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>2220.0</td>\n","      <td>68</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10001884</td>\n","      <td>26184834</td>\n","      <td>37510196</td>\n","      <td>2131-01-11 04:40:00</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>2131-01-12 17:41:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>2220.0</td>\n","      <td>68</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10001884</td>\n","      <td>26184834</td>\n","      <td>37510196</td>\n","      <td>2131-01-11 04:40:00</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>2131-01-12 17:41:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>2220.0</td>\n","      <td>68</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10001884</td>\n","      <td>26184834</td>\n","      <td>37510196</td>\n","      <td>2131-01-11 04:40:00</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>2131-01-12 17:41:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>2220.0</td>\n","      <td>68</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10001884</td>\n","      <td>26184834</td>\n","      <td>37510196</td>\n","      <td>2131-01-11 04:40:00</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>2131-01-12 17:41:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>2220.0</td>\n","      <td>68</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-488232dd-723f-424b-8cc6-59053ae42613')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-488232dd-723f-424b-8cc6-59053ae42613 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-488232dd-723f-424b-8cc6-59053ae42613');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ac8e9f00-fe19-46c9-aa4e-d66a4f090669\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ac8e9f00-fe19-46c9-aa4e-d66a4f090669')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ac8e9f00-fe19-46c9-aa4e-d66a4f090669 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"admissions_merged_df","summary":"{\n  \"name\": \"admissions_merged_df\",\n  \"rows\": 26358,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2882907,\n        \"min\": 10001884,\n        \"max\": 19998843,\n        \"num_unique_values\": 6048,\n        \"samples\": [\n          16089043,\n          14283210,\n          17601166\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hadm_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2851661,\n        \"min\": 20001361,\n        \"max\": 29998399,\n        \"num_unique_values\": 6048,\n        \"samples\": [\n          29949151,\n          23769391,\n          20563015\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stay_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2907460,\n        \"min\": 30000213,\n        \"max\": 39998622,\n        \"num_unique_values\": 6048,\n        \"samples\": [\n          37520476,\n          34912892,\n          37906635\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-12 01:00:00\",\n        \"max\": \"2211-05-01 10:00:00\",\n        \"num_unique_values\": 6047,\n        \"samples\": [\n          \"2183-07-03 17:08:00\",\n          \"2171-10-29 21:11:00\",\n          \"2151-02-18 17:45:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:22:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 6048,\n        \"samples\": [\n          \"2192-07-31 14:32:00\",\n          \"2125-10-14 16:45:00\",\n          \"2181-09-04 10:48:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 225792,\n        \"max\": 225792,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          225792\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Ventilation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:23:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 6046,\n        \"samples\": [\n          \"2189-08-15 11:45:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:24:00\",\n        \"max\": \"2211-05-08 13:08:00\",\n        \"num_unique_values\": 6046,\n        \"samples\": [\n          \"2189-08-15 11:46:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 227194,\n        \"max\": 227194,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          227194\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Intubation/Extubation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4928.565568783077,\n        \"min\": 1440.0,\n        \"max\": 42432.0,\n        \"num_unique_values\": 4278,\n        \"samples\": [\n          6863.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anchor_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 18,\n        \"max\": 89,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          51\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"deathtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-25 09:40:00\",\n        \"max\": \"2208-09-23 07:42:00\",\n        \"num_unique_values\": 1632,\n        \"samples\": [\n          \"2178-01-02 15:25:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["deceased_patients_df = admissions_merged_df[admissions_merged_df['deathtime'].notna()]\n","\n","deceased_patients_df.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6VU0BfqsrHWZ","executionInfo":{"status":"ok","timestamp":1719826962522,"user_tz":-60,"elapsed":242,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"7395a5c5-4ece-47ee-8087-3335f156ad65"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1632"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["print(f'There are {deceased_patients_df.shape[0]} patients with a recorded death time')"],"metadata":{"id":"035JLdIirQdh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Now we need to only remove the patients that died before extubation"],"metadata":{"id":"4Hr0b3DZrY57"}},{"cell_type":"code","source":["deceased_patients_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"k2zma0eprb40","executionInfo":{"status":"ok","timestamp":1719827035738,"user_tz":-60,"elapsed":270,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"42c4bcc7-d0c9-438b-e72c-f7a26ad6b384"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    subject_id   hadm_id   stay_id ventilation_starttime ventilation_endtime  \\\n","10    10001884  26184834  37510196   2131-01-11 04:40:00 2131-01-12 17:40:00   \n","32    10004720  22081550  35009126   2186-11-12 20:29:00 2186-11-17 14:00:00   \n","35    10005817  28661809  31316840   2135-01-06 08:34:00 2135-01-19 14:00:00   \n","40    10011365  26712576  37153661   2166-02-11 16:15:00 2166-02-14 09:46:00   \n","56    10015931  22130791  37093652   2177-03-25 10:00:00 2177-03-29 13:10:00   \n","\n","    ventilation_itemid ventilation_ordercategoryname extubation_starttime  \\\n","10              225792                   Ventilation  2131-01-12 17:40:00   \n","32              225792                   Ventilation  2186-11-17 14:00:00   \n","35              225792                   Ventilation  2135-01-19 14:00:00   \n","40              225792                   Ventilation  2166-02-14 09:48:00   \n","56              225792                   Ventilation  2177-03-29 13:11:00   \n","\n","    extubation_endtime  extubation_itemid extubation_ordercategoryname  \\\n","10 2131-01-12 17:41:00             227194        Intubation/Extubation   \n","32 2186-11-17 14:01:00             227194        Intubation/Extubation   \n","35 2135-01-19 14:01:00             227194        Intubation/Extubation   \n","40 2166-02-14 09:49:00             227194        Intubation/Extubation   \n","56 2177-03-29 13:12:00             227194        Intubation/Extubation   \n","\n","    ventilation_duration  anchor_age            deathtime  \n","10                2220.0          68  2131-01-20 05:15:00  \n","32                6811.0          61  2186-11-17 18:30:00  \n","35               19046.0          66  2135-01-19 18:36:00  \n","40                3931.0          73  2166-02-20 00:20:00  \n","56                5950.0          87  2177-03-29 14:15:00  "],"text/html":["\n","  <div id=\"df-eb814876-2661-430c-a9e8-3b923496d783\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>stay_id</th>\n","      <th>ventilation_starttime</th>\n","      <th>ventilation_endtime</th>\n","      <th>ventilation_itemid</th>\n","      <th>ventilation_ordercategoryname</th>\n","      <th>extubation_starttime</th>\n","      <th>extubation_endtime</th>\n","      <th>extubation_itemid</th>\n","      <th>extubation_ordercategoryname</th>\n","      <th>ventilation_duration</th>\n","      <th>anchor_age</th>\n","      <th>deathtime</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10</th>\n","      <td>10001884</td>\n","      <td>26184834</td>\n","      <td>37510196</td>\n","      <td>2131-01-11 04:40:00</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>2131-01-12 17:41:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>2220.0</td>\n","      <td>68</td>\n","      <td>2131-01-20 05:15:00</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>10004720</td>\n","      <td>22081550</td>\n","      <td>35009126</td>\n","      <td>2186-11-12 20:29:00</td>\n","      <td>2186-11-17 14:00:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2186-11-17 14:00:00</td>\n","      <td>2186-11-17 14:01:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>6811.0</td>\n","      <td>61</td>\n","      <td>2186-11-17 18:30:00</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>10005817</td>\n","      <td>28661809</td>\n","      <td>31316840</td>\n","      <td>2135-01-06 08:34:00</td>\n","      <td>2135-01-19 14:00:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2135-01-19 14:00:00</td>\n","      <td>2135-01-19 14:01:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>19046.0</td>\n","      <td>66</td>\n","      <td>2135-01-19 18:36:00</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>10011365</td>\n","      <td>26712576</td>\n","      <td>37153661</td>\n","      <td>2166-02-11 16:15:00</td>\n","      <td>2166-02-14 09:46:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2166-02-14 09:48:00</td>\n","      <td>2166-02-14 09:49:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>3931.0</td>\n","      <td>73</td>\n","      <td>2166-02-20 00:20:00</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>10015931</td>\n","      <td>22130791</td>\n","      <td>37093652</td>\n","      <td>2177-03-25 10:00:00</td>\n","      <td>2177-03-29 13:10:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2177-03-29 13:11:00</td>\n","      <td>2177-03-29 13:12:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>5950.0</td>\n","      <td>87</td>\n","      <td>2177-03-29 14:15:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb814876-2661-430c-a9e8-3b923496d783')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-eb814876-2661-430c-a9e8-3b923496d783 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-eb814876-2661-430c-a9e8-3b923496d783');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0ecef35d-80b3-484a-a166-623c1cf45d3f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0ecef35d-80b3-484a-a166-623c1cf45d3f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0ecef35d-80b3-484a-a166-623c1cf45d3f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"deceased_patients_df","repr_error":"0"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# Convert deathtime to datetime object\n","deceased_patients_df['deathtime'] = pd.to_datetime(deceased_patients_df['deathtime'])\n","\n","deceased_patients_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VQTu7upYrh7A","executionInfo":{"status":"ok","timestamp":1719827051490,"user_tz":-60,"elapsed":223,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"8d758603-33ff-40fc-e7b0-654507d11b5f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 1632 entries, 10 to 26315\n","Data columns (total 14 columns):\n"," #   Column                         Non-Null Count  Dtype         \n","---  ------                         --------------  -----         \n"," 0   subject_id                     1632 non-null   int64         \n"," 1   hadm_id                        1632 non-null   int64         \n"," 2   stay_id                        1632 non-null   int64         \n"," 3   ventilation_starttime          1632 non-null   datetime64[ns]\n"," 4   ventilation_endtime            1632 non-null   datetime64[ns]\n"," 5   ventilation_itemid             1632 non-null   int64         \n"," 6   ventilation_ordercategoryname  1632 non-null   object        \n"," 7   extubation_starttime           1632 non-null   datetime64[ns]\n"," 8   extubation_endtime             1632 non-null   datetime64[ns]\n"," 9   extubation_itemid              1632 non-null   int64         \n"," 10  extubation_ordercategoryname   1632 non-null   object        \n"," 11  ventilation_duration           1632 non-null   float64       \n"," 12  anchor_age                     1632 non-null   int64         \n"," 13  deathtime                      1632 non-null   datetime64[ns]\n","dtypes: datetime64[ns](5), float64(1), int64(6), object(2)\n","memory usage: 255.8+ KB\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-20-378c74841452>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  deceased_patients_df['deathtime'] = pd.to_datetime(deceased_patients_df['deathtime'])\n"]}]},{"cell_type":"code","source":["mask = (deceased_patients_df['deathtime'] <= deceased_patients_df['ventilation_endtime'])\n","\n","excluded_subjects = deceased_patients_df.loc[mask, 'subject_id'].unique()\n","\n","excluded_subjects.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"puECghhAroct","executionInfo":{"status":"ok","timestamp":1719827215781,"user_tz":-60,"elapsed":255,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"3ec7fdda-c6e7-43f8-dd51-c6e3964527e7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["57"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["surviving_patients_df = criteria_4_df[~criteria_4_df['subject_id'].isin(excluded_subjects)]\n","\n","surviving_patients_df.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IR1Jsg3tsM3S","executionInfo":{"status":"ok","timestamp":1719827284937,"user_tz":-60,"elapsed":320,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"ed2665cd-0efe-4894-9103-93e612d734ab"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5991"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["print(f'{excluded_subjects.shape[0]} died while still on ventilation')\n","\n","print(f'And therefore, {surviving_patients_df.shape[0]} who did not die during ventilation')"],"metadata":{"id":"6aLnyBUBsfvr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["criteria_5_df = surviving_patients_df\n","\n","# Save criteria 5 dataframe to drive\n","criteria_5_file_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic_data_analysis/datasets/exclusion_criteria/criteria_5.parquet'\n","\n","criteria_5_df.to_parquet(criteria_5_file_path)"],"metadata":{"id":"qH3x3Wm6swbF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Criteria 6: Patients who had major head and neck surgeries**\n","\n","As clinically rectified with Dr Murali, these surgeries can directly impact respiratory function and extubation success\n","rates.\n","\n","We will only look at major head and neck surgeries and any surgery in relation to the respiratory system."],"metadata":{"id":"dDbHHrXAtGoq"}},{"cell_type":"markdown","source":["The ICD codes to be used were based on analysis of all ICD surgery codes alongside Dr Murali:\n","\n","Head Surgeries\n","- 00B00ZZ: Excision of brain, open approach\n","- 00B00ZX: Excision of brain, open approach, diagnostic\n","- 00B03ZZ: Excision of brain, percutaneous approach\n","-00B03ZX: Excision of brain, percutaneous approach, diagnostic\n","-00C00ZZ: Resection of brain, open approach\n","-00C03ZZ: Resection of brain, percutaneous approach\n","-00H00MZ: Insertion of brain neurostimulator generator, open approach\n","-00H03MZ: Insertion of brain neurostimulator generator, percutaneous approach\n","-00J00ZZ: Repair of brain, open approach\n","-00J03ZZ: Repair of brain, percutaneous approach\n","\n","Neck Surgeries:\n","\n","- 0WJ00ZZ: Repair of neck muscle, open approach\n","-0WJ03ZZ: Repair of neck muscle, percutaneous approach\n","-0WJ04ZZ: Repair of neck muscle, percutaneous endoscopic approach\n","-0WJ10ZZ: Repair of neck tendon, open approach\n","-0WJ13ZZ: Repair of neck tendon, percutaneous approach\n","-0WJ14ZZ: Repair of neck tendon, percutaneous endoscopic approach\n","-0WB00ZX: Excision of neck lymph node, open approach, diagnostic\n","-0WB03ZX: Excision of neck lymph node, percutaneous approach, diagnostic\n","-0WB10ZZ: Resection of neck lymph node, open approach\n","-0WB13ZZ: Resection of neck lymph node, percutaneous approach\n","\n","Larynx Surgeries:\n","- 0B110ZZ: Excision of larynx, open approach\n","-0B120ZZ: Resection of larynx, open approach\n","-0B190ZZ: Repair of larynx, open approach\n","-0B200ZZ: Replacement of larynx with synthetic substitute, open approach\n","-0B21X0Z: Supplement larynx with synthetic substitute, open approach\n","-0B22X0Z: Supplement larynx with nonautologous tissue substitute, open approach\n","-0B23X0Z: Supplement larynx with autologous tissue substitute, open approach\n","-0B30X0Z: Repair larynx with synthetic substitute, open approach\n","-0B31X0Z: Repair larynx with nonautologous tissue substitute, open approach\n","-0B32X0Z: Repair larynx with autologous tissue substitute, open approach\n","\n","Trachea Surgeries:\n","- 0B520ZZ: Excision of trachea, open approach\n","-0B530ZZ: Resection of trachea, open approach\n","-0B560ZZ: Release of trachea, open approach\n","-0B570ZZ: Division of trachea, open approach\n","-0B590ZZ: Repair of trachea, open approach\n","\n","Respiratory System Surgeries:\n","- 0B1: Respiratory System, Bypass\n","-0B2: Respiratory System, Change\n","-0B5: Respiratory System, Destruction\n","-0B7: Respiratory System, Dilation\n","-0B9: Respiratory System, Drainage\n","-0BB: Respiratory System, Excision\n","-0BC: Respiratory System, Extirpation\n","-0BD: Respiratory System, Extraction\n","-0BF: Respiratory System, Fragmentation\n","-0BH: Respiratory System, Insertion\n","-0BJ: Respiratory System, Inspection\n","-0BL: Respiratory System, Occlusion\n","-0BM: Respiratory System, Reattachment\n","-0BN: Respiratory System, Release\n","-0BP: Respiratory System, Removal\n","-0BQ: Respiratory System, Repair\n","-0BR: Respiratory System, Replacement\n","-0BS: Respiratory System, Reposition\n","-0BT: Respiratory System, Resection\n","-0BU: Respiratory System, Supplement\n","-0BV: Respiratory System, Restriction\n","-0BW: Respiratory System, Revision\n","-0BY: Respiratory System, Transplantation\n"],"metadata":{"id":"JvyEV48vtTdU"}},{"cell_type":"code","source":["# List of relevant ICD-10 procedure codes for major surgeries\n","icd_codes = [\n","    '00B00ZZ', '00B00ZX', '00B03ZZ', '00B03ZX', '00C00ZZ', '00C03ZZ', '00H00MZ', '00H03MZ', '00J00ZZ', '00J03ZZ',\n","    '0WJ00ZZ', '0WJ03ZZ', '0WJ04ZZ', '0WJ10ZZ', '0WJ13ZZ', '0WJ14ZZ', '0WB00ZX', '0WB03ZX', '0WB10ZZ', '0WB13ZZ',\n","    '0B110ZZ', '0B120ZZ', '0B190ZZ', '0B200ZZ', '0B21X0Z', '0B22X0Z', '0B23X0Z', '0B30X0Z', '0B31X0Z', '0B32X0Z',\n","    '0B520ZZ', '0B530ZZ', '0B560ZZ', '0B570ZZ', '0B590ZZ', '0B1', '0B2', '0B5', '0B7', '0B9', '0BB', '0BC', '0BD',\n","    '0BF', '0BH', '0BJ', '0BL', '0BM', '0BN', '0BP', '0BQ', '0BR', '0BS', '0BT', '0BU', '0BV', '0BW', '0BY'\n","]"],"metadata":{"id":"MHHXMRpo0IgO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Load patients file\n","criteria_5_file_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic_data_analysis/datasets/exclusion_criteria/criteria_5.parquet'\n","\n","criteria_5_df = pd.read_parquet(criteria_5_file_path)\n","\n","criteria_5_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"mOwY_1aLy57D","executionInfo":{"status":"ok","timestamp":1719829091846,"user_tz":-60,"elapsed":242,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"eab985d6-aaef-44eb-f4ef-cce77419aee5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id   stay_id ventilation_starttime ventilation_endtime  \\\n","0    10001884  26184834  37510196   2131-01-11 04:40:00 2131-01-12 17:40:00   \n","1    10002428  28662225  38875437   2156-04-19 20:10:00 2156-04-22 17:05:00   \n","2    10004235  24181354  34100191   2196-02-24 16:52:00 2196-02-27 16:28:00   \n","3    10004720  22081550  35009126   2186-11-12 20:29:00 2186-11-17 14:00:00   \n","4    10004733  27411876  39635619   2174-12-04 12:25:00 2174-12-07 16:20:00   \n","\n","   ventilation_itemid ventilation_ordercategoryname extubation_starttime  \\\n","0              225792                   Ventilation  2131-01-12 17:40:00   \n","1              225792                   Ventilation  2156-04-22 17:10:00   \n","2              225792                   Ventilation  2196-02-27 16:28:00   \n","3              225792                   Ventilation  2186-11-17 14:00:00   \n","4              225792                   Ventilation  2174-12-07 16:20:00   \n","\n","   extubation_endtime  extubation_itemid extubation_ordercategoryname  \\\n","0 2131-01-12 17:41:00             227194        Intubation/Extubation   \n","1 2156-04-22 17:11:00             227194        Intubation/Extubation   \n","2 2196-02-27 16:29:00             227194        Intubation/Extubation   \n","3 2186-11-17 14:01:00             227194        Intubation/Extubation   \n","4 2174-12-07 16:21:00             227194        Intubation/Extubation   \n","\n","   ventilation_duration  anchor_age  \n","0                2220.0          68  \n","1                4135.0          80  \n","2                4296.0          47  \n","3                6811.0          61  \n","4                4555.0          51  "],"text/html":["\n","  <div id=\"df-511b6b7b-72cc-4480-8369-6892edce20e6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>stay_id</th>\n","      <th>ventilation_starttime</th>\n","      <th>ventilation_endtime</th>\n","      <th>ventilation_itemid</th>\n","      <th>ventilation_ordercategoryname</th>\n","      <th>extubation_starttime</th>\n","      <th>extubation_endtime</th>\n","      <th>extubation_itemid</th>\n","      <th>extubation_ordercategoryname</th>\n","      <th>ventilation_duration</th>\n","      <th>anchor_age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>26184834</td>\n","      <td>37510196</td>\n","      <td>2131-01-11 04:40:00</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2131-01-12 17:40:00</td>\n","      <td>2131-01-12 17:41:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>2220.0</td>\n","      <td>68</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002428</td>\n","      <td>28662225</td>\n","      <td>38875437</td>\n","      <td>2156-04-19 20:10:00</td>\n","      <td>2156-04-22 17:05:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2156-04-22 17:10:00</td>\n","      <td>2156-04-22 17:11:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4135.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10004235</td>\n","      <td>24181354</td>\n","      <td>34100191</td>\n","      <td>2196-02-24 16:52:00</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2196-02-27 16:28:00</td>\n","      <td>2196-02-27 16:29:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4296.0</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10004720</td>\n","      <td>22081550</td>\n","      <td>35009126</td>\n","      <td>2186-11-12 20:29:00</td>\n","      <td>2186-11-17 14:00:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2186-11-17 14:00:00</td>\n","      <td>2186-11-17 14:01:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>6811.0</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10004733</td>\n","      <td>27411876</td>\n","      <td>39635619</td>\n","      <td>2174-12-04 12:25:00</td>\n","      <td>2174-12-07 16:20:00</td>\n","      <td>225792</td>\n","      <td>Ventilation</td>\n","      <td>2174-12-07 16:20:00</td>\n","      <td>2174-12-07 16:21:00</td>\n","      <td>227194</td>\n","      <td>Intubation/Extubation</td>\n","      <td>4555.0</td>\n","      <td>51</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-511b6b7b-72cc-4480-8369-6892edce20e6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-511b6b7b-72cc-4480-8369-6892edce20e6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-511b6b7b-72cc-4480-8369-6892edce20e6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-24b831f9-aded-4bd4-9a95-6246e209462b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-24b831f9-aded-4bd4-9a95-6246e209462b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-24b831f9-aded-4bd4-9a95-6246e209462b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"criteria_5_df","summary":"{\n  \"name\": \"criteria_5_df\",\n  \"rows\": 5991,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2908458,\n        \"min\": 10001884,\n        \"max\": 19998843,\n        \"num_unique_values\": 5991,\n        \"samples\": [\n          14067009,\n          13182275,\n          14238268\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hadm_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2852003,\n        \"min\": 20001361,\n        \"max\": 29998399,\n        \"num_unique_values\": 5991,\n        \"samples\": [\n          29103179,\n          20284049,\n          24023110\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stay_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2890615,\n        \"min\": 30000213,\n        \"max\": 39998622,\n        \"num_unique_values\": 5991,\n        \"samples\": [\n          30941070,\n          38817112,\n          36794670\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-12 01:00:00\",\n        \"max\": \"2211-05-01 10:00:00\",\n        \"num_unique_values\": 5990,\n        \"samples\": [\n          \"2135-07-15 04:31:00\",\n          \"2164-11-06 21:08:00\",\n          \"2163-02-24 22:25:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:22:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 5991,\n        \"samples\": [\n          \"2150-05-25 11:45:00\",\n          \"2176-08-12 13:00:00\",\n          \"2143-11-08 08:39:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 225792,\n        \"max\": 225792,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          225792\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Ventilation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_starttime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:23:00\",\n        \"max\": \"2211-05-08 13:07:00\",\n        \"num_unique_values\": 5989,\n        \"samples\": [\n          \"2166-07-14 08:35:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_endtime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-01-13 10:24:00\",\n        \"max\": \"2211-05-08 13:08:00\",\n        \"num_unique_values\": 5989,\n        \"samples\": [\n          \"2166-07-14 08:36:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 227194,\n        \"max\": 227194,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          227194\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_ordercategoryname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Intubation/Extubation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ventilation_duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5107.0900893334565,\n        \"min\": 1440.0,\n        \"max\": 42432.0,\n        \"num_unique_values\": 4248,\n        \"samples\": [\n          2421.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anchor_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 18,\n        \"max\": 89,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          51\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["criteria_5_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iCpAhpJwzosQ","executionInfo":{"status":"ok","timestamp":1719829179398,"user_tz":-60,"elapsed":356,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"a529b034-136a-4616-a531-76de29e562fe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 5991 entries, 0 to 6047\n","Data columns (total 13 columns):\n"," #   Column                         Non-Null Count  Dtype         \n","---  ------                         --------------  -----         \n"," 0   subject_id                     5991 non-null   int64         \n"," 1   hadm_id                        5991 non-null   int64         \n"," 2   stay_id                        5991 non-null   int64         \n"," 3   ventilation_starttime          5991 non-null   datetime64[ns]\n"," 4   ventilation_endtime            5991 non-null   datetime64[ns]\n"," 5   ventilation_itemid             5991 non-null   int64         \n"," 6   ventilation_ordercategoryname  5991 non-null   object        \n"," 7   extubation_starttime           5991 non-null   datetime64[ns]\n"," 8   extubation_endtime             5991 non-null   datetime64[ns]\n"," 9   extubation_itemid              5991 non-null   int64         \n"," 10  extubation_ordercategoryname   5991 non-null   object        \n"," 11  ventilation_duration           5991 non-null   float64       \n"," 12  anchor_age                     5991 non-null   int64         \n","dtypes: datetime64[ns](4), float64(1), int64(6), object(2)\n","memory usage: 655.3+ KB\n"]}]},{"cell_type":"code","source":["# Load procedures file that has all procedures that patients have been subjected to\n","procedures_file_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic-iv-2.2-raw-data/hosp/procedures_icd.csv'\n","\n","procedures_df = pd.read_csv(procedures_file_path)\n","\n","procedures_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"v8LsbLxdzUA5","executionInfo":{"status":"ok","timestamp":1719829361156,"user_tz":-60,"elapsed":2104,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"21a8a7e9-aa18-4c96-bd29-0a53d46384f4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id  seq_num   chartdate icd_code  icd_version\n","0    10000032  22595853        1  2180-05-07     5491            9\n","1    10000032  22841357        1  2180-06-27     5491            9\n","2    10000032  25742920        1  2180-08-06     5491            9\n","3    10000068  25022803        1  2160-03-03     8938            9\n","4    10000117  27988844        1  2183-09-19  0QS734Z           10"],"text/html":["\n","  <div id=\"df-ed6239f7-aef3-4686-b443-c97393c84b2e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>seq_num</th>\n","      <th>chartdate</th>\n","      <th>icd_code</th>\n","      <th>icd_version</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10000032</td>\n","      <td>22595853</td>\n","      <td>1</td>\n","      <td>2180-05-07</td>\n","      <td>5491</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10000032</td>\n","      <td>22841357</td>\n","      <td>1</td>\n","      <td>2180-06-27</td>\n","      <td>5491</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10000032</td>\n","      <td>25742920</td>\n","      <td>1</td>\n","      <td>2180-08-06</td>\n","      <td>5491</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10000068</td>\n","      <td>25022803</td>\n","      <td>1</td>\n","      <td>2160-03-03</td>\n","      <td>8938</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10000117</td>\n","      <td>27988844</td>\n","      <td>1</td>\n","      <td>2183-09-19</td>\n","      <td>0QS734Z</td>\n","      <td>10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed6239f7-aef3-4686-b443-c97393c84b2e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ed6239f7-aef3-4686-b443-c97393c84b2e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ed6239f7-aef3-4686-b443-c97393c84b2e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d66d1b27-6113-4a43-9e37-8df97af6d1ca\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d66d1b27-6113-4a43-9e37-8df97af6d1ca')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d66d1b27-6113-4a43-9e37-8df97af6d1ca button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"procedures_df"}},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["procedures_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"giC-WAul0YO-","executionInfo":{"status":"ok","timestamp":1719829369919,"user_tz":-60,"elapsed":253,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"f6de428f-7f66-492c-c6ba-478aad9a6e4d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 669186 entries, 0 to 669185\n","Data columns (total 6 columns):\n"," #   Column       Non-Null Count   Dtype \n","---  ------       --------------   ----- \n"," 0   subject_id   669186 non-null  int64 \n"," 1   hadm_id      669186 non-null  int64 \n"," 2   seq_num      669186 non-null  int64 \n"," 3   chartdate    669186 non-null  object\n"," 4   icd_code     669186 non-null  object\n"," 5   icd_version  669186 non-null  int64 \n","dtypes: int64(4), object(2)\n","memory usage: 30.6+ MB\n"]}]},{"cell_type":"code","source":["# Convert chartdate to datetime\n","procedures_df['chartdate'] = pd.to_datetime(procedures_df['chartdate'])"],"metadata":{"id":"9EatR94q0aJo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["procedures_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ujTfI02l0f9e","executionInfo":{"status":"ok","timestamp":1719829402167,"user_tz":-60,"elapsed":258,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"1e6758f9-5f53-464a-a93d-289c0f4d3c9e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 669186 entries, 0 to 669185\n","Data columns (total 6 columns):\n"," #   Column       Non-Null Count   Dtype         \n","---  ------       --------------   -----         \n"," 0   subject_id   669186 non-null  int64         \n"," 1   hadm_id      669186 non-null  int64         \n"," 2   seq_num      669186 non-null  int64         \n"," 3   chartdate    669186 non-null  datetime64[ns]\n"," 4   icd_code     669186 non-null  object        \n"," 5   icd_version  669186 non-null  int64         \n","dtypes: datetime64[ns](1), int64(4), object(1)\n","memory usage: 30.6+ MB\n"]}]},{"cell_type":"code","source":["# Filter procedures to include only the relevant ICD codes\n","filtered_procedures_df = procedures_df[procedures_df['icd_code'].isin(icd_codes)]\n","\n","filtered_procedures_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"sLNP3TX60h9N","executionInfo":{"status":"ok","timestamp":1719829450169,"user_tz":-60,"elapsed":245,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"82c8a5b9-0cf7-4db2-ccf0-32d0b1ef1aaf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       subject_id   hadm_id  seq_num  chartdate icd_code  icd_version\n","264      10004113  29879900        1 2173-03-20  00B00ZZ           10\n","3887     10062931  25070309        1 2180-07-13  00H03MZ           10\n","14022    10215159  24039782        1 2127-12-14  00C00ZZ           10\n","14403    10221833  25096111        1 2117-01-16  00B00ZZ           10\n","17829    10272169  22307325        2 2169-03-11  00C00ZZ           10"],"text/html":["\n","  <div id=\"df-41a2a743-35b7-406a-954e-dad209c9e7a5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>seq_num</th>\n","      <th>chartdate</th>\n","      <th>icd_code</th>\n","      <th>icd_version</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>264</th>\n","      <td>10004113</td>\n","      <td>29879900</td>\n","      <td>1</td>\n","      <td>2173-03-20</td>\n","      <td>00B00ZZ</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>3887</th>\n","      <td>10062931</td>\n","      <td>25070309</td>\n","      <td>1</td>\n","      <td>2180-07-13</td>\n","      <td>00H03MZ</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>14022</th>\n","      <td>10215159</td>\n","      <td>24039782</td>\n","      <td>1</td>\n","      <td>2127-12-14</td>\n","      <td>00C00ZZ</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>14403</th>\n","      <td>10221833</td>\n","      <td>25096111</td>\n","      <td>1</td>\n","      <td>2117-01-16</td>\n","      <td>00B00ZZ</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>17829</th>\n","      <td>10272169</td>\n","      <td>22307325</td>\n","      <td>2</td>\n","      <td>2169-03-11</td>\n","      <td>00C00ZZ</td>\n","      <td>10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-41a2a743-35b7-406a-954e-dad209c9e7a5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-41a2a743-35b7-406a-954e-dad209c9e7a5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-41a2a743-35b7-406a-954e-dad209c9e7a5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cbe38ec6-8aa2-4f7e-9f42-e8d25f394390\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cbe38ec6-8aa2-4f7e-9f42-e8d25f394390')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cbe38ec6-8aa2-4f7e-9f42-e8d25f394390 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"filtered_procedures_df","summary":"{\n  \"name\": \"filtered_procedures_df\",\n  \"rows\": 331,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2914198,\n        \"min\": 10004113,\n        \"max\": 19970078,\n        \"num_unique_values\": 280,\n        \"samples\": [\n          11170326,\n          14447622,\n          18730396\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hadm_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2994798,\n        \"min\": 20001494,\n        \"max\": 29913740,\n        \"num_unique_values\": 292,\n        \"samples\": [\n          20802880,\n          21925412,\n          23862505\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"seq_num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 12,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          12,\n          2,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"chartdate\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2110-02-23 00:00:00\",\n        \"max\": \"2199-01-20 00:00:00\",\n        \"num_unique_values\": 296,\n        \"samples\": [\n          \"2153-12-07 00:00:00\",\n          \"2110-11-16 00:00:00\",\n          \"2164-09-25 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"icd_code\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"00J03ZZ\",\n          \"00C03ZZ\",\n          \"00B00ZZ\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"icd_version\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 10,\n        \"max\": 10,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["filtered_procedures_df.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L9Yt4GaJ0ufl","executionInfo":{"status":"ok","timestamp":1719829465194,"user_tz":-60,"elapsed":250,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"92d4e5ef-cf94-4586-9f7c-e401b9dc058b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["331"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["# Merge filtered procedures with patient data on 'subject_id'\n","merged_data = filtered_procedures_df.merge(criteria_5_df, on='subject_id', how='left')"],"metadata":{"id":"xp4PRNc30wzX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Filter to exclude patients who had the procedure before the end of ventilation\n","patients_to_exclude = merged_data[merged_data['chartdate'] < merged_data['ventilation_endtime']]['subject_id'].unique()\n","\n","print(f'{patients_to_exclude.shape[0]} patients had procedures before end of ventilation')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A8CjpL1x1ZpQ","executionInfo":{"status":"ok","timestamp":1719830225286,"user_tz":-60,"elapsed":248,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"ddd1125c-e41e-4921-887d-e51b3cb41b13"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["21 patients had procedures before end of ventilation\n"]}]},{"cell_type":"code","source":["# Remove these patients from the initial patient data\n","filtered_patient_data = criteria_5_df[~criteria_5_df['subject_id'].isin(patients_to_exclude)]\n","\n","print(f'{filtered_patient_data.shape[0]} patients did not have major head or neck surgeries before end of ventilation')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xjcnCT4e3TZA","executionInfo":{"status":"ok","timestamp":1719830254411,"user_tz":-60,"elapsed":257,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"4b3cbad1-7c4f-46b8-f12d-ca70f62d98c9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["5970 patients did not have major head or neck surgeries before end of ventilation\n"]}]},{"cell_type":"code","source":["# Save filtered data to file as this is the final patient set prior to feature analysis\n","criteria_6_file_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/mimic_data_analysis/datasets/exclusion_criteria/criteria_6.parquet'\n","\n","filtered_patient_data.to_parquet(criteria_6_file_path)"],"metadata":{"id":"exs7Z3Oa4GFc"},"execution_count":null,"outputs":[]}]}