{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1Shdh6Eum2A7Bj4hptDh806Fs3x0kXOz3","authorship_tag":"ABX9TyO10VfSs330GMDp/EXyssGc"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **LightGBM preprocessing**\n","\n","We looked at which Gradient Boosting architecture was the best performing when applied to predicting extubation failure.\n","\n","The purpose of using a Gradient Boosting framework is as a baseline for the more sophisticated time-series models.\n","\n","GBMs inherently cannot process sequences of data, hence any data input would need to be static. As such, it is accetped that the outcome of the GBM models will not be meaningful regarding the intenition of this project to make a prediction based on time series data, but it serves as a useful baseline to compare performance.\n","\n","The typical GBM models used in literature are XGBoost, LightGBM and CatBoost. Each have their unique adaptations but are all GBMs at heart. To select which one to use as the baseline of this study, we anlaysed their use in literature and LightGBM was the best performer on the primary metric used in this study of ROCAUC.\n","\n","As such, we will process our patient data for use in a LightGBM for classification prediction of extubation failure."],"metadata":{"id":"kOADjKg5-AxS"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"d6F0CmvU97cu"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qrDt_juy_nm_","executionInfo":{"status":"ok","timestamp":1723045637554,"user_tz":-60,"elapsed":8196,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"6b9dcdf1-c967-42ad-9cda-ba6100b36d13"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"markdown","source":["**Load the train and test data**\n","\n","The following has already been applied to the data for LSTM/TCN models:\n","- Remove low observed features\n","- Split into train and test sets\n","- Removed outliers\n","\n","We will take this data so that we have the same train and test sets and results are comparable as possible."],"metadata":{"id":"UUaX8VTY_w0N"}},{"cell_type":"code","source":["# Load the train and test data\n","train_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/data_analysis/datasets/07_data_preprocessing/01_feature_set_1/01_preprocessing_v2/03_train_data_standard_preprocess_done.parquet'\n","test_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/data_analysis/datasets/07_data_preprocessing/01_feature_set_1/01_preprocessing_v2/03_test_data_standard_preprocess_done.parquet'\n","\n","train_df = pd.read_parquet(train_path)\n","test_df = pd.read_parquet(test_path)\n","\n","train_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"O-FbnaLFBuQM","executionInfo":{"status":"ok","timestamp":1723046293516,"user_tz":-60,"elapsed":512,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"36981f7a-a16a-4ac5-e28d-3d9ffb8cff78"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id  itemid  valuenum  time_to_extubation_mins  \\\n","0    10001884  223835      40.0                    160.0   \n","1    10001884  224685       NaN                    160.0   \n","2    10001884  224686       NaN                    160.0   \n","3    10001884  224687       6.1                    160.0   \n","4    10001884  224695      17.0                    160.0   \n","\n","   time_from_window_start                       label  extubation_failure  \n","0                   200.0        Inspired O2 Fraction                   1  \n","1                   200.0     Tidal Volume (observed)                   1  \n","2                   200.0  Tidal Volume (spontaneous)                   1  \n","3                   200.0               Minute Volume                   1  \n","4                   200.0         Peak Insp. Pressure                   1  "],"text/html":["\n","  <div id=\"df-fcbb3645-0dd5-4abc-abad-df2ce9bbb49e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>itemid</th>\n","      <th>valuenum</th>\n","      <th>time_to_extubation_mins</th>\n","      <th>time_from_window_start</th>\n","      <th>label</th>\n","      <th>extubation_failure</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>223835</td>\n","      <td>40.0</td>\n","      <td>160.0</td>\n","      <td>200.0</td>\n","      <td>Inspired O2 Fraction</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10001884</td>\n","      <td>224685</td>\n","      <td>NaN</td>\n","      <td>160.0</td>\n","      <td>200.0</td>\n","      <td>Tidal Volume (observed)</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10001884</td>\n","      <td>224686</td>\n","      <td>NaN</td>\n","      <td>160.0</td>\n","      <td>200.0</td>\n","      <td>Tidal Volume (spontaneous)</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10001884</td>\n","      <td>224687</td>\n","      <td>6.1</td>\n","      <td>160.0</td>\n","      <td>200.0</td>\n","      <td>Minute Volume</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10001884</td>\n","      <td>224695</td>\n","      <td>17.0</td>\n","      <td>160.0</td>\n","      <td>200.0</td>\n","      <td>Peak Insp. Pressure</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fcbb3645-0dd5-4abc-abad-df2ce9bbb49e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fcbb3645-0dd5-4abc-abad-df2ce9bbb49e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fcbb3645-0dd5-4abc-abad-df2ce9bbb49e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a98b2964-1249-4a88-88ed-9e0768b81b33\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a98b2964-1249-4a88-88ed-9e0768b81b33')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a98b2964-1249-4a88-88ed-9e0768b81b33 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_df","summary":"{\n  \"name\": \"train_df\",\n  \"rows\": 90905,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2308933,\n        \"min\": 10001884,\n        \"max\": 17923146,\n        \"num_unique_values\": 3760,\n        \"samples\": [\n          13216036,\n          16335717,\n          10471192\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"itemid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2044,\n        \"min\": 220210,\n        \"max\": 224695,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          220210,\n          223835,\n          220235\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"valuenum\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 141.41415538001394,\n        \"min\": 0.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 921,\n        \"samples\": [\n          547.0,\n          4.6,\n          481.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_to_extubation_mins\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106.37405327371614,\n        \"min\": 0.0,\n        \"max\": 360.0,\n        \"num_unique_values\": 361,\n        \"samples\": [\n          92.0,\n          290.0,\n          130.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_from_window_start\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106.37405327371614,\n        \"min\": 0.0,\n        \"max\": 360.0,\n        \"num_unique_values\": 361,\n        \"samples\": [\n          268.0,\n          70.0,\n          230.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"Respiratory Rate\",\n          \"Inspired O2 Fraction\",\n          \"Arterial CO2 Pressure\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_failure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["\n","\n","In the previous pre-processing all outliers were set to NaN. We will just remove those values to avoid further imputation. Furthermore, since we are using mean aggregation these will not likley have any impact."],"metadata":{"id":"Bieuu076B_vE"}},{"cell_type":"code","source":["# Count the number of NaN data points\n","print('Number of NaN values in train set: ', train_df.isna().sum().sum())\n","print('Number of NaN values in test set: ', test_df.isna().sum().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ghDfqAqWCPom","executionInfo":{"status":"ok","timestamp":1723046390557,"user_tz":-60,"elapsed":194,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"9bcc359a-4eb8-4d8f-9ba5-f52def3ff1ad"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of NaN values in train set:  2811\n","Number of NaN values in test set:  682\n"]}]},{"cell_type":"code","source":["# Count the number of data points\n","print('Number of data points in train set: ', train_df.shape[0])\n","print('Number of data points in test set: ', test_df.shape[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wgl11uiiCfCY","executionInfo":{"status":"ok","timestamp":1723046392335,"user_tz":-60,"elapsed":199,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"9a756aca-d3ae-4702-c92a-52dd475bff01"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of data points in train set:  90905\n","Number of data points in test set:  22894\n"]}]},{"cell_type":"code","source":["# Remove any data point that is NaN\n","train_df = train_df.dropna()\n","test_df = test_df.dropna()\n","\n","# Count the number of data points\n","print('Number of data points in train set: ', train_df.shape[0])\n","print('Number of data points in test set: ', test_df.shape[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pnw79hmkCaEF","executionInfo":{"status":"ok","timestamp":1723046395483,"user_tz":-60,"elapsed":203,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"6f6cc6d8-1f3c-4ce0-a8ad-8af8e8735771"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of data points in train set:  88094\n","Number of data points in test set:  22212\n"]}]},{"cell_type":"markdown","source":["**Data aggregation**\n","\n","For each patient we will need a fixed set of features.\n","\n","We will do Mean Aggregation to best represent these features - averaging all values across the 6 hour window."],"metadata":{"id":"SPBt9zIzClhf"}},{"cell_type":"code","source":["# Drop itemid column\n","train_df = train_df.drop(['itemid'], axis=1)\n","test_df = test_df.drop(['itemid'], axis=1)"],"metadata":{"id":"z8tZLbQqDn2v"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_copy = train_df.copy()\n","test_copy = test_df.copy()"],"metadata":{"id":"I1oAaVp4EHvg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Aggregating features for each patient (subject_id) using mean for each label\n","train_pivoted = train_df.pivot_table(index='subject_id', columns='label', values='valuenum', aggfunc='mean')\n","test_pivoted = test_df.pivot_table(index='subject_id', columns='label', values='valuenum', aggfunc='mean')\n","\n","# Rename columns to highlight the mean\n","train_pivoted.columns = ['mean_' + str(col) for col in train_pivoted.columns.values]\n","test_pivoted.columns = ['mean_' + str(col) for col in test_pivoted.columns.values]\n","\n","# Reset index\n","train_pivoted = train_pivoted.reset_index()\n","test_pivoted = test_pivoted.reset_index()"],"metadata":{"id":"vC7sEBvcD-Fk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_pivoted.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"3sMuxlFIE4tn","executionInfo":{"status":"ok","timestamp":1721914109871,"user_tz":-60,"elapsed":19,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"bc4c0301-e232-44d5-950c-c1a3a6d760a9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id  mean_Arterial CO2 Pressure  mean_Arterial O2 pressure  \\\n","0    10001884                         NaN                        NaN   \n","1    10002428                        43.0                      127.0   \n","2    10004235                        37.5                      100.5   \n","3    10010867                         NaN                        NaN   \n","4    10011365                         NaN                        NaN   \n","\n","   mean_Inspired O2 Fraction  mean_Minute Volume  \\\n","0                  40.000000                 6.1   \n","1                  42.500000                 9.0   \n","2                  50.000000                10.5   \n","3                  46.666667                 5.6   \n","4                  45.000000                 9.4   \n","\n","   mean_O2 saturation pulseoxymetry  mean_PH (Arterial)  \\\n","0                         97.666667                 NaN   \n","1                         99.833333               7.430   \n","2                         99.333333               7.325   \n","3                         97.666667                 NaN   \n","4                         93.166667                 NaN   \n","\n","   mean_Peak Insp. Pressure  mean_Respiratory Rate  \\\n","0                      17.0              20.000000   \n","1                      20.5              22.000000   \n","2                      11.0              13.666667   \n","3                      16.0              15.333333   \n","4                      12.0              17.666667   \n","\n","   mean_Tidal Volume (observed)  mean_Tidal Volume (spontaneous)  \\\n","0                           NaN                              NaN   \n","1                         380.0                           355.25   \n","2                           NaN                              NaN   \n","3                         467.0                           467.00   \n","4                         344.0                           344.00   \n","\n","   mean_Ventilator Mode  \n","0                   NaN  \n","1                  11.0  \n","2                  11.0  \n","3                   NaN  \n","4                   NaN  "],"text/html":["\n","  <div id=\"df-7c917838-2da1-4bab-b6c5-7230d8f36269\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>mean_Arterial CO2 Pressure</th>\n","      <th>mean_Arterial O2 pressure</th>\n","      <th>mean_Inspired O2 Fraction</th>\n","      <th>mean_Minute Volume</th>\n","      <th>mean_O2 saturation pulseoxymetry</th>\n","      <th>mean_PH (Arterial)</th>\n","      <th>mean_Peak Insp. Pressure</th>\n","      <th>mean_Respiratory Rate</th>\n","      <th>mean_Tidal Volume (observed)</th>\n","      <th>mean_Tidal Volume (spontaneous)</th>\n","      <th>mean_Ventilator Mode</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>40.000000</td>\n","      <td>6.1</td>\n","      <td>97.666667</td>\n","      <td>NaN</td>\n","      <td>17.0</td>\n","      <td>20.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002428</td>\n","      <td>43.0</td>\n","      <td>127.0</td>\n","      <td>42.500000</td>\n","      <td>9.0</td>\n","      <td>99.833333</td>\n","      <td>7.430</td>\n","      <td>20.5</td>\n","      <td>22.000000</td>\n","      <td>380.0</td>\n","      <td>355.25</td>\n","      <td>11.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10004235</td>\n","      <td>37.5</td>\n","      <td>100.5</td>\n","      <td>50.000000</td>\n","      <td>10.5</td>\n","      <td>99.333333</td>\n","      <td>7.325</td>\n","      <td>11.0</td>\n","      <td>13.666667</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>11.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10010867</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>46.666667</td>\n","      <td>5.6</td>\n","      <td>97.666667</td>\n","      <td>NaN</td>\n","      <td>16.0</td>\n","      <td>15.333333</td>\n","      <td>467.0</td>\n","      <td>467.00</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10011365</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>45.000000</td>\n","      <td>9.4</td>\n","      <td>93.166667</td>\n","      <td>NaN</td>\n","      <td>12.0</td>\n","      <td>17.666667</td>\n","      <td>344.0</td>\n","      <td>344.00</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7c917838-2da1-4bab-b6c5-7230d8f36269')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7c917838-2da1-4bab-b6c5-7230d8f36269 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7c917838-2da1-4bab-b6c5-7230d8f36269');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e3f03aa6-d686-421e-b75f-2e8565c21d21\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e3f03aa6-d686-421e-b75f-2e8565c21d21')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e3f03aa6-d686-421e-b75f-2e8565c21d21 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_pivoted","summary":"{\n  \"name\": \"train_pivoted\",\n  \"rows\": 3760,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2322381,\n        \"min\": 10001884,\n        \"max\": 17923146,\n        \"num_unique_values\": 3760,\n        \"samples\": [\n          13216036,\n          16335717,\n          10471192\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial CO2 Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.5297825617583864,\n        \"min\": 16.0,\n        \"max\": 66.0,\n        \"num_unique_values\": 127,\n        \"samples\": [\n          44.0,\n          45.2,\n          21.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial O2 pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.9330544558396,\n        \"min\": 16.0,\n        \"max\": 210.0,\n        \"num_unique_values\": 273,\n        \"samples\": [\n          93.0,\n          128.0,\n          101.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Inspired O2 Fraction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.011306392173969,\n        \"min\": 21.0,\n        \"max\": 75.0,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          45.0,\n          40.666666666666664,\n          52.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Minute Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9050862117689906,\n        \"min\": 0.0,\n        \"max\": 12.1,\n        \"num_unique_values\": 489,\n        \"samples\": [\n          6.825,\n          10.0,\n          7.67\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_O2 saturation pulseoxymetry\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9256407418225525,\n        \"min\": 89.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 285,\n        \"samples\": [\n          99.85714285714286,\n          97.625,\n          95.1875\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_PH (Arterial)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06144467399148677,\n        \"min\": 7.19,\n        \"max\": 7.58,\n        \"num_unique_values\": 131,\n        \"samples\": [\n          7.468333333333334,\n          7.515000000000001,\n          7.48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Peak Insp. Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.3802575119682245,\n        \"min\": 0.0,\n        \"max\": 48.0,\n        \"num_unique_values\": 224,\n        \"samples\": [\n          19.0,\n          33.0,\n          5.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Respiratory Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.682934805150939,\n        \"min\": 4.166666666666667,\n        \"max\": 46.25,\n        \"num_unique_values\": 544,\n        \"samples\": [\n          21.125,\n          28.166666666666668,\n          33.833333333333336\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (observed)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 99.78520516072531,\n        \"min\": 299.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 881,\n        \"samples\": [\n          397.25,\n          366.0,\n          319.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (spontaneous)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 107.12936063379325,\n        \"min\": 299.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 819,\n        \"samples\": [\n          588.0,\n          526.0,\n          597.7985\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Ventilator Mode\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.000973871092915,\n        \"min\": 1.5,\n        \"max\": 71.0,\n        \"num_unique_values\": 78,\n        \"samples\": [\n          31.0,\n          11.0,\n          37.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["Add extubation failure label"],"metadata":{"id":"ww6uHRcGFf7f"}},{"cell_type":"code","source":["# Add extubation failure label\n","label_df = train_df[['subject_id', 'extubation_failure']].drop_duplicates(subset='subject_id')\n","train_aggregated = train_pivoted.merge(label_df, on='subject_id', how='left')\n","\n","label_df = test_df[['subject_id', 'extubation_failure']].drop_duplicates(subset='subject_id')\n","test_aggregated = test_pivoted.merge(label_df, on='subject_id', how='left')"],"metadata":{"id":"jwYMipFoFKuf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_aggregated.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"A5l1N76xFfG8","executionInfo":{"status":"ok","timestamp":1721915899373,"user_tz":-60,"elapsed":437,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"e97d45f6-6a39-4c0f-feb8-5928dea545a6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id  mean_Arterial CO2 Pressure  mean_Arterial O2 pressure  \\\n","0    10001884                         NaN                        NaN   \n","1    10002428                        43.0                      127.0   \n","2    10004235                        37.5                      100.5   \n","3    10010867                         NaN                        NaN   \n","4    10011365                         NaN                        NaN   \n","\n","   mean_Inspired O2 Fraction  mean_Minute Volume  \\\n","0                  40.000000                 6.1   \n","1                  42.500000                 9.0   \n","2                  50.000000                10.5   \n","3                  46.666667                 5.6   \n","4                  45.000000                 9.4   \n","\n","   mean_O2 saturation pulseoxymetry  mean_PH (Arterial)  \\\n","0                         97.666667                 NaN   \n","1                         99.833333               7.430   \n","2                         99.333333               7.325   \n","3                         97.666667                 NaN   \n","4                         93.166667                 NaN   \n","\n","   mean_Peak Insp. Pressure  mean_Respiratory Rate  \\\n","0                      17.0              20.000000   \n","1                      20.5              22.000000   \n","2                      11.0              13.666667   \n","3                      16.0              15.333333   \n","4                      12.0              17.666667   \n","\n","   mean_Tidal Volume (observed)  mean_Tidal Volume (spontaneous)  \\\n","0                           NaN                              NaN   \n","1                         380.0                           355.25   \n","2                           NaN                              NaN   \n","3                         467.0                           467.00   \n","4                         344.0                           344.00   \n","\n","   mean_Ventilator Mode  extubation_failure  \n","0                   NaN                   1  \n","1                  11.0                   0  \n","2                  11.0                   1  \n","3                   NaN                   0  \n","4                   NaN                   1  "],"text/html":["\n","  <div id=\"df-0526017e-8109-4e8d-b2da-c768df362a53\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>mean_Arterial CO2 Pressure</th>\n","      <th>mean_Arterial O2 pressure</th>\n","      <th>mean_Inspired O2 Fraction</th>\n","      <th>mean_Minute Volume</th>\n","      <th>mean_O2 saturation pulseoxymetry</th>\n","      <th>mean_PH (Arterial)</th>\n","      <th>mean_Peak Insp. Pressure</th>\n","      <th>mean_Respiratory Rate</th>\n","      <th>mean_Tidal Volume (observed)</th>\n","      <th>mean_Tidal Volume (spontaneous)</th>\n","      <th>mean_Ventilator Mode</th>\n","      <th>extubation_failure</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>40.000000</td>\n","      <td>6.1</td>\n","      <td>97.666667</td>\n","      <td>NaN</td>\n","      <td>17.0</td>\n","      <td>20.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002428</td>\n","      <td>43.0</td>\n","      <td>127.0</td>\n","      <td>42.500000</td>\n","      <td>9.0</td>\n","      <td>99.833333</td>\n","      <td>7.430</td>\n","      <td>20.5</td>\n","      <td>22.000000</td>\n","      <td>380.0</td>\n","      <td>355.25</td>\n","      <td>11.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10004235</td>\n","      <td>37.5</td>\n","      <td>100.5</td>\n","      <td>50.000000</td>\n","      <td>10.5</td>\n","      <td>99.333333</td>\n","      <td>7.325</td>\n","      <td>11.0</td>\n","      <td>13.666667</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>11.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10010867</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>46.666667</td>\n","      <td>5.6</td>\n","      <td>97.666667</td>\n","      <td>NaN</td>\n","      <td>16.0</td>\n","      <td>15.333333</td>\n","      <td>467.0</td>\n","      <td>467.00</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10011365</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>45.000000</td>\n","      <td>9.4</td>\n","      <td>93.166667</td>\n","      <td>NaN</td>\n","      <td>12.0</td>\n","      <td>17.666667</td>\n","      <td>344.0</td>\n","      <td>344.00</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0526017e-8109-4e8d-b2da-c768df362a53')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0526017e-8109-4e8d-b2da-c768df362a53 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0526017e-8109-4e8d-b2da-c768df362a53');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0f987440-75c6-4141-ad70-3268ee68df16\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0f987440-75c6-4141-ad70-3268ee68df16')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0f987440-75c6-4141-ad70-3268ee68df16 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_aggregated","summary":"{\n  \"name\": \"train_aggregated\",\n  \"rows\": 3760,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2322381,\n        \"min\": 10001884,\n        \"max\": 17923146,\n        \"num_unique_values\": 3760,\n        \"samples\": [\n          13216036,\n          16335717,\n          10471192\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial CO2 Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.5297825617583864,\n        \"min\": 16.0,\n        \"max\": 66.0,\n        \"num_unique_values\": 127,\n        \"samples\": [\n          44.0,\n          45.2,\n          21.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial O2 pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.9330544558396,\n        \"min\": 16.0,\n        \"max\": 210.0,\n        \"num_unique_values\": 273,\n        \"samples\": [\n          93.0,\n          128.0,\n          101.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Inspired O2 Fraction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.011306392173969,\n        \"min\": 21.0,\n        \"max\": 75.0,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          45.0,\n          40.666666666666664,\n          52.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Minute Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9050862117689906,\n        \"min\": 0.0,\n        \"max\": 12.1,\n        \"num_unique_values\": 489,\n        \"samples\": [\n          6.825,\n          10.0,\n          7.67\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_O2 saturation pulseoxymetry\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9256407418225525,\n        \"min\": 89.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 285,\n        \"samples\": [\n          99.85714285714286,\n          97.625,\n          95.1875\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_PH (Arterial)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06144467399148677,\n        \"min\": 7.19,\n        \"max\": 7.58,\n        \"num_unique_values\": 131,\n        \"samples\": [\n          7.468333333333334,\n          7.515000000000001,\n          7.48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Peak Insp. Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.3802575119682245,\n        \"min\": 0.0,\n        \"max\": 48.0,\n        \"num_unique_values\": 224,\n        \"samples\": [\n          19.0,\n          33.0,\n          5.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Respiratory Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.682934805150939,\n        \"min\": 4.166666666666667,\n        \"max\": 46.25,\n        \"num_unique_values\": 544,\n        \"samples\": [\n          21.125,\n          28.166666666666668,\n          33.833333333333336\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (observed)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 99.78520516072531,\n        \"min\": 299.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 881,\n        \"samples\": [\n          397.25,\n          366.0,\n          319.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (spontaneous)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 107.12936063379325,\n        \"min\": 299.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 819,\n        \"samples\": [\n          588.0,\n          526.0,\n          597.7985\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Ventilator Mode\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.000973871092915,\n        \"min\": 1.5,\n        \"max\": 71.0,\n        \"num_unique_values\": 78,\n        \"samples\": [\n          31.0,\n          11.0,\n          37.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_failure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":51}]},{"cell_type":"markdown","source":["**Drop Ventilation Mode as cagtegorical data is not useful**\n","\n","As discussed with Dr Mayur, we will not be assessing Ventialtion Mode as looking at individual ventilation modes is not useful."],"metadata":{"id":"ouV9YxfKFmnO"}},{"cell_type":"code","source":["# Drop ventilation mode column\n","train_aggregated = train_aggregated.drop(['mean_Ventilator Mode'], axis=1)\n","test_aggregated = test_aggregated.drop(['mean_Ventilator Mode'], axis=1)"],"metadata":{"id":"9rTrLq6_Fyt5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_aggregated.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"MWlnxu-MF4pN","executionInfo":{"status":"ok","timestamp":1721915902662,"user_tz":-60,"elapsed":19,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"b1596c52-4729-4379-c6d6-892a97ff457b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id  mean_Arterial CO2 Pressure  mean_Arterial O2 pressure  \\\n","0    10001884                         NaN                        NaN   \n","1    10002428                        43.0                      127.0   \n","2    10004235                        37.5                      100.5   \n","3    10010867                         NaN                        NaN   \n","4    10011365                         NaN                        NaN   \n","\n","   mean_Inspired O2 Fraction  mean_Minute Volume  \\\n","0                  40.000000                 6.1   \n","1                  42.500000                 9.0   \n","2                  50.000000                10.5   \n","3                  46.666667                 5.6   \n","4                  45.000000                 9.4   \n","\n","   mean_O2 saturation pulseoxymetry  mean_PH (Arterial)  \\\n","0                         97.666667                 NaN   \n","1                         99.833333               7.430   \n","2                         99.333333               7.325   \n","3                         97.666667                 NaN   \n","4                         93.166667                 NaN   \n","\n","   mean_Peak Insp. Pressure  mean_Respiratory Rate  \\\n","0                      17.0              20.000000   \n","1                      20.5              22.000000   \n","2                      11.0              13.666667   \n","3                      16.0              15.333333   \n","4                      12.0              17.666667   \n","\n","   mean_Tidal Volume (observed)  mean_Tidal Volume (spontaneous)  \\\n","0                           NaN                              NaN   \n","1                         380.0                           355.25   \n","2                           NaN                              NaN   \n","3                         467.0                           467.00   \n","4                         344.0                           344.00   \n","\n","   extubation_failure  \n","0                   1  \n","1                   0  \n","2                   1  \n","3                   0  \n","4                   1  "],"text/html":["\n","  <div id=\"df-50610629-c7e8-470e-b3a8-3a08c31abd8d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>mean_Arterial CO2 Pressure</th>\n","      <th>mean_Arterial O2 pressure</th>\n","      <th>mean_Inspired O2 Fraction</th>\n","      <th>mean_Minute Volume</th>\n","      <th>mean_O2 saturation pulseoxymetry</th>\n","      <th>mean_PH (Arterial)</th>\n","      <th>mean_Peak Insp. Pressure</th>\n","      <th>mean_Respiratory Rate</th>\n","      <th>mean_Tidal Volume (observed)</th>\n","      <th>mean_Tidal Volume (spontaneous)</th>\n","      <th>extubation_failure</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>40.000000</td>\n","      <td>6.1</td>\n","      <td>97.666667</td>\n","      <td>NaN</td>\n","      <td>17.0</td>\n","      <td>20.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002428</td>\n","      <td>43.0</td>\n","      <td>127.0</td>\n","      <td>42.500000</td>\n","      <td>9.0</td>\n","      <td>99.833333</td>\n","      <td>7.430</td>\n","      <td>20.5</td>\n","      <td>22.000000</td>\n","      <td>380.0</td>\n","      <td>355.25</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10004235</td>\n","      <td>37.5</td>\n","      <td>100.5</td>\n","      <td>50.000000</td>\n","      <td>10.5</td>\n","      <td>99.333333</td>\n","      <td>7.325</td>\n","      <td>11.0</td>\n","      <td>13.666667</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10010867</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>46.666667</td>\n","      <td>5.6</td>\n","      <td>97.666667</td>\n","      <td>NaN</td>\n","      <td>16.0</td>\n","      <td>15.333333</td>\n","      <td>467.0</td>\n","      <td>467.00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10011365</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>45.000000</td>\n","      <td>9.4</td>\n","      <td>93.166667</td>\n","      <td>NaN</td>\n","      <td>12.0</td>\n","      <td>17.666667</td>\n","      <td>344.0</td>\n","      <td>344.00</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50610629-c7e8-470e-b3a8-3a08c31abd8d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-50610629-c7e8-470e-b3a8-3a08c31abd8d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-50610629-c7e8-470e-b3a8-3a08c31abd8d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-83e86471-71c1-4952-8693-6be043c8ab4e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-83e86471-71c1-4952-8693-6be043c8ab4e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-83e86471-71c1-4952-8693-6be043c8ab4e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_aggregated","summary":"{\n  \"name\": \"train_aggregated\",\n  \"rows\": 3760,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2322381,\n        \"min\": 10001884,\n        \"max\": 17923146,\n        \"num_unique_values\": 3760,\n        \"samples\": [\n          13216036,\n          16335717,\n          10471192\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial CO2 Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.5297825617583864,\n        \"min\": 16.0,\n        \"max\": 66.0,\n        \"num_unique_values\": 127,\n        \"samples\": [\n          44.0,\n          45.2,\n          21.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial O2 pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.9330544558396,\n        \"min\": 16.0,\n        \"max\": 210.0,\n        \"num_unique_values\": 273,\n        \"samples\": [\n          93.0,\n          128.0,\n          101.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Inspired O2 Fraction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.011306392173969,\n        \"min\": 21.0,\n        \"max\": 75.0,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          45.0,\n          40.666666666666664,\n          52.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Minute Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9050862117689906,\n        \"min\": 0.0,\n        \"max\": 12.1,\n        \"num_unique_values\": 489,\n        \"samples\": [\n          6.825,\n          10.0,\n          7.67\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_O2 saturation pulseoxymetry\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9256407418225525,\n        \"min\": 89.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 285,\n        \"samples\": [\n          99.85714285714286,\n          97.625,\n          95.1875\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_PH (Arterial)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06144467399148677,\n        \"min\": 7.19,\n        \"max\": 7.58,\n        \"num_unique_values\": 131,\n        \"samples\": [\n          7.468333333333334,\n          7.515000000000001,\n          7.48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Peak Insp. Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.3802575119682245,\n        \"min\": 0.0,\n        \"max\": 48.0,\n        \"num_unique_values\": 224,\n        \"samples\": [\n          19.0,\n          33.0,\n          5.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Respiratory Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.682934805150939,\n        \"min\": 4.166666666666667,\n        \"max\": 46.25,\n        \"num_unique_values\": 544,\n        \"samples\": [\n          21.125,\n          28.166666666666668,\n          33.833333333333336\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (observed)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 99.78520516072531,\n        \"min\": 299.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 881,\n        \"samples\": [\n          397.25,\n          366.0,\n          319.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (spontaneous)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 107.12936063379325,\n        \"min\": 299.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 819,\n        \"samples\": [\n          588.0,\n          526.0,\n          597.7985\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_failure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":53}]},{"cell_type":"markdown","source":["**Handle NaN values**\n","\n","You will need to handle the cases where a patient has no values for a feature - fill with the mean across the patient population.\n","\n","We will handle the NaN values by filling with the mean of the patient population."],"metadata":{"id":"UdA4JuHkD1Tf"}},{"cell_type":"code","source":["# See which columns have the most NaNs\n","print(train_aggregated.isna().sum().sort_values(ascending=False))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VTEK8tShJEl3","executionInfo":{"status":"ok","timestamp":1721915905373,"user_tz":-60,"elapsed":521,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"06c1a2fb-9ca4-432a-9d72-ace7e065efe2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["mean_Arterial CO2 Pressure          2390\n","mean_Arterial O2 pressure           2383\n","mean_PH (Arterial)                  2378\n","mean_Tidal Volume (spontaneous)      862\n","mean_Tidal Volume (observed)         529\n","mean_Minute Volume                   381\n","mean_Peak Insp. Pressure             194\n","mean_Inspired O2 Fraction             77\n","mean_O2 saturation pulseoxymetry      13\n","mean_Respiratory Rate                  9\n","subject_id                             0\n","extubation_failure                     0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["print(test_aggregated.isna().sum().sort_values(ascending=False))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"04SELrRuJMLI","executionInfo":{"status":"ok","timestamp":1721915906361,"user_tz":-60,"elapsed":10,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"1b9d3227-ca1e-4f19-afa4-f4cca78bda0b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["mean_Arterial CO2 Pressure          597\n","mean_PH (Arterial)                  596\n","mean_Arterial O2 pressure           593\n","mean_Tidal Volume (spontaneous)     238\n","mean_Tidal Volume (observed)        147\n","mean_Minute Volume                   79\n","mean_Peak Insp. Pressure             51\n","mean_Inspired O2 Fraction            17\n","mean_Respiratory Rate                 7\n","mean_O2 saturation pulseoxymetry      2\n","subject_id                            0\n","extubation_failure                    0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["# Calculate this as a percentage of all data points\n","print(\"Train data:\")\n","print(train_aggregated.isna().sum().sort_values(ascending=False)/len(train_aggregated))\n","print(\"Test data:\")\n","print(test_aggregated.isna().sum().sort_values(ascending=False)/len(test_aggregated))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tFXlR9VVJOED","executionInfo":{"status":"ok","timestamp":1721915908614,"user_tz":-60,"elapsed":6,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"5c975b30-5fdc-4d99-b671-ae5a6a893c22"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Train data:\n","mean_Arterial CO2 Pressure          0.635638\n","mean_Arterial O2 pressure           0.633777\n","mean_PH (Arterial)                  0.632447\n","mean_Tidal Volume (spontaneous)     0.229255\n","mean_Tidal Volume (observed)        0.140691\n","mean_Minute Volume                  0.101330\n","mean_Peak Insp. Pressure            0.051596\n","mean_Inspired O2 Fraction           0.020479\n","mean_O2 saturation pulseoxymetry    0.003457\n","mean_Respiratory Rate               0.002394\n","subject_id                          0.000000\n","extubation_failure                  0.000000\n","dtype: float64\n","Test data:\n","mean_Arterial CO2 Pressure          0.634431\n","mean_PH (Arterial)                  0.633369\n","mean_Arterial O2 pressure           0.630181\n","mean_Tidal Volume (spontaneous)     0.252922\n","mean_Tidal Volume (observed)        0.156217\n","mean_Minute Volume                  0.083953\n","mean_Peak Insp. Pressure            0.054198\n","mean_Inspired O2 Fraction           0.018066\n","mean_Respiratory Rate               0.007439\n","mean_O2 saturation pulseoxymetry    0.002125\n","subject_id                          0.000000\n","extubation_failure                  0.000000\n","dtype: float64\n"]}]},{"cell_type":"markdown","source":["For the low observed features, a significant number of patients had no values at all.\n","\n","This means that there will be a significant amount of data imputed but this is necessary in order to keep the features analogous to those used in the LSTM/TCN training."],"metadata":{"id":"XImiEeKdJfrm"}},{"cell_type":"markdown","source":["**Note: To avoid data leakage, the means being used to fill the test set NaNs are calculated from the training set.**"],"metadata":{"id":"gAs1zDehL_Mp"}},{"cell_type":"code","source":["# Fill the NaN values with the mean of all patients\n","train_aggregated = train_aggregated.fillna(train_aggregated.mean())\n","\n","# Fill the test set NaNs with the mean of the training set to avoid data leakage\n","test_aggregated = test_aggregated.fillna(train_aggregated.mean())"],"metadata":{"id":"fT9gazb8JvI9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Calculate this as a percentage of all data points\n","print(\"Train data:\")\n","print(train_aggregated.isna().sum().sort_values(ascending=False)/len(train_aggregated))\n","print(\"Test data:\")\n","print(test_aggregated.isna().sum().sort_values(ascending=False)/len(test_aggregated))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"snVlT6RaJ_ex","executionInfo":{"status":"ok","timestamp":1721915971034,"user_tz":-60,"elapsed":443,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"40c8349b-7471-4576-a96e-3138e97d7762"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Train data:\n","subject_id                          0.0\n","mean_Arterial CO2 Pressure          0.0\n","mean_Arterial O2 pressure           0.0\n","mean_Inspired O2 Fraction           0.0\n","mean_Minute Volume                  0.0\n","mean_O2 saturation pulseoxymetry    0.0\n","mean_PH (Arterial)                  0.0\n","mean_Peak Insp. Pressure            0.0\n","mean_Respiratory Rate               0.0\n","mean_Tidal Volume (observed)        0.0\n","mean_Tidal Volume (spontaneous)     0.0\n","extubation_failure                  0.0\n","dtype: float64\n","Test data:\n","subject_id                          0.0\n","mean_Arterial CO2 Pressure          0.0\n","mean_Arterial O2 pressure           0.0\n","mean_Inspired O2 Fraction           0.0\n","mean_Minute Volume                  0.0\n","mean_O2 saturation pulseoxymetry    0.0\n","mean_PH (Arterial)                  0.0\n","mean_Peak Insp. Pressure            0.0\n","mean_Respiratory Rate               0.0\n","mean_Tidal Volume (observed)        0.0\n","mean_Tidal Volume (spontaneous)     0.0\n","extubation_failure                  0.0\n","dtype: float64\n"]}]},{"cell_type":"code","source":["train_aggregated.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"VDFNC9UMKU7O","executionInfo":{"status":"ok","timestamp":1721915976596,"user_tz":-60,"elapsed":422,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"b96b3f72-2b0a-42fa-8988-d4e34b51a223"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id  mean_Arterial CO2 Pressure  mean_Arterial O2 pressure  \\\n","0    10001884                   40.689586                 110.926241   \n","1    10002428                   43.000000                 127.000000   \n","2    10004235                   37.500000                 100.500000   \n","3    10010867                   40.689586                 110.926241   \n","4    10011365                   40.689586                 110.926241   \n","\n","   mean_Inspired O2 Fraction  mean_Minute Volume  \\\n","0                  40.000000                 6.1   \n","1                  42.500000                 9.0   \n","2                  50.000000                10.5   \n","3                  46.666667                 5.6   \n","4                  45.000000                 9.4   \n","\n","   mean_O2 saturation pulseoxymetry  mean_PH (Arterial)  \\\n","0                         97.666667            7.415708   \n","1                         99.833333            7.430000   \n","2                         99.333333            7.325000   \n","3                         97.666667            7.415708   \n","4                         93.166667            7.415708   \n","\n","   mean_Peak Insp. Pressure  mean_Respiratory Rate  \\\n","0                      17.0              20.000000   \n","1                      20.5              22.000000   \n","2                      11.0              13.666667   \n","3                      16.0              15.333333   \n","4                      12.0              17.666667   \n","\n","   mean_Tidal Volume (observed)  mean_Tidal Volume (spontaneous)  \\\n","0                    472.138379                       470.899154   \n","1                    380.000000                       355.250000   \n","2                    472.138379                       470.899154   \n","3                    467.000000                       467.000000   \n","4                    344.000000                       344.000000   \n","\n","   extubation_failure  \n","0                   1  \n","1                   0  \n","2                   1  \n","3                   0  \n","4                   1  "],"text/html":["\n","  <div id=\"df-d118418b-66f4-43d4-90af-b64fc29b3ea2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>mean_Arterial CO2 Pressure</th>\n","      <th>mean_Arterial O2 pressure</th>\n","      <th>mean_Inspired O2 Fraction</th>\n","      <th>mean_Minute Volume</th>\n","      <th>mean_O2 saturation pulseoxymetry</th>\n","      <th>mean_PH (Arterial)</th>\n","      <th>mean_Peak Insp. Pressure</th>\n","      <th>mean_Respiratory Rate</th>\n","      <th>mean_Tidal Volume (observed)</th>\n","      <th>mean_Tidal Volume (spontaneous)</th>\n","      <th>extubation_failure</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>40.000000</td>\n","      <td>6.1</td>\n","      <td>97.666667</td>\n","      <td>7.415708</td>\n","      <td>17.0</td>\n","      <td>20.000000</td>\n","      <td>472.138379</td>\n","      <td>470.899154</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002428</td>\n","      <td>43.000000</td>\n","      <td>127.000000</td>\n","      <td>42.500000</td>\n","      <td>9.0</td>\n","      <td>99.833333</td>\n","      <td>7.430000</td>\n","      <td>20.5</td>\n","      <td>22.000000</td>\n","      <td>380.000000</td>\n","      <td>355.250000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10004235</td>\n","      <td>37.500000</td>\n","      <td>100.500000</td>\n","      <td>50.000000</td>\n","      <td>10.5</td>\n","      <td>99.333333</td>\n","      <td>7.325000</td>\n","      <td>11.0</td>\n","      <td>13.666667</td>\n","      <td>472.138379</td>\n","      <td>470.899154</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10010867</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>46.666667</td>\n","      <td>5.6</td>\n","      <td>97.666667</td>\n","      <td>7.415708</td>\n","      <td>16.0</td>\n","      <td>15.333333</td>\n","      <td>467.000000</td>\n","      <td>467.000000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10011365</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>45.000000</td>\n","      <td>9.4</td>\n","      <td>93.166667</td>\n","      <td>7.415708</td>\n","      <td>12.0</td>\n","      <td>17.666667</td>\n","      <td>344.000000</td>\n","      <td>344.000000</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d118418b-66f4-43d4-90af-b64fc29b3ea2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d118418b-66f4-43d4-90af-b64fc29b3ea2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d118418b-66f4-43d4-90af-b64fc29b3ea2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-66dc1446-b71b-48fc-8923-d79e5ca7a1b3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-66dc1446-b71b-48fc-8923-d79e5ca7a1b3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-66dc1446-b71b-48fc-8923-d79e5ca7a1b3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_aggregated","summary":"{\n  \"name\": \"train_aggregated\",\n  \"rows\": 3760,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2322381,\n        \"min\": 10001884,\n        \"max\": 17923146,\n        \"num_unique_values\": 3760,\n        \"samples\": [\n          13216036,\n          16335717,\n          10471192\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial CO2 Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.544101216808135,\n        \"min\": 16.0,\n        \"max\": 66.0,\n        \"num_unique_values\": 128,\n        \"samples\": [\n          37.333333333333336,\n          45.5,\n          64.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial O2 pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.505210540668806,\n        \"min\": 16.0,\n        \"max\": 210.0,\n        \"num_unique_values\": 274,\n        \"samples\": [\n          125.0,\n          149.0,\n          76.66666666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Inspired O2 Fraction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.9391244319819805,\n        \"min\": 21.0,\n        \"max\": 75.0,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          45.0,\n          32.666666666666664,\n          31.666666666666668\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Minute Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.8059606928078442,\n        \"min\": 0.0,\n        \"max\": 12.1,\n        \"num_unique_values\": 490,\n        \"samples\": [\n          6.825,\n          6.300000000000001,\n          6.413333333333334\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_O2 saturation pulseoxymetry\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9223080721287178,\n        \"min\": 89.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 286,\n        \"samples\": [\n          99.85714285714286,\n          99.06666666666666,\n          93.66666666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_PH (Arterial)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.037243022615642433,\n        \"min\": 7.19,\n        \"max\": 7.58,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          7.468333333333334,\n          7.56,\n          7.35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Peak Insp. Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.23958230488984,\n        \"min\": 0.0,\n        \"max\": 48.0,\n        \"num_unique_values\": 225,\n        \"samples\": [\n          16.5,\n          8.75,\n          6.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Respiratory Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.677325378336051,\n        \"min\": 4.166666666666667,\n        \"max\": 46.25,\n        \"num_unique_values\": 545,\n        \"samples\": [\n          14.307692307692308,\n          22.428571428571427,\n          20.636363636363637\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (observed)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 92.49776793287313,\n        \"min\": 299.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 882,\n        \"samples\": [\n          363.0,\n          462.3333333333333,\n          428.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (spontaneous)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 94.04735755923703,\n        \"min\": 299.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 820,\n        \"samples\": [\n          349.3333333333333,\n          439.6666666666667,\n          474.3333333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_failure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":59}]},{"cell_type":"markdown","source":["**Create new features**\n","\n","We can now create SpO2:FiO2 and P:F ratio features that are clinically informative."],"metadata":{"id":"MtD17qwOKPNc"}},{"cell_type":"code","source":["# Create SpO2:FiO2 ratio\n","\n","# Check that no values of FiO2 are 0 to avoid dividing by 0\n","print((train_aggregated['mean_Inspired O2 Fraction'] == 0).sum())\n","print((test_aggregated['mean_Inspired O2 Fraction'] == 0).sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Hi1cWIc0LNQ6","executionInfo":{"status":"ok","timestamp":1721915983533,"user_tz":-60,"elapsed":362,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"75fced1d-a1f9-45b2-b39f-037bdf4c42e8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","0\n"]}]},{"cell_type":"code","source":["train_aggregated_copy = train_aggregated.copy()\n","test_aggregated_copy = test_aggregated.copy()"],"metadata":{"id":"hObkRVrZMeH4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Create SpO2:FiO2\n","train_aggregated['mean_SpO2:FiO2'] = train_aggregated['mean_O2 saturation pulseoxymetry'] / train_aggregated['mean_Inspired O2 Fraction']\n","test_aggregated['mean_SpO2:FiO2'] = test_aggregated['mean_O2 saturation pulseoxymetry'] / test_aggregated['mean_Inspired O2 Fraction']\n","\n","train_aggregated.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"3IHGlZL7MMwE","executionInfo":{"status":"ok","timestamp":1721916099945,"user_tz":-60,"elapsed":563,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"4d33e1e6-009c-40b9-a5ea-eb1233a48a64"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id  mean_Arterial CO2 Pressure  mean_Arterial O2 pressure  \\\n","0    10001884                   40.689586                 110.926241   \n","1    10002428                   43.000000                 127.000000   \n","2    10004235                   37.500000                 100.500000   \n","3    10010867                   40.689586                 110.926241   \n","4    10011365                   40.689586                 110.926241   \n","\n","   mean_Inspired O2 Fraction  mean_Minute Volume  \\\n","0                  40.000000                 6.1   \n","1                  42.500000                 9.0   \n","2                  50.000000                10.5   \n","3                  46.666667                 5.6   \n","4                  45.000000                 9.4   \n","\n","   mean_O2 saturation pulseoxymetry  mean_PH (Arterial)  \\\n","0                         97.666667            7.415708   \n","1                         99.833333            7.430000   \n","2                         99.333333            7.325000   \n","3                         97.666667            7.415708   \n","4                         93.166667            7.415708   \n","\n","   mean_Peak Insp. Pressure  mean_Respiratory Rate  \\\n","0                      17.0              20.000000   \n","1                      20.5              22.000000   \n","2                      11.0              13.666667   \n","3                      16.0              15.333333   \n","4                      12.0              17.666667   \n","\n","   mean_Tidal Volume (observed)  mean_Tidal Volume (spontaneous)  \\\n","0                    472.138379                       470.899154   \n","1                    380.000000                       355.250000   \n","2                    472.138379                       470.899154   \n","3                    467.000000                       467.000000   \n","4                    344.000000                       344.000000   \n","\n","   extubation_failure  mean_SpO2:FiO2  \n","0                   1        2.441667  \n","1                   0        2.349020  \n","2                   1        1.986667  \n","3                   0        2.092857  \n","4                   1        2.070370  "],"text/html":["\n","  <div id=\"df-1ba3354d-86e1-4bdb-a05b-e62c91e63750\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>mean_Arterial CO2 Pressure</th>\n","      <th>mean_Arterial O2 pressure</th>\n","      <th>mean_Inspired O2 Fraction</th>\n","      <th>mean_Minute Volume</th>\n","      <th>mean_O2 saturation pulseoxymetry</th>\n","      <th>mean_PH (Arterial)</th>\n","      <th>mean_Peak Insp. Pressure</th>\n","      <th>mean_Respiratory Rate</th>\n","      <th>mean_Tidal Volume (observed)</th>\n","      <th>mean_Tidal Volume (spontaneous)</th>\n","      <th>extubation_failure</th>\n","      <th>mean_SpO2:FiO2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>40.000000</td>\n","      <td>6.1</td>\n","      <td>97.666667</td>\n","      <td>7.415708</td>\n","      <td>17.0</td>\n","      <td>20.000000</td>\n","      <td>472.138379</td>\n","      <td>470.899154</td>\n","      <td>1</td>\n","      <td>2.441667</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002428</td>\n","      <td>43.000000</td>\n","      <td>127.000000</td>\n","      <td>42.500000</td>\n","      <td>9.0</td>\n","      <td>99.833333</td>\n","      <td>7.430000</td>\n","      <td>20.5</td>\n","      <td>22.000000</td>\n","      <td>380.000000</td>\n","      <td>355.250000</td>\n","      <td>0</td>\n","      <td>2.349020</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10004235</td>\n","      <td>37.500000</td>\n","      <td>100.500000</td>\n","      <td>50.000000</td>\n","      <td>10.5</td>\n","      <td>99.333333</td>\n","      <td>7.325000</td>\n","      <td>11.0</td>\n","      <td>13.666667</td>\n","      <td>472.138379</td>\n","      <td>470.899154</td>\n","      <td>1</td>\n","      <td>1.986667</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10010867</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>46.666667</td>\n","      <td>5.6</td>\n","      <td>97.666667</td>\n","      <td>7.415708</td>\n","      <td>16.0</td>\n","      <td>15.333333</td>\n","      <td>467.000000</td>\n","      <td>467.000000</td>\n","      <td>0</td>\n","      <td>2.092857</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10011365</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>45.000000</td>\n","      <td>9.4</td>\n","      <td>93.166667</td>\n","      <td>7.415708</td>\n","      <td>12.0</td>\n","      <td>17.666667</td>\n","      <td>344.000000</td>\n","      <td>344.000000</td>\n","      <td>1</td>\n","      <td>2.070370</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ba3354d-86e1-4bdb-a05b-e62c91e63750')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1ba3354d-86e1-4bdb-a05b-e62c91e63750 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1ba3354d-86e1-4bdb-a05b-e62c91e63750');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a3f07886-5524-40ee-a0fb-cfe836c05890\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a3f07886-5524-40ee-a0fb-cfe836c05890')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a3f07886-5524-40ee-a0fb-cfe836c05890 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_aggregated","summary":"{\n  \"name\": \"train_aggregated\",\n  \"rows\": 3760,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2322381,\n        \"min\": 10001884,\n        \"max\": 17923146,\n        \"num_unique_values\": 3760,\n        \"samples\": [\n          13216036,\n          16335717,\n          10471192\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial CO2 Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.544101216808135,\n        \"min\": 16.0,\n        \"max\": 66.0,\n        \"num_unique_values\": 128,\n        \"samples\": [\n          37.333333333333336,\n          45.5,\n          64.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial O2 pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.505210540668806,\n        \"min\": 16.0,\n        \"max\": 210.0,\n        \"num_unique_values\": 274,\n        \"samples\": [\n          125.0,\n          149.0,\n          76.66666666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Inspired O2 Fraction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.9391244319819805,\n        \"min\": 21.0,\n        \"max\": 75.0,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          45.0,\n          32.666666666666664,\n          31.666666666666668\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Minute Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.8059606928078442,\n        \"min\": 0.0,\n        \"max\": 12.1,\n        \"num_unique_values\": 490,\n        \"samples\": [\n          6.825,\n          6.300000000000001,\n          6.413333333333334\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_O2 saturation pulseoxymetry\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9223080721287178,\n        \"min\": 89.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 286,\n        \"samples\": [\n          99.85714285714286,\n          99.06666666666666,\n          93.66666666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_PH (Arterial)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.037243022615642433,\n        \"min\": 7.19,\n        \"max\": 7.58,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          7.468333333333334,\n          7.56,\n          7.35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Peak Insp. Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.23958230488984,\n        \"min\": 0.0,\n        \"max\": 48.0,\n        \"num_unique_values\": 225,\n        \"samples\": [\n          16.5,\n          8.75,\n          6.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Respiratory Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.677325378336051,\n        \"min\": 4.166666666666667,\n        \"max\": 46.25,\n        \"num_unique_values\": 545,\n        \"samples\": [\n          14.307692307692308,\n          22.428571428571427,\n          20.636363636363637\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (observed)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 92.49776793287313,\n        \"min\": 299.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 882,\n        \"samples\": [\n          363.0,\n          462.3333333333333,\n          428.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (spontaneous)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 94.04735755923703,\n        \"min\": 299.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 820,\n        \"samples\": [\n          349.3333333333333,\n          439.6666666666667,\n          474.3333333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_failure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_SpO2:FiO2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4193417881800646,\n        \"min\": 1.2714285714285714,\n        \"max\": 4.722222222222222,\n        \"num_unique_values\": 1211,\n        \"samples\": [\n          2.230769230769231,\n          1.915\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["# Create P:F ratio\n","train_aggregated['mean_P:F ratio'] = train_aggregated['mean_Arterial O2 pressure'] / train_aggregated['mean_Inspired O2 Fraction']\n","test_aggregated['mean_P:F ratio'] = test_aggregated['mean_Arterial O2 pressure'] / test_aggregated['mean_Inspired O2 Fraction']\n","\n","train_aggregated.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"azVOs6K0Mq3Y","executionInfo":{"status":"ok","timestamp":1721916177724,"user_tz":-60,"elapsed":442,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"d8228514-e5fd-4a5a-f41d-48f5fe6de29f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id  mean_Arterial CO2 Pressure  mean_Arterial O2 pressure  \\\n","0    10001884                   40.689586                 110.926241   \n","1    10002428                   43.000000                 127.000000   \n","2    10004235                   37.500000                 100.500000   \n","3    10010867                   40.689586                 110.926241   \n","4    10011365                   40.689586                 110.926241   \n","\n","   mean_Inspired O2 Fraction  mean_Minute Volume  \\\n","0                  40.000000                 6.1   \n","1                  42.500000                 9.0   \n","2                  50.000000                10.5   \n","3                  46.666667                 5.6   \n","4                  45.000000                 9.4   \n","\n","   mean_O2 saturation pulseoxymetry  mean_PH (Arterial)  \\\n","0                         97.666667            7.415708   \n","1                         99.833333            7.430000   \n","2                         99.333333            7.325000   \n","3                         97.666667            7.415708   \n","4                         93.166667            7.415708   \n","\n","   mean_Peak Insp. Pressure  mean_Respiratory Rate  \\\n","0                      17.0              20.000000   \n","1                      20.5              22.000000   \n","2                      11.0              13.666667   \n","3                      16.0              15.333333   \n","4                      12.0              17.666667   \n","\n","   mean_Tidal Volume (observed)  mean_Tidal Volume (spontaneous)  \\\n","0                    472.138379                       470.899154   \n","1                    380.000000                       355.250000   \n","2                    472.138379                       470.899154   \n","3                    467.000000                       467.000000   \n","4                    344.000000                       344.000000   \n","\n","   extubation_failure  mean_SpO2:FiO2  mean_P:F ratio  \n","0                   1        2.441667        2.773156  \n","1                   0        2.349020        2.988235  \n","2                   1        1.986667        2.010000  \n","3                   0        2.092857        2.376991  \n","4                   1        2.070370        2.465028  "],"text/html":["\n","  <div id=\"df-09b6bfcd-ef1f-425a-a12c-de63c2fd30cf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>mean_Arterial CO2 Pressure</th>\n","      <th>mean_Arterial O2 pressure</th>\n","      <th>mean_Inspired O2 Fraction</th>\n","      <th>mean_Minute Volume</th>\n","      <th>mean_O2 saturation pulseoxymetry</th>\n","      <th>mean_PH (Arterial)</th>\n","      <th>mean_Peak Insp. Pressure</th>\n","      <th>mean_Respiratory Rate</th>\n","      <th>mean_Tidal Volume (observed)</th>\n","      <th>mean_Tidal Volume (spontaneous)</th>\n","      <th>extubation_failure</th>\n","      <th>mean_SpO2:FiO2</th>\n","      <th>mean_P:F ratio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>40.000000</td>\n","      <td>6.1</td>\n","      <td>97.666667</td>\n","      <td>7.415708</td>\n","      <td>17.0</td>\n","      <td>20.000000</td>\n","      <td>472.138379</td>\n","      <td>470.899154</td>\n","      <td>1</td>\n","      <td>2.441667</td>\n","      <td>2.773156</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002428</td>\n","      <td>43.000000</td>\n","      <td>127.000000</td>\n","      <td>42.500000</td>\n","      <td>9.0</td>\n","      <td>99.833333</td>\n","      <td>7.430000</td>\n","      <td>20.5</td>\n","      <td>22.000000</td>\n","      <td>380.000000</td>\n","      <td>355.250000</td>\n","      <td>0</td>\n","      <td>2.349020</td>\n","      <td>2.988235</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10004235</td>\n","      <td>37.500000</td>\n","      <td>100.500000</td>\n","      <td>50.000000</td>\n","      <td>10.5</td>\n","      <td>99.333333</td>\n","      <td>7.325000</td>\n","      <td>11.0</td>\n","      <td>13.666667</td>\n","      <td>472.138379</td>\n","      <td>470.899154</td>\n","      <td>1</td>\n","      <td>1.986667</td>\n","      <td>2.010000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10010867</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>46.666667</td>\n","      <td>5.6</td>\n","      <td>97.666667</td>\n","      <td>7.415708</td>\n","      <td>16.0</td>\n","      <td>15.333333</td>\n","      <td>467.000000</td>\n","      <td>467.000000</td>\n","      <td>0</td>\n","      <td>2.092857</td>\n","      <td>2.376991</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10011365</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>45.000000</td>\n","      <td>9.4</td>\n","      <td>93.166667</td>\n","      <td>7.415708</td>\n","      <td>12.0</td>\n","      <td>17.666667</td>\n","      <td>344.000000</td>\n","      <td>344.000000</td>\n","      <td>1</td>\n","      <td>2.070370</td>\n","      <td>2.465028</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-09b6bfcd-ef1f-425a-a12c-de63c2fd30cf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-09b6bfcd-ef1f-425a-a12c-de63c2fd30cf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-09b6bfcd-ef1f-425a-a12c-de63c2fd30cf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0f4c086f-5a82-4af1-9e5e-a32437776dde\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0f4c086f-5a82-4af1-9e5e-a32437776dde')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0f4c086f-5a82-4af1-9e5e-a32437776dde button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_aggregated","summary":"{\n  \"name\": \"train_aggregated\",\n  \"rows\": 3760,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2322381,\n        \"min\": 10001884,\n        \"max\": 17923146,\n        \"num_unique_values\": 3760,\n        \"samples\": [\n          13216036,\n          16335717,\n          10471192\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial CO2 Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.544101216808135,\n        \"min\": 16.0,\n        \"max\": 66.0,\n        \"num_unique_values\": 128,\n        \"samples\": [\n          37.333333333333336,\n          45.5,\n          64.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial O2 pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.505210540668806,\n        \"min\": 16.0,\n        \"max\": 210.0,\n        \"num_unique_values\": 274,\n        \"samples\": [\n          125.0,\n          149.0,\n          76.66666666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Inspired O2 Fraction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.9391244319819805,\n        \"min\": 21.0,\n        \"max\": 75.0,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          45.0,\n          32.666666666666664,\n          31.666666666666668\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Minute Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.8059606928078442,\n        \"min\": 0.0,\n        \"max\": 12.1,\n        \"num_unique_values\": 490,\n        \"samples\": [\n          6.825,\n          6.300000000000001,\n          6.413333333333334\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_O2 saturation pulseoxymetry\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9223080721287178,\n        \"min\": 89.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 286,\n        \"samples\": [\n          99.85714285714286,\n          99.06666666666666,\n          93.66666666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_PH (Arterial)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.037243022615642433,\n        \"min\": 7.19,\n        \"max\": 7.58,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          7.468333333333334,\n          7.56,\n          7.35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Peak Insp. Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.23958230488984,\n        \"min\": 0.0,\n        \"max\": 48.0,\n        \"num_unique_values\": 225,\n        \"samples\": [\n          16.5,\n          8.75,\n          6.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Respiratory Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.677325378336051,\n        \"min\": 4.166666666666667,\n        \"max\": 46.25,\n        \"num_unique_values\": 545,\n        \"samples\": [\n          14.307692307692308,\n          22.428571428571427,\n          20.636363636363637\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (observed)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 92.49776793287313,\n        \"min\": 299.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 882,\n        \"samples\": [\n          363.0,\n          462.3333333333333,\n          428.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (spontaneous)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 94.04735755923703,\n        \"min\": 299.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 820,\n        \"samples\": [\n          349.3333333333333,\n          439.6666666666667,\n          474.3333333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_failure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_SpO2:FiO2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4193417881800646,\n        \"min\": 1.2714285714285714,\n        \"max\": 4.722222222222222,\n        \"num_unique_values\": 1211,\n        \"samples\": [\n          2.230769230769231,\n          1.915\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_P:F ratio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6409363001923429,\n        \"min\": 0.34285714285714286,\n        \"max\": 6.063157894736842,\n        \"num_unique_values\": 803,\n        \"samples\": [\n          1.8427113804560453,\n          3.3681818181818186\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["# Move extubation_failure column to the end\n","cols = train_aggregated.columns.tolist()\n","cols.remove('extubation_failure')\n","cols.append('extubation_failure')\n","\n","train_aggregated = train_aggregated[cols]\n","test_aggregated = test_aggregated[cols]\n","\n","train_aggregated.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"MXUWedgMM80L","executionInfo":{"status":"ok","timestamp":1721916198150,"user_tz":-60,"elapsed":423,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"638d13c5-d5b2-47e2-e7d4-5373c8813ab0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id  mean_Arterial CO2 Pressure  mean_Arterial O2 pressure  \\\n","0    10001884                   40.689586                 110.926241   \n","1    10002428                   43.000000                 127.000000   \n","2    10004235                   37.500000                 100.500000   \n","3    10010867                   40.689586                 110.926241   \n","4    10011365                   40.689586                 110.926241   \n","\n","   mean_Inspired O2 Fraction  mean_Minute Volume  \\\n","0                  40.000000                 6.1   \n","1                  42.500000                 9.0   \n","2                  50.000000                10.5   \n","3                  46.666667                 5.6   \n","4                  45.000000                 9.4   \n","\n","   mean_O2 saturation pulseoxymetry  mean_PH (Arterial)  \\\n","0                         97.666667            7.415708   \n","1                         99.833333            7.430000   \n","2                         99.333333            7.325000   \n","3                         97.666667            7.415708   \n","4                         93.166667            7.415708   \n","\n","   mean_Peak Insp. Pressure  mean_Respiratory Rate  \\\n","0                      17.0              20.000000   \n","1                      20.5              22.000000   \n","2                      11.0              13.666667   \n","3                      16.0              15.333333   \n","4                      12.0              17.666667   \n","\n","   mean_Tidal Volume (observed)  mean_Tidal Volume (spontaneous)  \\\n","0                    472.138379                       470.899154   \n","1                    380.000000                       355.250000   \n","2                    472.138379                       470.899154   \n","3                    467.000000                       467.000000   \n","4                    344.000000                       344.000000   \n","\n","   mean_SpO2:FiO2  mean_P:F ratio  extubation_failure  \n","0        2.441667        2.773156                   1  \n","1        2.349020        2.988235                   0  \n","2        1.986667        2.010000                   1  \n","3        2.092857        2.376991                   0  \n","4        2.070370        2.465028                   1  "],"text/html":["\n","  <div id=\"df-7aea748e-cb66-46ae-b2a7-6d4b113a2e9b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>mean_Arterial CO2 Pressure</th>\n","      <th>mean_Arterial O2 pressure</th>\n","      <th>mean_Inspired O2 Fraction</th>\n","      <th>mean_Minute Volume</th>\n","      <th>mean_O2 saturation pulseoxymetry</th>\n","      <th>mean_PH (Arterial)</th>\n","      <th>mean_Peak Insp. Pressure</th>\n","      <th>mean_Respiratory Rate</th>\n","      <th>mean_Tidal Volume (observed)</th>\n","      <th>mean_Tidal Volume (spontaneous)</th>\n","      <th>mean_SpO2:FiO2</th>\n","      <th>mean_P:F ratio</th>\n","      <th>extubation_failure</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>40.000000</td>\n","      <td>6.1</td>\n","      <td>97.666667</td>\n","      <td>7.415708</td>\n","      <td>17.0</td>\n","      <td>20.000000</td>\n","      <td>472.138379</td>\n","      <td>470.899154</td>\n","      <td>2.441667</td>\n","      <td>2.773156</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002428</td>\n","      <td>43.000000</td>\n","      <td>127.000000</td>\n","      <td>42.500000</td>\n","      <td>9.0</td>\n","      <td>99.833333</td>\n","      <td>7.430000</td>\n","      <td>20.5</td>\n","      <td>22.000000</td>\n","      <td>380.000000</td>\n","      <td>355.250000</td>\n","      <td>2.349020</td>\n","      <td>2.988235</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10004235</td>\n","      <td>37.500000</td>\n","      <td>100.500000</td>\n","      <td>50.000000</td>\n","      <td>10.5</td>\n","      <td>99.333333</td>\n","      <td>7.325000</td>\n","      <td>11.0</td>\n","      <td>13.666667</td>\n","      <td>472.138379</td>\n","      <td>470.899154</td>\n","      <td>1.986667</td>\n","      <td>2.010000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10010867</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>46.666667</td>\n","      <td>5.6</td>\n","      <td>97.666667</td>\n","      <td>7.415708</td>\n","      <td>16.0</td>\n","      <td>15.333333</td>\n","      <td>467.000000</td>\n","      <td>467.000000</td>\n","      <td>2.092857</td>\n","      <td>2.376991</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10011365</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>45.000000</td>\n","      <td>9.4</td>\n","      <td>93.166667</td>\n","      <td>7.415708</td>\n","      <td>12.0</td>\n","      <td>17.666667</td>\n","      <td>344.000000</td>\n","      <td>344.000000</td>\n","      <td>2.070370</td>\n","      <td>2.465028</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7aea748e-cb66-46ae-b2a7-6d4b113a2e9b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7aea748e-cb66-46ae-b2a7-6d4b113a2e9b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7aea748e-cb66-46ae-b2a7-6d4b113a2e9b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-efbc39e9-d050-4030-866f-ce891e66daa3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-efbc39e9-d050-4030-866f-ce891e66daa3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-efbc39e9-d050-4030-866f-ce891e66daa3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_aggregated","summary":"{\n  \"name\": \"train_aggregated\",\n  \"rows\": 3760,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2322381,\n        \"min\": 10001884,\n        \"max\": 17923146,\n        \"num_unique_values\": 3760,\n        \"samples\": [\n          13216036,\n          16335717,\n          10471192\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial CO2 Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.544101216808135,\n        \"min\": 16.0,\n        \"max\": 66.0,\n        \"num_unique_values\": 128,\n        \"samples\": [\n          37.333333333333336,\n          45.5,\n          64.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial O2 pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.505210540668806,\n        \"min\": 16.0,\n        \"max\": 210.0,\n        \"num_unique_values\": 274,\n        \"samples\": [\n          125.0,\n          149.0,\n          76.66666666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Inspired O2 Fraction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.9391244319819805,\n        \"min\": 21.0,\n        \"max\": 75.0,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          45.0,\n          32.666666666666664,\n          31.666666666666668\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Minute Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.8059606928078442,\n        \"min\": 0.0,\n        \"max\": 12.1,\n        \"num_unique_values\": 490,\n        \"samples\": [\n          6.825,\n          6.300000000000001,\n          6.413333333333334\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_O2 saturation pulseoxymetry\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9223080721287178,\n        \"min\": 89.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 286,\n        \"samples\": [\n          99.85714285714286,\n          99.06666666666666,\n          93.66666666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_PH (Arterial)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.037243022615642433,\n        \"min\": 7.19,\n        \"max\": 7.58,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          7.468333333333334,\n          7.56,\n          7.35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Peak Insp. Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.23958230488984,\n        \"min\": 0.0,\n        \"max\": 48.0,\n        \"num_unique_values\": 225,\n        \"samples\": [\n          16.5,\n          8.75,\n          6.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Respiratory Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.677325378336051,\n        \"min\": 4.166666666666667,\n        \"max\": 46.25,\n        \"num_unique_values\": 545,\n        \"samples\": [\n          14.307692307692308,\n          22.428571428571427,\n          20.636363636363637\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (observed)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 92.49776793287313,\n        \"min\": 299.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 882,\n        \"samples\": [\n          363.0,\n          462.3333333333333,\n          428.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (spontaneous)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 94.04735755923703,\n        \"min\": 299.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 820,\n        \"samples\": [\n          349.3333333333333,\n          439.6666666666667,\n          474.3333333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_SpO2:FiO2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4193417881800646,\n        \"min\": 1.2714285714285714,\n        \"max\": 4.722222222222222,\n        \"num_unique_values\": 1211,\n        \"samples\": [\n          2.230769230769231,\n          1.915,\n          2.3193277310924367\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_P:F ratio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6409363001923429,\n        \"min\": 0.34285714285714286,\n        \"max\": 6.063157894736842,\n        \"num_unique_values\": 803,\n        \"samples\": [\n          1.8427113804560453,\n          3.3681818181818186,\n          4.538888888888889\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"extubation_failure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["# Check for any NaNs\n","print(train_aggregated.isna().sum().sort_values(ascending=False))\n","print(test_aggregated.isna().sum().sort_values(ascending=False))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3qDvnvHyNECg","executionInfo":{"status":"ok","timestamp":1721916224214,"user_tz":-60,"elapsed":404,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"ed34feb2-10f4-4920-ab91-2da3cf48bfee"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["subject_id                          0\n","mean_Arterial CO2 Pressure          0\n","mean_Arterial O2 pressure           0\n","mean_Inspired O2 Fraction           0\n","mean_Minute Volume                  0\n","mean_O2 saturation pulseoxymetry    0\n","mean_PH (Arterial)                  0\n","mean_Peak Insp. Pressure            0\n","mean_Respiratory Rate               0\n","mean_Tidal Volume (observed)        0\n","mean_Tidal Volume (spontaneous)     0\n","mean_SpO2:FiO2                      0\n","mean_P:F ratio                      0\n","extubation_failure                  0\n","dtype: int64\n","subject_id                          0\n","mean_Arterial CO2 Pressure          0\n","mean_Arterial O2 pressure           0\n","mean_Inspired O2 Fraction           0\n","mean_Minute Volume                  0\n","mean_O2 saturation pulseoxymetry    0\n","mean_PH (Arterial)                  0\n","mean_Peak Insp. Pressure            0\n","mean_Respiratory Rate               0\n","mean_Tidal Volume (observed)        0\n","mean_Tidal Volume (spontaneous)     0\n","mean_SpO2:FiO2                      0\n","mean_P:F ratio                      0\n","extubation_failure                  0\n","dtype: int64\n"]}]},{"cell_type":"markdown","source":["There are no NaN values and all patients have a mean value for all features. We can now use this data to train a LightGBM model."],"metadata":{"id":"lTkW5ZlzNHrs"}},{"cell_type":"code","source":["train_aggregated.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o7FRzinNNN5U","executionInfo":{"status":"ok","timestamp":1721916322839,"user_tz":-60,"elapsed":412,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"e542f90e-dd8e-4182-fa77-6870e48b6656"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3760, 14)"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["test_aggregated.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"27Vn3w0kNgvB","executionInfo":{"status":"ok","timestamp":1721916332304,"user_tz":-60,"elapsed":369,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"c9ca7f17-83f7-4ce7-8b80-dbf1aa7a0057"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(941, 14)"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["# Save the data\n","train_aggregated.to_parquet('/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/data_analysis/datasets/08_model_input_data/01_feature_set_1/02_lgbm_data/dynamic_data/train_aggregated.parquet')\n","test_aggregated.to_parquet('/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/data_analysis/datasets/08_model_input_data/01_feature_set_1/02_lgbm_data/dynamic_data/test_aggregated.parquet')"],"metadata":{"id":"DHT83MZyORkD"},"execution_count":null,"outputs":[]}]}