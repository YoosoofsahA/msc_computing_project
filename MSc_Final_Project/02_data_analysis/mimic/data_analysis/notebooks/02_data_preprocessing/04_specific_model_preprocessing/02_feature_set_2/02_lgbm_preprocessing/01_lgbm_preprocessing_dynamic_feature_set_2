{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1Shdh6Eum2A7Bj4hptDh806Fs3x0kXOz3","authorship_tag":"ABX9TyMFo7pAI7KcLC8fJT369FA6"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **LightGBM preprocessing**\n","\n","We looked at which Gradient Boosting architecture was the best performing when applied to predicting extubation failure.\n","\n","The purpose of using a Gradient Boosting framework is as a baseline for the more sophisticated time-series models.\n","\n","GBMs inherently cannot process sequences of data, hence any data input would need to be static. As such, it is accetped that the outcome of the GBM models will not be meaningful regarding the intenition of this project to make a prediction based on time series data, but it serves as a useful baseline to compare performance.\n","\n","The typical GBM models used in literature are XGBoost, LightGBM and CatBoost. Each have their unique adaptations but are all GBMs at heart. To select which one to use as the baseline of this study, we anlaysed their use in literature and LightGBM was the best performer on the primary metric used in this study of ROCAUC.\n","\n","As such, we will process our patient data for use in a LightGBM for classification prediction of extubation failure.\n","\n","LightGBM models do not require features to be scaled."],"metadata":{"id":"kOADjKg5-AxS"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"d6F0CmvU97cu","executionInfo":{"status":"ok","timestamp":1722956781466,"user_tz":-60,"elapsed":3747,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qrDt_juy_nm_","executionInfo":{"status":"ok","timestamp":1722957683126,"user_tz":-60,"elapsed":16872,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"a5877719-7c52-4a56-a0d0-369823443a45"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["**Load the train and test data**\n","\n","The following has already been applied to the data for LSTM/TCN models:\n","- Remove low observed features\n","- Split into train and test sets\n","- Removed outliers\n","\n","We will take this data so that we have the same train and test sets and results are comparable as possible."],"metadata":{"id":"UUaX8VTY_w0N"}},{"cell_type":"code","source":["# Load the train and test data\n","train_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/data_analysis/datasets/07_data_preprocessing/02_feature_set_2/03_train_data_f2_outliers_removed.parquet'\n","test_path = '/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/data_analysis/datasets/07_data_preprocessing/02_feature_set_2/03_test_data_f2_outliers_removed.parquet'\n","\n","train_df = pd.read_parquet(train_path)\n","test_df = pd.read_parquet(test_path)\n","\n","train_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"O-FbnaLFBuQM","executionInfo":{"status":"ok","timestamp":1722957717972,"user_tz":-60,"elapsed":3403,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"309aa169-7192-46db-9136-dd35136848c4"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id  valuenum  time_from_window_start_mins  \\\n","0    10001884      40.0                        200.0   \n","1    10001884       NaN                        200.0   \n","2    10001884       NaN                        200.0   \n","3    10001884       6.1                        200.0   \n","4    10001884      17.0                        200.0   \n","\n","                feature_label  extubation_failure  \n","0        Inspired O2 Fraction                   1  \n","1     Tidal Volume (observed)                   1  \n","2  Tidal Volume (spontaneous)                   1  \n","3               Minute Volume                   1  \n","4         Peak Insp. Pressure                   1  "],"text/html":["\n","  <div id=\"df-cc4e71ea-d289-4fdd-ab3e-b548ee55ce4b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>valuenum</th>\n","      <th>time_from_window_start_mins</th>\n","      <th>feature_label</th>\n","      <th>extubation_failure</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>40.0</td>\n","      <td>200.0</td>\n","      <td>Inspired O2 Fraction</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10001884</td>\n","      <td>NaN</td>\n","      <td>200.0</td>\n","      <td>Tidal Volume (observed)</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10001884</td>\n","      <td>NaN</td>\n","      <td>200.0</td>\n","      <td>Tidal Volume (spontaneous)</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10001884</td>\n","      <td>6.1</td>\n","      <td>200.0</td>\n","      <td>Minute Volume</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10001884</td>\n","      <td>17.0</td>\n","      <td>200.0</td>\n","      <td>Peak Insp. Pressure</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cc4e71ea-d289-4fdd-ab3e-b548ee55ce4b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cc4e71ea-d289-4fdd-ab3e-b548ee55ce4b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cc4e71ea-d289-4fdd-ab3e-b548ee55ce4b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2f2a349f-dd02-4bac-a143-944a0ad5008a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2f2a349f-dd02-4bac-a143-944a0ad5008a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2f2a349f-dd02-4bac-a143-944a0ad5008a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_df"}},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["**Remove NaN values**\n","\n","In the previous pre-processing all outliers were set to NaN. We will just remove those values to avoid further imputation. Furthermore, since we are using mean aggregation these will not likley have any impact."],"metadata":{"id":"Bieuu076B_vE"}},{"cell_type":"code","source":["# Count the number of NaN data points\n","print('Number of NaN values in train set: ', train_df.isna().sum().sum())\n","print('Number of NaN values in test set: ', test_df.isna().sum().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ghDfqAqWCPom","executionInfo":{"status":"ok","timestamp":1722957720048,"user_tz":-60,"elapsed":213,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"5b921770-e902-4f9b-a718-d9bb9d1dac34"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of NaN values in train set:  15142\n","Number of NaN values in test set:  3815\n"]}]},{"cell_type":"code","source":["# Count the number of data points\n","print('Number of data points in train set: ', train_df.shape[0])\n","print('Number of data points in test set: ', test_df.shape[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wgl11uiiCfCY","executionInfo":{"status":"ok","timestamp":1722957721705,"user_tz":-60,"elapsed":252,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"e4bf21e6-1a57-4603-a969-ee280eb981f2"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of data points in train set:  181953\n","Number of data points in test set:  45925\n"]}]},{"cell_type":"code","source":["# Remove any data point that is NaN\n","train_df = train_df.dropna()\n","test_df = test_df.dropna()\n","\n","# Count the number of data points\n","print('Number of data points in train set: ', train_df.shape[0])\n","print('Number of data points in test set: ', test_df.shape[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pnw79hmkCaEF","executionInfo":{"status":"ok","timestamp":1722957725381,"user_tz":-60,"elapsed":208,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"00416a35-d1e5-40a4-e17b-e7cb7963899f"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of data points in train set:  166811\n","Number of data points in test set:  42110\n"]}]},{"cell_type":"markdown","source":["**Data aggregation**\n","\n","For each patient we will need a fixed set of features.\n","\n","We will do Mean Aggregation to best represent these features - averaging all values across the 6 hour window."],"metadata":{"id":"SPBt9zIzClhf"}},{"cell_type":"code","source":["train_copy = train_df.copy()\n","test_copy = test_df.copy()"],"metadata":{"id":"I1oAaVp4EHvg","executionInfo":{"status":"ok","timestamp":1722957734895,"user_tz":-60,"elapsed":197,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["from scipy import stats"],"metadata":{"id":"MHWoe42qSPwI","executionInfo":{"status":"ok","timestamp":1722957760945,"user_tz":-60,"elapsed":259,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["categorical_features = ['GCS - Eye Opening', 'GCS - Motor Response', 'Richmond-RAS Scale']"],"metadata":{"id":"HUYv3ZBHSMzD","executionInfo":{"status":"ok","timestamp":1722957747241,"user_tz":-60,"elapsed":304,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["# Assuming train_df and test_df are your DataFrames\n","categorical_features = ['GCS - Eye Opening', 'GCS - Motor Response', 'Richmond-RAS Scale']  # Add your categorical features here\n","\n","# Filter categorical features from the DataFrame\n","cat_train = train_df[train_df['feature_label'].isin(categorical_features)]\n","cat_test = test_df[test_df['feature_label'].isin(categorical_features)]\n","\n","# Calculate mode for categorical features\n","cat_train_pivoted = cat_train.pivot_table(index='subject_id',\n","                                          columns='feature_label',\n","                                          values='valuenum',\n","                                          aggfunc=lambda x: stats.mode(x, keepdims=False)[0] if len(x) > 0 else None) # Handle the case when stats.mode returns a single value\n","cat_test_pivoted = cat_test.pivot_table(index='subject_id',\n","                                        columns='feature_label',\n","                                        values='valuenum',\n","                                        aggfunc=lambda x: stats.mode(x, keepdims=False)[0] if len(x) > 0 else None) # Handle the case when stats.mode returns a single value\n","\n","# Rename columns to highlight the mode\n","cat_train_pivoted.columns = ['mode_' + str(col) for col in cat_train_pivoted.columns.values]\n","cat_test_pivoted.columns = ['mode_' + str(col) for col in cat_test_pivoted.columns.values]\n","\n","# Reset index\n","cat_train_pivoted = cat_train_pivoted.reset_index()\n","cat_test_pivoted = cat_test_pivoted.reset_index()\n","\n","# Display the result\n","cat_train_pivoted.head()\n","cat_test_pivoted.head()"],"metadata":{"id":"vC7sEBvcD-Fk","executionInfo":{"status":"ok","timestamp":1722957776683,"user_tz":-60,"elapsed":6978,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"colab":{"base_uri":"https://localhost:8080/","height":206},"outputId":"94406ed5-0a81-4398-f285-a9bcd1a8cb96"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id  mode_GCS - Eye Opening  mode_GCS - Motor Response  \\\n","0    10004720                     4.0                        2.0   \n","1    10004733                     NaN                        NaN   \n","2    10005817                     4.0                        4.0   \n","3    10022620                     4.0                        6.0   \n","4    10037861                     1.0                        1.0   \n","\n","   mode_Richmond-RAS Scale  \n","0                     -5.0  \n","1                     -4.0  \n","2                     -1.0  \n","3                      0.0  \n","4                     -5.0  "],"text/html":["\n","  <div id=\"df-ab339d5f-75d9-43fc-91eb-b738987eba0e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>mode_GCS - Eye Opening</th>\n","      <th>mode_GCS - Motor Response</th>\n","      <th>mode_Richmond-RAS Scale</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10004720</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>-5.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10004733</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-4.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10005817</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>-1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10022620</td>\n","      <td>4.0</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10037861</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>-5.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ab339d5f-75d9-43fc-91eb-b738987eba0e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ab339d5f-75d9-43fc-91eb-b738987eba0e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ab339d5f-75d9-43fc-91eb-b738987eba0e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4b96af03-839e-4031-8192-d4b256dffce8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4b96af03-839e-4031-8192-d4b256dffce8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4b96af03-839e-4031-8192-d4b256dffce8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cat_test_pivoted","summary":"{\n  \"name\": \"cat_test_pivoted\",\n  \"rows\": 907,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2252686,\n        \"min\": 10004720,\n        \"max\": 17910586,\n        \"num_unique_values\": 907,\n        \"samples\": [\n          17589545,\n          13877157,\n          13090343\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mode_GCS - Eye Opening\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9743251942541127,\n        \"min\": 1.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0,\n          3.0,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mode_GCS - Motor Response\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4937065799723146,\n        \"min\": 1.0,\n        \"max\": 6.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2.0,\n          4.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mode_Richmond-RAS Scale\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.6026260887297372,\n        \"min\": -5.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          3.0,\n          -4.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# Filter numerical features from the DataFrame\n","num_train = train_df[~train_df['feature_label'].isin(categorical_features)]\n","num_test = test_df[~test_df['feature_label'].isin(categorical_features)]\n","\n","# Calculate mean for numerical features\n","num_train_pivoted = num_train.pivot_table(index='subject_id',\n","                                          columns='feature_label',\n","                                          values='valuenum',\n","                                          aggfunc='mean')\n","num_test_pivoted = num_test.pivot_table(index='subject_id',\n","                                        columns='feature_label',\n","                                        values='valuenum',\n","                                        aggfunc='mean')\n","\n","# Rename columns to highlight the mean\n","num_train_pivoted.columns = ['mean_' + str(col) for col in num_train_pivoted.columns.values]\n","num_test_pivoted.columns = ['mean_' + str(col) for col in num_test_pivoted.columns.values]\n","\n","# Reset index\n","num_train_pivoted = num_train_pivoted.reset_index()\n","num_test_pivoted = num_test_pivoted.reset_index()\n","\n","# Display the result\n","num_train_pivoted.head()\n","num_test_pivoted.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":278},"id":"VnEHsCvASYb5","executionInfo":{"status":"ok","timestamp":1722957794923,"user_tz":-60,"elapsed":547,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"a3e28e69-6646-4c8a-9f36-5e504c9059e4"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id  mean_Arterial Blood Pressure diastolic  \\\n","0    10004720                                     NaN   \n","1    10004733                                     NaN   \n","2    10005817                                    62.0   \n","3    10013643                                    66.8   \n","4    10022620                                     NaN   \n","\n","   mean_Arterial Blood Pressure mean  mean_Arterial Blood Pressure systolic  \\\n","0                                NaN                                    NaN   \n","1                                NaN                                    NaN   \n","2                             79.875                                  131.0   \n","3                             76.125                                  105.8   \n","4                                NaN                                    NaN   \n","\n","   mean_Arterial CO2 Pressure  mean_Arterial O2 pressure  mean_Heart Rate  \\\n","0                         NaN                        NaN        86.428571   \n","1                         NaN                        NaN        70.500000   \n","2                        35.5                      108.5        84.750000   \n","3                        37.5                      129.5        91.000000   \n","4                         NaN                        NaN       121.166667   \n","\n","   mean_Inspired O2 Fraction  mean_Mean Airway Pressure  mean_Minute Volume  \\\n","0                       40.0                   7.250000            7.300000   \n","1                       35.0                   7.000000            5.000000   \n","2                       40.0                   9.233333            9.350000   \n","3                       40.0                   5.666667            6.466667   \n","4                       40.0                   4.333333            6.433333   \n","\n","   mean_O2 saturation pulseoxymetry  mean_PH (Arterial)  \\\n","0                         95.166667                 NaN   \n","1                         97.833333                 NaN   \n","2                         97.714286               7.555   \n","3                         98.375000               7.340   \n","4                         98.833333                 NaN   \n","\n","   mean_Peak Insp. Pressure  mean_Respiratory Rate  \\\n","0                 11.500000              26.714286   \n","1                 20.000000              12.750000   \n","2                 18.000000              18.875000   \n","3                 14.666667              18.250000   \n","4                  9.333333              20.833333   \n","\n","   mean_Temperature Fahrenheit  mean_Tidal Volume (observed)  \\\n","0                        99.20                    340.000000   \n","1                        99.05                    515.000000   \n","2                        98.40                    523.000000   \n","3                        98.50                    501.666667   \n","4                        98.75                    577.500000   \n","\n","   mean_Tidal Volume (spontaneous)  \n","0                           340.00  \n","1                              NaN  \n","2                           507.00  \n","3                           550.50  \n","4                           468.75  "],"text/html":["\n","  <div id=\"df-4aff70fb-93a6-4e0a-a2fc-96c37cddc3e2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>mean_Arterial Blood Pressure diastolic</th>\n","      <th>mean_Arterial Blood Pressure mean</th>\n","      <th>mean_Arterial Blood Pressure systolic</th>\n","      <th>mean_Arterial CO2 Pressure</th>\n","      <th>mean_Arterial O2 pressure</th>\n","      <th>mean_Heart Rate</th>\n","      <th>mean_Inspired O2 Fraction</th>\n","      <th>mean_Mean Airway Pressure</th>\n","      <th>mean_Minute Volume</th>\n","      <th>mean_O2 saturation pulseoxymetry</th>\n","      <th>mean_PH (Arterial)</th>\n","      <th>mean_Peak Insp. Pressure</th>\n","      <th>mean_Respiratory Rate</th>\n","      <th>mean_Temperature Fahrenheit</th>\n","      <th>mean_Tidal Volume (observed)</th>\n","      <th>mean_Tidal Volume (spontaneous)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10004720</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>86.428571</td>\n","      <td>40.0</td>\n","      <td>7.250000</td>\n","      <td>7.300000</td>\n","      <td>95.166667</td>\n","      <td>NaN</td>\n","      <td>11.500000</td>\n","      <td>26.714286</td>\n","      <td>99.20</td>\n","      <td>340.000000</td>\n","      <td>340.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10004733</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>70.500000</td>\n","      <td>35.0</td>\n","      <td>7.000000</td>\n","      <td>5.000000</td>\n","      <td>97.833333</td>\n","      <td>NaN</td>\n","      <td>20.000000</td>\n","      <td>12.750000</td>\n","      <td>99.05</td>\n","      <td>515.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10005817</td>\n","      <td>62.0</td>\n","      <td>79.875</td>\n","      <td>131.0</td>\n","      <td>35.5</td>\n","      <td>108.5</td>\n","      <td>84.750000</td>\n","      <td>40.0</td>\n","      <td>9.233333</td>\n","      <td>9.350000</td>\n","      <td>97.714286</td>\n","      <td>7.555</td>\n","      <td>18.000000</td>\n","      <td>18.875000</td>\n","      <td>98.40</td>\n","      <td>523.000000</td>\n","      <td>507.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10013643</td>\n","      <td>66.8</td>\n","      <td>76.125</td>\n","      <td>105.8</td>\n","      <td>37.5</td>\n","      <td>129.5</td>\n","      <td>91.000000</td>\n","      <td>40.0</td>\n","      <td>5.666667</td>\n","      <td>6.466667</td>\n","      <td>98.375000</td>\n","      <td>7.340</td>\n","      <td>14.666667</td>\n","      <td>18.250000</td>\n","      <td>98.50</td>\n","      <td>501.666667</td>\n","      <td>550.50</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10022620</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>121.166667</td>\n","      <td>40.0</td>\n","      <td>4.333333</td>\n","      <td>6.433333</td>\n","      <td>98.833333</td>\n","      <td>NaN</td>\n","      <td>9.333333</td>\n","      <td>20.833333</td>\n","      <td>98.75</td>\n","      <td>577.500000</td>\n","      <td>468.75</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4aff70fb-93a6-4e0a-a2fc-96c37cddc3e2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4aff70fb-93a6-4e0a-a2fc-96c37cddc3e2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4aff70fb-93a6-4e0a-a2fc-96c37cddc3e2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3a8d897c-3e53-4f2f-beee-0a96d6535053\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3a8d897c-3e53-4f2f-beee-0a96d6535053')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3a8d897c-3e53-4f2f-beee-0a96d6535053 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"num_test_pivoted","summary":"{\n  \"name\": \"num_test_pivoted\",\n  \"rows\": 941,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2249626,\n        \"min\": 10004720,\n        \"max\": 17910586,\n        \"num_unique_values\": 941,\n        \"samples\": [\n          12856295,\n          14934742,\n          13425764\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial Blood Pressure diastolic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.373268877068151,\n        \"min\": 60.0,\n        \"max\": 90.0,\n        \"num_unique_values\": 173,\n        \"samples\": [\n          64.75,\n          64.4,\n          71.83333333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial Blood Pressure mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.323918529746871,\n        \"min\": 37.5,\n        \"max\": 128.07142857142858,\n        \"num_unique_values\": 335,\n        \"samples\": [\n          77.16666666666667,\n          90.33333333333333,\n          70.16666666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial Blood Pressure systolic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.310422954200108,\n        \"min\": 91.0,\n        \"max\": 140.0,\n        \"num_unique_values\": 299,\n        \"samples\": [\n          104.875,\n          110.66666666666667,\n          128.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial CO2 Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.447429578465506,\n        \"min\": 23.0,\n        \"max\": 66.0,\n        \"num_unique_values\": 78,\n        \"samples\": [\n          41.5,\n          35.5,\n          51.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial O2 pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31.463265140555894,\n        \"min\": 45.0,\n        \"max\": 202.0,\n        \"num_unique_values\": 161,\n        \"samples\": [\n          98.5,\n          94.5,\n          80.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Heart Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.213807508409438,\n        \"min\": 44.833333333333336,\n        \"max\": 135.0,\n        \"num_unique_values\": 520,\n        \"samples\": [\n          94.83333333333333,\n          85.83333333333333,\n          86.18181818181819\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Inspired O2 Fraction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.691270507949667,\n        \"min\": 21.0,\n        \"max\": 70.0,\n        \"num_unique_values\": 42,\n        \"samples\": [\n          21.0,\n          33.333333333333336,\n          32.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Mean Airway Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.321622927797065,\n        \"min\": 1.0,\n        \"max\": 17.0,\n        \"num_unique_values\": 134,\n        \"samples\": [\n          6.05,\n          7.066666666666666,\n          9.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Minute Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.8824487870026823,\n        \"min\": 3.7,\n        \"max\": 12.1,\n        \"num_unique_values\": 249,\n        \"samples\": [\n          5.95,\n          8.8,\n          10.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_O2 saturation pulseoxymetry\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.979097192381218,\n        \"min\": 89.5,\n        \"max\": 100.0,\n        \"num_unique_values\": 168,\n        \"samples\": [\n          96.3,\n          98.16666666666667,\n          97.58333333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_PH (Arterial)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06321076415435088,\n        \"min\": 7.2,\n        \"max\": 7.58,\n        \"num_unique_values\": 80,\n        \"samples\": [\n          7.426666666666667,\n          7.555,\n          7.466666666666666\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Peak Insp. Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.256252478380794,\n        \"min\": 0.0,\n        \"max\": 43.0,\n        \"num_unique_values\": 115,\n        \"samples\": [\n          28.5,\n          9.333333333333334,\n          25.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Respiratory Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.681452526241241,\n        \"min\": 7.571428571428571,\n        \"max\": 39.0,\n        \"num_unique_values\": 308,\n        \"samples\": [\n          14.25,\n          18.75,\n          18.166666666666668\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Temperature Fahrenheit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0045366689126942,\n        \"min\": 95.35,\n        \"max\": 103.05000000000001,\n        \"num_unique_values\": 164,\n        \"samples\": [\n          98.45,\n          99.06666666666666,\n          97.33333333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (observed)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 103.27686416867252,\n        \"min\": 299.0,\n        \"max\": 749.0,\n        \"num_unique_values\": 472,\n        \"samples\": [\n          398.5,\n          310.0,\n          719.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (spontaneous)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 108.36855823147332,\n        \"min\": 299.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 433,\n        \"samples\": [\n          643.0,\n          691.0,\n          431.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# Merge the categorical and numerical pivoted DataFrames\n","train_combined = pd.merge(cat_train_pivoted, num_train_pivoted, on='subject_id', how='outer')\n","test_combined = pd.merge(cat_test_pivoted, num_test_pivoted, on='subject_id', how='outer')\n","\n","# Display the combined result\n","train_combined.head()\n","test_combined.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":278},"id":"tT4BrlN7Sbjq","executionInfo":{"status":"ok","timestamp":1722957807612,"user_tz":-60,"elapsed":597,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"612528bf-6a99-48fd-d90f-46a8c0185f9a"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id  mode_GCS - Eye Opening  mode_GCS - Motor Response  \\\n","0    10004720                     4.0                        2.0   \n","1    10004733                     NaN                        NaN   \n","2    10005817                     4.0                        4.0   \n","3    10022620                     4.0                        6.0   \n","4    10037861                     1.0                        1.0   \n","\n","   mode_Richmond-RAS Scale  mean_Arterial Blood Pressure diastolic  \\\n","0                     -5.0                                     NaN   \n","1                     -4.0                                     NaN   \n","2                     -1.0                                    62.0   \n","3                      0.0                                     NaN   \n","4                     -5.0                                    68.0   \n","\n","   mean_Arterial Blood Pressure mean  mean_Arterial Blood Pressure systolic  \\\n","0                                NaN                                    NaN   \n","1                                NaN                                    NaN   \n","2                             79.875                             131.000000   \n","3                                NaN                                    NaN   \n","4                             77.000                             126.166667   \n","\n","   mean_Arterial CO2 Pressure  mean_Arterial O2 pressure  mean_Heart Rate  \\\n","0                         NaN                        NaN        86.428571   \n","1                         NaN                        NaN        70.500000   \n","2                        35.5                      108.5        84.750000   \n","3                         NaN                        NaN       121.166667   \n","4                         NaN                        NaN        99.333333   \n","\n","   mean_Inspired O2 Fraction  mean_Mean Airway Pressure  mean_Minute Volume  \\\n","0                       40.0                   7.250000            7.300000   \n","1                       35.0                   7.000000            5.000000   \n","2                       40.0                   9.233333            9.350000   \n","3                       40.0                   4.333333            6.433333   \n","4                       30.0                  11.000000           10.300000   \n","\n","   mean_O2 saturation pulseoxymetry  mean_PH (Arterial)  \\\n","0                         95.166667                 NaN   \n","1                         97.833333                 NaN   \n","2                         97.714286               7.555   \n","3                         98.833333                 NaN   \n","4                         98.333333                 NaN   \n","\n","   mean_Peak Insp. Pressure  mean_Respiratory Rate  \\\n","0                 11.500000              26.714286   \n","1                 20.000000              12.750000   \n","2                 18.000000              18.875000   \n","3                  9.333333              20.833333   \n","4                 21.000000              22.000000   \n","\n","   mean_Temperature Fahrenheit  mean_Tidal Volume (observed)  \\\n","0                        99.20                         340.0   \n","1                        99.05                         515.0   \n","2                        98.40                         523.0   \n","3                        98.75                         577.5   \n","4                          NaN                         486.0   \n","\n","   mean_Tidal Volume (spontaneous)  \n","0                           340.00  \n","1                              NaN  \n","2                           507.00  \n","3                           468.75  \n","4                           486.00  "],"text/html":["\n","  <div id=\"df-3d155e09-b6c5-40f5-ab1c-ebde057f42e8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>mode_GCS - Eye Opening</th>\n","      <th>mode_GCS - Motor Response</th>\n","      <th>mode_Richmond-RAS Scale</th>\n","      <th>mean_Arterial Blood Pressure diastolic</th>\n","      <th>mean_Arterial Blood Pressure mean</th>\n","      <th>mean_Arterial Blood Pressure systolic</th>\n","      <th>mean_Arterial CO2 Pressure</th>\n","      <th>mean_Arterial O2 pressure</th>\n","      <th>mean_Heart Rate</th>\n","      <th>mean_Inspired O2 Fraction</th>\n","      <th>mean_Mean Airway Pressure</th>\n","      <th>mean_Minute Volume</th>\n","      <th>mean_O2 saturation pulseoxymetry</th>\n","      <th>mean_PH (Arterial)</th>\n","      <th>mean_Peak Insp. Pressure</th>\n","      <th>mean_Respiratory Rate</th>\n","      <th>mean_Temperature Fahrenheit</th>\n","      <th>mean_Tidal Volume (observed)</th>\n","      <th>mean_Tidal Volume (spontaneous)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10004720</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>-5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>86.428571</td>\n","      <td>40.0</td>\n","      <td>7.250000</td>\n","      <td>7.300000</td>\n","      <td>95.166667</td>\n","      <td>NaN</td>\n","      <td>11.500000</td>\n","      <td>26.714286</td>\n","      <td>99.20</td>\n","      <td>340.0</td>\n","      <td>340.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10004733</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-4.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>70.500000</td>\n","      <td>35.0</td>\n","      <td>7.000000</td>\n","      <td>5.000000</td>\n","      <td>97.833333</td>\n","      <td>NaN</td>\n","      <td>20.000000</td>\n","      <td>12.750000</td>\n","      <td>99.05</td>\n","      <td>515.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10005817</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>-1.0</td>\n","      <td>62.0</td>\n","      <td>79.875</td>\n","      <td>131.000000</td>\n","      <td>35.5</td>\n","      <td>108.5</td>\n","      <td>84.750000</td>\n","      <td>40.0</td>\n","      <td>9.233333</td>\n","      <td>9.350000</td>\n","      <td>97.714286</td>\n","      <td>7.555</td>\n","      <td>18.000000</td>\n","      <td>18.875000</td>\n","      <td>98.40</td>\n","      <td>523.0</td>\n","      <td>507.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10022620</td>\n","      <td>4.0</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>121.166667</td>\n","      <td>40.0</td>\n","      <td>4.333333</td>\n","      <td>6.433333</td>\n","      <td>98.833333</td>\n","      <td>NaN</td>\n","      <td>9.333333</td>\n","      <td>20.833333</td>\n","      <td>98.75</td>\n","      <td>577.5</td>\n","      <td>468.75</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10037861</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>-5.0</td>\n","      <td>68.0</td>\n","      <td>77.000</td>\n","      <td>126.166667</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>99.333333</td>\n","      <td>30.0</td>\n","      <td>11.000000</td>\n","      <td>10.300000</td>\n","      <td>98.333333</td>\n","      <td>NaN</td>\n","      <td>21.000000</td>\n","      <td>22.000000</td>\n","      <td>NaN</td>\n","      <td>486.0</td>\n","      <td>486.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d155e09-b6c5-40f5-ab1c-ebde057f42e8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3d155e09-b6c5-40f5-ab1c-ebde057f42e8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3d155e09-b6c5-40f5-ab1c-ebde057f42e8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-49089be4-447d-46ce-9326-345bf38658c7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-49089be4-447d-46ce-9326-345bf38658c7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-49089be4-447d-46ce-9326-345bf38658c7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test_combined","summary":"{\n  \"name\": \"test_combined\",\n  \"rows\": 941,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2249626,\n        \"min\": 10004720,\n        \"max\": 17910586,\n        \"num_unique_values\": 941,\n        \"samples\": [\n          13031876,\n          15071011,\n          13582085\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mode_GCS - Eye Opening\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9743251942541127,\n        \"min\": 1.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0,\n          3.0,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mode_GCS - Motor Response\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4937065799723148,\n        \"min\": 1.0,\n        \"max\": 6.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2.0,\n          4.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mode_Richmond-RAS Scale\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.602626088729737,\n        \"min\": -5.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          3.0,\n          -4.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial Blood Pressure diastolic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.373268877068151,\n        \"min\": 60.0,\n        \"max\": 90.0,\n        \"num_unique_values\": 173,\n        \"samples\": [\n          74.33333333333333,\n          70.33333333333333,\n          63.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial Blood Pressure mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.323918529746871,\n        \"min\": 37.5,\n        \"max\": 128.07142857142858,\n        \"num_unique_values\": 335,\n        \"samples\": [\n          112.83333333333333,\n          77.66666666666667,\n          85.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial Blood Pressure systolic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.310422954200106,\n        \"min\": 91.0,\n        \"max\": 140.0,\n        \"num_unique_values\": 299,\n        \"samples\": [\n          123.16666666666667,\n          96.0,\n          126.66666666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial CO2 Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.447429578465507,\n        \"min\": 23.0,\n        \"max\": 66.0,\n        \"num_unique_values\": 78,\n        \"samples\": [\n          26.5,\n          35.5,\n          42.666666666666664\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial O2 pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31.463265140555894,\n        \"min\": 45.0,\n        \"max\": 202.0,\n        \"num_unique_values\": 161,\n        \"samples\": [\n          94.5,\n          99.25,\n          84.66666666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Heart Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.21380750840944,\n        \"min\": 44.833333333333336,\n        \"max\": 135.0,\n        \"num_unique_values\": 520,\n        \"samples\": [\n          91.5,\n          66.5,\n          78.71428571428571\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Inspired O2 Fraction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.691270507949667,\n        \"min\": 21.0,\n        \"max\": 70.0,\n        \"num_unique_values\": 42,\n        \"samples\": [\n          21.0,\n          60.0,\n          32.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Mean Airway Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.321622927797065,\n        \"min\": 1.0,\n        \"max\": 17.0,\n        \"num_unique_values\": 134,\n        \"samples\": [\n          8.2,\n          1.5,\n          11.285714285714286\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Minute Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.8824487870026823,\n        \"min\": 3.7,\n        \"max\": 12.1,\n        \"num_unique_values\": 249,\n        \"samples\": [\n          5.75,\n          8.7,\n          8.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_O2 saturation pulseoxymetry\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.979097192381218,\n        \"min\": 89.5,\n        \"max\": 100.0,\n        \"num_unique_values\": 168,\n        \"samples\": [\n          99.21428571428571,\n          97.66666666666667,\n          99.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_PH (Arterial)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0632107641543509,\n        \"min\": 7.2,\n        \"max\": 7.58,\n        \"num_unique_values\": 80,\n        \"samples\": [\n          7.295,\n          7.555,\n          7.49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Peak Insp. Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.256252478380794,\n        \"min\": 0.0,\n        \"max\": 43.0,\n        \"num_unique_values\": 115,\n        \"samples\": [\n          4.0,\n          21.0,\n          10.05\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Respiratory Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.681452526241241,\n        \"min\": 7.571428571428571,\n        \"max\": 39.0,\n        \"num_unique_values\": 308,\n        \"samples\": [\n          17.285714285714285,\n          21.22222222222222,\n          19.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Temperature Fahrenheit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0045366689126942,\n        \"min\": 95.35,\n        \"max\": 103.05000000000001,\n        \"num_unique_values\": 164,\n        \"samples\": [\n          96.45,\n          98.05,\n          97.50999999999999\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (observed)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 103.27686416867252,\n        \"min\": 299.0,\n        \"max\": 749.0,\n        \"num_unique_values\": 472,\n        \"samples\": [\n          463.0,\n          524.0,\n          575.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (spontaneous)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 108.36855823147332,\n        \"min\": 299.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 433,\n        \"samples\": [\n          323.0,\n          337.0,\n          402.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["**Add extubation failure label**"],"metadata":{"id":"ww6uHRcGFf7f"}},{"cell_type":"code","source":["# Add extubation failure label\n","label_df = train_df[['subject_id', 'extubation_failure']].drop_duplicates(subset='subject_id')\n","train_aggregated = train_combined.merge(label_df, on='subject_id', how='left')\n","\n","label_df = test_df[['subject_id', 'extubation_failure']].drop_duplicates(subset='subject_id')\n","test_aggregated = test_combined.merge(label_df, on='subject_id', how='left')"],"metadata":{"id":"jwYMipFoFKuf","executionInfo":{"status":"ok","timestamp":1722957817845,"user_tz":-60,"elapsed":196,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["train_aggregated.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":307},"id":"A5l1N76xFfG8","executionInfo":{"status":"ok","timestamp":1722957820050,"user_tz":-60,"elapsed":381,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"faeb8b91-61f8-4e5c-9382-26c8803a3ff3"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id  mode_GCS - Eye Opening  mode_GCS - Motor Response  \\\n","0    10001884                     3.0                        6.0   \n","1    10002428                     3.0                        6.0   \n","2    10004235                     4.0                        6.0   \n","3    10010867                     2.0                        4.0   \n","4    10011365                     NaN                        NaN   \n","\n","   mode_Richmond-RAS Scale  mean_Arterial Blood Pressure diastolic  \\\n","0                     -1.0                                     NaN   \n","1                      0.0                               61.666667   \n","2                      NaN                                     NaN   \n","3                     -4.0                                     NaN   \n","4                      0.0                                     NaN   \n","\n","   mean_Arterial Blood Pressure mean  mean_Arterial Blood Pressure systolic  \\\n","0                                NaN                                    NaN   \n","1                          81.166667                                  118.5   \n","2                                NaN                                    NaN   \n","3                                NaN                                    NaN   \n","4                                NaN                                    NaN   \n","\n","   mean_Arterial CO2 Pressure  mean_Arterial O2 pressure  mean_Heart Rate  \\\n","0                         NaN                        NaN        74.750000   \n","1                        43.0                      127.0       105.833333   \n","2                        37.5                      100.5       104.833333   \n","3                         NaN                        NaN        99.000000   \n","4                         NaN                        NaN        88.166667   \n","\n","   ...  mean_Mean Airway Pressure  mean_Minute Volume  \\\n","0  ...                        7.6                 6.1   \n","1  ...                       11.5                 9.0   \n","2  ...                        6.0                10.5   \n","3  ...                        8.9                 5.6   \n","4  ...                        7.5                 9.4   \n","\n","   mean_O2 saturation pulseoxymetry  mean_PH (Arterial)  \\\n","0                         97.666667                 NaN   \n","1                         99.833333               7.430   \n","2                         99.333333               7.325   \n","3                         97.666667                 NaN   \n","4                         93.166667                 NaN   \n","\n","   mean_Peak Insp. Pressure  mean_Respiratory Rate  \\\n","0                      17.0              20.000000   \n","1                      20.5              22.000000   \n","2                      11.0              13.666667   \n","3                      16.0              15.333333   \n","4                      12.0              17.666667   \n","\n","   mean_Temperature Fahrenheit  mean_Tidal Volume (observed)  \\\n","0                          NaN                           NaN   \n","1                    98.366667                         380.0   \n","2                          NaN                           NaN   \n","3                    99.300000                         467.0   \n","4                    98.800000                         344.0   \n","\n","   mean_Tidal Volume (spontaneous)  extubation_failure  \n","0                              NaN                   1  \n","1                           355.25                   0  \n","2                              NaN                   1  \n","3                           467.00                   0  \n","4                           344.00                   1  \n","\n","[5 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-cb9ff2dd-8d9f-4906-bfb2-2214c8df0bd9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>mode_GCS - Eye Opening</th>\n","      <th>mode_GCS - Motor Response</th>\n","      <th>mode_Richmond-RAS Scale</th>\n","      <th>mean_Arterial Blood Pressure diastolic</th>\n","      <th>mean_Arterial Blood Pressure mean</th>\n","      <th>mean_Arterial Blood Pressure systolic</th>\n","      <th>mean_Arterial CO2 Pressure</th>\n","      <th>mean_Arterial O2 pressure</th>\n","      <th>mean_Heart Rate</th>\n","      <th>...</th>\n","      <th>mean_Mean Airway Pressure</th>\n","      <th>mean_Minute Volume</th>\n","      <th>mean_O2 saturation pulseoxymetry</th>\n","      <th>mean_PH (Arterial)</th>\n","      <th>mean_Peak Insp. Pressure</th>\n","      <th>mean_Respiratory Rate</th>\n","      <th>mean_Temperature Fahrenheit</th>\n","      <th>mean_Tidal Volume (observed)</th>\n","      <th>mean_Tidal Volume (spontaneous)</th>\n","      <th>extubation_failure</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>3.0</td>\n","      <td>6.0</td>\n","      <td>-1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>74.750000</td>\n","      <td>...</td>\n","      <td>7.6</td>\n","      <td>6.1</td>\n","      <td>97.666667</td>\n","      <td>NaN</td>\n","      <td>17.0</td>\n","      <td>20.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002428</td>\n","      <td>3.0</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>61.666667</td>\n","      <td>81.166667</td>\n","      <td>118.5</td>\n","      <td>43.0</td>\n","      <td>127.0</td>\n","      <td>105.833333</td>\n","      <td>...</td>\n","      <td>11.5</td>\n","      <td>9.0</td>\n","      <td>99.833333</td>\n","      <td>7.430</td>\n","      <td>20.5</td>\n","      <td>22.000000</td>\n","      <td>98.366667</td>\n","      <td>380.0</td>\n","      <td>355.25</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10004235</td>\n","      <td>4.0</td>\n","      <td>6.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>37.5</td>\n","      <td>100.5</td>\n","      <td>104.833333</td>\n","      <td>...</td>\n","      <td>6.0</td>\n","      <td>10.5</td>\n","      <td>99.333333</td>\n","      <td>7.325</td>\n","      <td>11.0</td>\n","      <td>13.666667</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10010867</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>-4.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>99.000000</td>\n","      <td>...</td>\n","      <td>8.9</td>\n","      <td>5.6</td>\n","      <td>97.666667</td>\n","      <td>NaN</td>\n","      <td>16.0</td>\n","      <td>15.333333</td>\n","      <td>99.300000</td>\n","      <td>467.0</td>\n","      <td>467.00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10011365</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>88.166667</td>\n","      <td>...</td>\n","      <td>7.5</td>\n","      <td>9.4</td>\n","      <td>93.166667</td>\n","      <td>NaN</td>\n","      <td>12.0</td>\n","      <td>17.666667</td>\n","      <td>98.800000</td>\n","      <td>344.0</td>\n","      <td>344.00</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb9ff2dd-8d9f-4906-bfb2-2214c8df0bd9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cb9ff2dd-8d9f-4906-bfb2-2214c8df0bd9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cb9ff2dd-8d9f-4906-bfb2-2214c8df0bd9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9e0ccb66-96f4-4a90-b8a4-7e8ff08428b6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9e0ccb66-96f4-4a90-b8a4-7e8ff08428b6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9e0ccb66-96f4-4a90-b8a4-7e8ff08428b6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_aggregated"}},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["**Handle NaN values**\n","\n","We will need to handle the cases where a patient has no values for a feature - fill with the mean across the patient population.\n","\n","These features usually correspond to those with the lowest observations.\n","\n","We will handle the NaN values by filling with the mean of the patient population."],"metadata":{"id":"UdA4JuHkD1Tf"}},{"cell_type":"code","source":["# See which columns have the most NaNs\n","print(train_aggregated.isna().sum().sort_values(ascending=False))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VTEK8tShJEl3","executionInfo":{"status":"ok","timestamp":1722957831238,"user_tz":-60,"elapsed":210,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"f2439445-3d58-4c86-a1fe-4dbde03ac13d"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["mean_Arterial CO2 Pressure                2390\n","mean_Arterial O2 pressure                 2383\n","mean_PH (Arterial)                        2378\n","mean_Arterial Blood Pressure diastolic    2204\n","mean_Arterial Blood Pressure systolic     1756\n","mean_Arterial Blood Pressure mean         1622\n","mean_Tidal Volume (spontaneous)            862\n","mode_Richmond-RAS Scale                    822\n","mean_Tidal Volume (observed)               529\n","mean_Temperature Fahrenheit                481\n","mean_Minute Volume                         381\n","mode_GCS - Motor Response                  269\n","mode_GCS - Eye Opening                     257\n","mean_Peak Insp. Pressure                   194\n","mean_Mean Airway Pressure                  158\n","mean_Inspired O2 Fraction                   77\n","mean_O2 saturation pulseoxymetry            13\n","mean_Respiratory Rate                        9\n","mean_Heart Rate                              1\n","subject_id                                   0\n","extubation_failure                           0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["print(test_aggregated.isna().sum().sort_values(ascending=False))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"04SELrRuJMLI","executionInfo":{"status":"ok","timestamp":1722957832847,"user_tz":-60,"elapsed":192,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"21f0856d-edb5-4c57-a092-58c2d72e01d9"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["mean_Arterial CO2 Pressure                597\n","mean_PH (Arterial)                        596\n","mean_Arterial O2 pressure                 593\n","mean_Arterial Blood Pressure diastolic    538\n","mean_Arterial Blood Pressure systolic     458\n","mean_Arterial Blood Pressure mean         411\n","mean_Tidal Volume (spontaneous)           238\n","mode_Richmond-RAS Scale                   208\n","mean_Tidal Volume (observed)              147\n","mean_Temperature Fahrenheit               123\n","mean_Minute Volume                         79\n","mode_GCS - Motor Response                  62\n","mode_GCS - Eye Opening                     58\n","mean_Peak Insp. Pressure                   51\n","mean_Mean Airway Pressure                  39\n","mean_Inspired O2 Fraction                  17\n","mean_Respiratory Rate                       7\n","mean_O2 saturation pulseoxymetry            2\n","mean_Heart Rate                             2\n","subject_id                                  0\n","extubation_failure                          0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["# Calculate this as a percentage of all data points\n","print(\"Train data:\")\n","print(train_aggregated.isna().sum().sort_values(ascending=False)/len(train_aggregated))\n","print(\"Test data:\")\n","print(test_aggregated.isna().sum().sort_values(ascending=False)/len(test_aggregated))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tFXlR9VVJOED","executionInfo":{"status":"ok","timestamp":1722957835864,"user_tz":-60,"elapsed":255,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"5cea1850-80e8-4c2f-df0c-e9a2dcfef920"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Train data:\n","mean_Arterial CO2 Pressure                0.635638\n","mean_Arterial O2 pressure                 0.633777\n","mean_PH (Arterial)                        0.632447\n","mean_Arterial Blood Pressure diastolic    0.586170\n","mean_Arterial Blood Pressure systolic     0.467021\n","mean_Arterial Blood Pressure mean         0.431383\n","mean_Tidal Volume (spontaneous)           0.229255\n","mode_Richmond-RAS Scale                   0.218617\n","mean_Tidal Volume (observed)              0.140691\n","mean_Temperature Fahrenheit               0.127926\n","mean_Minute Volume                        0.101330\n","mode_GCS - Motor Response                 0.071543\n","mode_GCS - Eye Opening                    0.068351\n","mean_Peak Insp. Pressure                  0.051596\n","mean_Mean Airway Pressure                 0.042021\n","mean_Inspired O2 Fraction                 0.020479\n","mean_O2 saturation pulseoxymetry          0.003457\n","mean_Respiratory Rate                     0.002394\n","mean_Heart Rate                           0.000266\n","subject_id                                0.000000\n","extubation_failure                        0.000000\n","dtype: float64\n","Test data:\n","mean_Arterial CO2 Pressure                0.634431\n","mean_PH (Arterial)                        0.633369\n","mean_Arterial O2 pressure                 0.630181\n","mean_Arterial Blood Pressure diastolic    0.571732\n","mean_Arterial Blood Pressure systolic     0.486716\n","mean_Arterial Blood Pressure mean         0.436769\n","mean_Tidal Volume (spontaneous)           0.252922\n","mode_Richmond-RAS Scale                   0.221041\n","mean_Tidal Volume (observed)              0.156217\n","mean_Temperature Fahrenheit               0.130712\n","mean_Minute Volume                        0.083953\n","mode_GCS - Motor Response                 0.065887\n","mode_GCS - Eye Opening                    0.061637\n","mean_Peak Insp. Pressure                  0.054198\n","mean_Mean Airway Pressure                 0.041445\n","mean_Inspired O2 Fraction                 0.018066\n","mean_Respiratory Rate                     0.007439\n","mean_O2 saturation pulseoxymetry          0.002125\n","mean_Heart Rate                           0.002125\n","subject_id                                0.000000\n","extubation_failure                        0.000000\n","dtype: float64\n"]}]},{"cell_type":"markdown","source":["For the low observed features, a significant number of patients had no values at all.\n","\n","This means that there will be a significant amount of data imputed but this is necessary in order to keep the features analogous to those used in the LSTM/TCN training."],"metadata":{"id":"XImiEeKdJfrm"}},{"cell_type":"markdown","source":["**Note: To avoid data leakage, the means being used to fill the test set NaNs are calculated from the training set.**"],"metadata":{"id":"gAs1zDehL_Mp"}},{"cell_type":"code","source":["# Assuming train_combined and test_combined are the merged DataFrames from previous steps\n","categorical_features = ['GCS - Eye Opening', 'GCS - Motor Response', 'Richmond-RAS Scale']  # Add your categorical features here\n","\n","# Separate categorical and numerical columns in train_combined\n","cat_columns = [col for col in train_combined.columns if 'mode_' in col]\n","num_columns = [col for col in train_combined.columns if 'mean_' in col]\n","\n","# Fill NaN values with the mean for numerical features in train_combined\n","train_combined[num_columns] = train_combined[num_columns].fillna(train_combined[num_columns].mean())\n","\n","# Fill NaN values with the mode for categorical features in train_combined\n","for col in cat_columns:\n","    mode_value = train_combined[col].mode()[0] if not train_combined[col].mode().empty else None\n","    train_combined[col] = train_combined[col].fillna(mode_value)\n","\n","# For test_combined, fill NaNs with the mean of train_combined for numerical features\n","test_combined[num_columns] = test_combined[num_columns].fillna(train_combined[num_columns].mean())\n","\n","# For test_combined, fill NaNs with the mode of train_combined for categorical features\n","for col in cat_columns:\n","    mode_value = train_combined[col].mode()[0] if not train_combined[col].mode().empty else None\n","    test_combined[col] = test_combined[col].fillna(mode_value)\n","\n","# Display the final DataFrames\n","train_combined.head()\n","test_combined.head()"],"metadata":{"id":"fT9gazb8JvI9","executionInfo":{"status":"ok","timestamp":1722957850076,"user_tz":-60,"elapsed":228,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"colab":{"base_uri":"https://localhost:8080/","height":278},"outputId":"20460117-d8b9-45f8-a69c-d8ed85172ac6"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id  mode_GCS - Eye Opening  mode_GCS - Motor Response  \\\n","0    10004720                     4.0                        2.0   \n","1    10004733                     4.0                        6.0   \n","2    10005817                     4.0                        4.0   \n","3    10022620                     4.0                        6.0   \n","4    10037861                     1.0                        1.0   \n","\n","   mode_Richmond-RAS Scale  mean_Arterial Blood Pressure diastolic  \\\n","0                     -5.0                               68.416171   \n","1                     -4.0                               68.416171   \n","2                     -1.0                               62.000000   \n","3                      0.0                               68.416171   \n","4                     -5.0                               68.000000   \n","\n","   mean_Arterial Blood Pressure mean  mean_Arterial Blood Pressure systolic  \\\n","0                          81.300472                             117.652355   \n","1                          81.300472                             117.652355   \n","2                          79.875000                             131.000000   \n","3                          81.300472                             117.652355   \n","4                          77.000000                             126.166667   \n","\n","   mean_Arterial CO2 Pressure  mean_Arterial O2 pressure  mean_Heart Rate  \\\n","0                   40.689586                 110.926241        86.428571   \n","1                   40.689586                 110.926241        70.500000   \n","2                   35.500000                 108.500000        84.750000   \n","3                   40.689586                 110.926241       121.166667   \n","4                   40.689586                 110.926241        99.333333   \n","\n","   mean_Inspired O2 Fraction  mean_Mean Airway Pressure  mean_Minute Volume  \\\n","0                       40.0                   7.250000            7.300000   \n","1                       35.0                   7.000000            5.000000   \n","2                       40.0                   9.233333            9.350000   \n","3                       40.0                   4.333333            6.433333   \n","4                       30.0                  11.000000           10.300000   \n","\n","   mean_O2 saturation pulseoxymetry  mean_PH (Arterial)  \\\n","0                         95.166667            7.415708   \n","1                         97.833333            7.415708   \n","2                         97.714286            7.555000   \n","3                         98.833333            7.415708   \n","4                         98.333333            7.415708   \n","\n","   mean_Peak Insp. Pressure  mean_Respiratory Rate  \\\n","0                 11.500000              26.714286   \n","1                 20.000000              12.750000   \n","2                 18.000000              18.875000   \n","3                  9.333333              20.833333   \n","4                 21.000000              22.000000   \n","\n","   mean_Temperature Fahrenheit  mean_Tidal Volume (observed)  \\\n","0                    99.200000                         340.0   \n","1                    99.050000                         515.0   \n","2                    98.400000                         523.0   \n","3                    98.750000                         577.5   \n","4                    98.862106                         486.0   \n","\n","   mean_Tidal Volume (spontaneous)  \n","0                       340.000000  \n","1                       470.899154  \n","2                       507.000000  \n","3                       468.750000  \n","4                       486.000000  "],"text/html":["\n","  <div id=\"df-e6e00583-44fa-4051-8ac0-8ce9b3ac55fe\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>mode_GCS - Eye Opening</th>\n","      <th>mode_GCS - Motor Response</th>\n","      <th>mode_Richmond-RAS Scale</th>\n","      <th>mean_Arterial Blood Pressure diastolic</th>\n","      <th>mean_Arterial Blood Pressure mean</th>\n","      <th>mean_Arterial Blood Pressure systolic</th>\n","      <th>mean_Arterial CO2 Pressure</th>\n","      <th>mean_Arterial O2 pressure</th>\n","      <th>mean_Heart Rate</th>\n","      <th>mean_Inspired O2 Fraction</th>\n","      <th>mean_Mean Airway Pressure</th>\n","      <th>mean_Minute Volume</th>\n","      <th>mean_O2 saturation pulseoxymetry</th>\n","      <th>mean_PH (Arterial)</th>\n","      <th>mean_Peak Insp. Pressure</th>\n","      <th>mean_Respiratory Rate</th>\n","      <th>mean_Temperature Fahrenheit</th>\n","      <th>mean_Tidal Volume (observed)</th>\n","      <th>mean_Tidal Volume (spontaneous)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10004720</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>-5.0</td>\n","      <td>68.416171</td>\n","      <td>81.300472</td>\n","      <td>117.652355</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>86.428571</td>\n","      <td>40.0</td>\n","      <td>7.250000</td>\n","      <td>7.300000</td>\n","      <td>95.166667</td>\n","      <td>7.415708</td>\n","      <td>11.500000</td>\n","      <td>26.714286</td>\n","      <td>99.200000</td>\n","      <td>340.0</td>\n","      <td>340.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10004733</td>\n","      <td>4.0</td>\n","      <td>6.0</td>\n","      <td>-4.0</td>\n","      <td>68.416171</td>\n","      <td>81.300472</td>\n","      <td>117.652355</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>70.500000</td>\n","      <td>35.0</td>\n","      <td>7.000000</td>\n","      <td>5.000000</td>\n","      <td>97.833333</td>\n","      <td>7.415708</td>\n","      <td>20.000000</td>\n","      <td>12.750000</td>\n","      <td>99.050000</td>\n","      <td>515.0</td>\n","      <td>470.899154</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10005817</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>-1.0</td>\n","      <td>62.000000</td>\n","      <td>79.875000</td>\n","      <td>131.000000</td>\n","      <td>35.500000</td>\n","      <td>108.500000</td>\n","      <td>84.750000</td>\n","      <td>40.0</td>\n","      <td>9.233333</td>\n","      <td>9.350000</td>\n","      <td>97.714286</td>\n","      <td>7.555000</td>\n","      <td>18.000000</td>\n","      <td>18.875000</td>\n","      <td>98.400000</td>\n","      <td>523.0</td>\n","      <td>507.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10022620</td>\n","      <td>4.0</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>68.416171</td>\n","      <td>81.300472</td>\n","      <td>117.652355</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>121.166667</td>\n","      <td>40.0</td>\n","      <td>4.333333</td>\n","      <td>6.433333</td>\n","      <td>98.833333</td>\n","      <td>7.415708</td>\n","      <td>9.333333</td>\n","      <td>20.833333</td>\n","      <td>98.750000</td>\n","      <td>577.5</td>\n","      <td>468.750000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10037861</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>-5.0</td>\n","      <td>68.000000</td>\n","      <td>77.000000</td>\n","      <td>126.166667</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>99.333333</td>\n","      <td>30.0</td>\n","      <td>11.000000</td>\n","      <td>10.300000</td>\n","      <td>98.333333</td>\n","      <td>7.415708</td>\n","      <td>21.000000</td>\n","      <td>22.000000</td>\n","      <td>98.862106</td>\n","      <td>486.0</td>\n","      <td>486.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e6e00583-44fa-4051-8ac0-8ce9b3ac55fe')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e6e00583-44fa-4051-8ac0-8ce9b3ac55fe button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e6e00583-44fa-4051-8ac0-8ce9b3ac55fe');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-65995a5d-9830-45aa-8426-e983ddf2201a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-65995a5d-9830-45aa-8426-e983ddf2201a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-65995a5d-9830-45aa-8426-e983ddf2201a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test_combined","summary":"{\n  \"name\": \"test_combined\",\n  \"rows\": 941,\n  \"fields\": [\n    {\n      \"column\": \"subject_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2249626,\n        \"min\": 10004720,\n        \"max\": 17910586,\n        \"num_unique_values\": 941,\n        \"samples\": [\n          13031876,\n          15071011,\n          13582085\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mode_GCS - Eye Opening\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9693799409268512,\n        \"min\": 1.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0,\n          3.0,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mode_GCS - Motor Response\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.458773143214998,\n        \"min\": 1.0,\n        \"max\": 6.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2.0,\n          6.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mode_Richmond-RAS Scale\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4228559164606025,\n        \"min\": -5.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          3.0,\n          -4.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial Blood Pressure diastolic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.168736047476106,\n        \"min\": 60.0,\n        \"max\": 90.0,\n        \"num_unique_values\": 174,\n        \"samples\": [\n          63.8,\n          63.5,\n          63.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial Blood Pressure mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.998936354885398,\n        \"min\": 37.5,\n        \"max\": 128.07142857142858,\n        \"num_unique_values\": 336,\n        \"samples\": [\n          106.5,\n          77.66666666666667,\n          58.833333333333336\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial Blood Pressure systolic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.099143594011334,\n        \"min\": 91.0,\n        \"max\": 140.0,\n        \"num_unique_values\": 300,\n        \"samples\": [\n          121.66666666666667,\n          96.0,\n          108.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial CO2 Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.499587728369068,\n        \"min\": 23.0,\n        \"max\": 66.0,\n        \"num_unique_values\": 79,\n        \"samples\": [\n          27.5,\n          40.68958637469587,\n          44.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Arterial O2 pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.1177511966282,\n        \"min\": 45.0,\n        \"max\": 202.0,\n        \"num_unique_values\": 162,\n        \"samples\": [\n          129.5,\n          99.25,\n          83.66666666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Heart Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.19655164400134,\n        \"min\": 44.833333333333336,\n        \"max\": 135.0,\n        \"num_unique_values\": 521,\n        \"samples\": [\n          66.57142857142857,\n          117.33333333333333,\n          78.71428571428571\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Inspired O2 Fraction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.630517891517126,\n        \"min\": 21.0,\n        \"max\": 70.0,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          30.5,\n          38.75,\n          35.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Mean Airway Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.272989576900501,\n        \"min\": 1.0,\n        \"max\": 17.0,\n        \"num_unique_values\": 135,\n        \"samples\": [\n          7.85,\n          1.5,\n          11.285714285714286\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Minute Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.802137073105976,\n        \"min\": 3.7,\n        \"max\": 12.1,\n        \"num_unique_values\": 250,\n        \"samples\": [\n          9.333333333333334,\n          8.8,\n          10.733333333333334\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_O2 saturation pulseoxymetry\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9769956041938148,\n        \"min\": 89.5,\n        \"max\": 100.0,\n        \"num_unique_values\": 169,\n        \"samples\": [\n          92.83333333333333,\n          97.66666666666667,\n          99.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_PH (Arterial)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03823908891271932,\n        \"min\": 7.2,\n        \"max\": 7.58,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          7.455,\n          7.41570827303425,\n          7.466666666666666\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Peak Insp. Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.111675374053926,\n        \"min\": 0.0,\n        \"max\": 43.0,\n        \"num_unique_values\": 116,\n        \"samples\": [\n          19.5,\n          21.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Respiratory Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.664005788957646,\n        \"min\": 7.571428571428571,\n        \"max\": 39.0,\n        \"num_unique_values\": 309,\n        \"samples\": [\n          25.166666666666668,\n          21.22222222222222,\n          19.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Temperature Fahrenheit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9365678027937075,\n        \"min\": 95.35,\n        \"max\": 103.05000000000001,\n        \"num_unique_values\": 165,\n        \"samples\": [\n          98.45,\n          101.05,\n          101.08\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (observed)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 94.88827627396532,\n        \"min\": 299.0,\n        \"max\": 749.0,\n        \"num_unique_values\": 473,\n        \"samples\": [\n          393.0,\n          440.5,\n          719.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_Tidal Volume (spontaneous)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 93.7242313290282,\n        \"min\": 299.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 434,\n        \"samples\": [\n          404.25,\n          435.0,\n          317.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# Calculate this as a percentage of all data points\n","print(\"Train data:\")\n","print(train_combined.isna().sum().sort_values(ascending=False)/len(train_combined))\n","print(\"Test data:\")\n","print(test_combined.isna().sum().sort_values(ascending=False)/len(test_combined))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"snVlT6RaJ_ex","executionInfo":{"status":"ok","timestamp":1722957867548,"user_tz":-60,"elapsed":218,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"6e920d28-5c9f-4783-b5d5-f0c3395f4ef6"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Train data:\n","subject_id                                0.0\n","mode_GCS - Eye Opening                    0.0\n","mean_Tidal Volume (observed)              0.0\n","mean_Temperature Fahrenheit               0.0\n","mean_Respiratory Rate                     0.0\n","mean_Peak Insp. Pressure                  0.0\n","mean_PH (Arterial)                        0.0\n","mean_O2 saturation pulseoxymetry          0.0\n","mean_Minute Volume                        0.0\n","mean_Mean Airway Pressure                 0.0\n","mean_Inspired O2 Fraction                 0.0\n","mean_Heart Rate                           0.0\n","mean_Arterial O2 pressure                 0.0\n","mean_Arterial CO2 Pressure                0.0\n","mean_Arterial Blood Pressure systolic     0.0\n","mean_Arterial Blood Pressure mean         0.0\n","mean_Arterial Blood Pressure diastolic    0.0\n","mode_Richmond-RAS Scale                   0.0\n","mode_GCS - Motor Response                 0.0\n","mean_Tidal Volume (spontaneous)           0.0\n","dtype: float64\n","Test data:\n","subject_id                                0.0\n","mode_GCS - Eye Opening                    0.0\n","mean_Tidal Volume (observed)              0.0\n","mean_Temperature Fahrenheit               0.0\n","mean_Respiratory Rate                     0.0\n","mean_Peak Insp. Pressure                  0.0\n","mean_PH (Arterial)                        0.0\n","mean_O2 saturation pulseoxymetry          0.0\n","mean_Minute Volume                        0.0\n","mean_Mean Airway Pressure                 0.0\n","mean_Inspired O2 Fraction                 0.0\n","mean_Heart Rate                           0.0\n","mean_Arterial O2 pressure                 0.0\n","mean_Arterial CO2 Pressure                0.0\n","mean_Arterial Blood Pressure systolic     0.0\n","mean_Arterial Blood Pressure mean         0.0\n","mean_Arterial Blood Pressure diastolic    0.0\n","mode_Richmond-RAS Scale                   0.0\n","mode_GCS - Motor Response                 0.0\n","mean_Tidal Volume (spontaneous)           0.0\n","dtype: float64\n"]}]},{"cell_type":"markdown","source":["We will not create new features inkeeping with what was done for the dynamic data. As the features required to make the new ones were sampled at different rates, making new features creates more synthetic data which we want to avoid."],"metadata":{"id":"X5od9hcM9IFV"}},{"cell_type":"markdown","source":["There are no NaN values and all patients have a mean value for all features. We can now use this data to train a LightGBM model."],"metadata":{"id":"lTkW5ZlzNHrs"}},{"cell_type":"code","source":["# Add extubation failure label\n","label_df = train_df[['subject_id', 'extubation_failure']].drop_duplicates(subset='subject_id')\n","train_aggregated = train_combined.merge(label_df, on='subject_id', how='left')\n","\n","label_df = test_df[['subject_id', 'extubation_failure']].drop_duplicates(subset='subject_id')\n","test_aggregated = test_combined.merge(label_df, on='subject_id', how='left')"],"metadata":{"id":"QqtFSS1ASvLT","executionInfo":{"status":"ok","timestamp":1722957887642,"user_tz":-60,"elapsed":214,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["train_aggregated.head()"],"metadata":{"id":"-y8pxfYmSz1f","executionInfo":{"status":"ok","timestamp":1722957908624,"user_tz":-60,"elapsed":4,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"fb78d72c-e0ab-4c6f-8412-6066b1cf8fc1","colab":{"base_uri":"https://localhost:8080/","height":307}},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id  mode_GCS - Eye Opening  mode_GCS - Motor Response  \\\n","0    10001884                     3.0                        6.0   \n","1    10002428                     3.0                        6.0   \n","2    10004235                     4.0                        6.0   \n","3    10010867                     2.0                        4.0   \n","4    10011365                     4.0                        6.0   \n","\n","   mode_Richmond-RAS Scale  mean_Arterial Blood Pressure diastolic  \\\n","0                     -1.0                               68.416171   \n","1                      0.0                               61.666667   \n","2                     -1.0                               68.416171   \n","3                     -4.0                               68.416171   \n","4                      0.0                               68.416171   \n","\n","   mean_Arterial Blood Pressure mean  mean_Arterial Blood Pressure systolic  \\\n","0                          81.300472                             117.652355   \n","1                          81.166667                             118.500000   \n","2                          81.300472                             117.652355   \n","3                          81.300472                             117.652355   \n","4                          81.300472                             117.652355   \n","\n","   mean_Arterial CO2 Pressure  mean_Arterial O2 pressure  mean_Heart Rate  \\\n","0                   40.689586                 110.926241        74.750000   \n","1                   43.000000                 127.000000       105.833333   \n","2                   37.500000                 100.500000       104.833333   \n","3                   40.689586                 110.926241        99.000000   \n","4                   40.689586                 110.926241        88.166667   \n","\n","   ...  mean_Mean Airway Pressure  mean_Minute Volume  \\\n","0  ...                        7.6                 6.1   \n","1  ...                       11.5                 9.0   \n","2  ...                        6.0                10.5   \n","3  ...                        8.9                 5.6   \n","4  ...                        7.5                 9.4   \n","\n","   mean_O2 saturation pulseoxymetry  mean_PH (Arterial)  \\\n","0                         97.666667            7.415708   \n","1                         99.833333            7.430000   \n","2                         99.333333            7.325000   \n","3                         97.666667            7.415708   \n","4                         93.166667            7.415708   \n","\n","   mean_Peak Insp. Pressure  mean_Respiratory Rate  \\\n","0                      17.0              20.000000   \n","1                      20.5              22.000000   \n","2                      11.0              13.666667   \n","3                      16.0              15.333333   \n","4                      12.0              17.666667   \n","\n","   mean_Temperature Fahrenheit  mean_Tidal Volume (observed)  \\\n","0                    98.862106                    472.138379   \n","1                    98.366667                    380.000000   \n","2                    98.862106                    472.138379   \n","3                    99.300000                    467.000000   \n","4                    98.800000                    344.000000   \n","\n","   mean_Tidal Volume (spontaneous)  extubation_failure  \n","0                       470.899154                   1  \n","1                       355.250000                   0  \n","2                       470.899154                   1  \n","3                       467.000000                   0  \n","4                       344.000000                   1  \n","\n","[5 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-e9ffdb4d-2180-48b7-910b-7706437e042d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>mode_GCS - Eye Opening</th>\n","      <th>mode_GCS - Motor Response</th>\n","      <th>mode_Richmond-RAS Scale</th>\n","      <th>mean_Arterial Blood Pressure diastolic</th>\n","      <th>mean_Arterial Blood Pressure mean</th>\n","      <th>mean_Arterial Blood Pressure systolic</th>\n","      <th>mean_Arterial CO2 Pressure</th>\n","      <th>mean_Arterial O2 pressure</th>\n","      <th>mean_Heart Rate</th>\n","      <th>...</th>\n","      <th>mean_Mean Airway Pressure</th>\n","      <th>mean_Minute Volume</th>\n","      <th>mean_O2 saturation pulseoxymetry</th>\n","      <th>mean_PH (Arterial)</th>\n","      <th>mean_Peak Insp. Pressure</th>\n","      <th>mean_Respiratory Rate</th>\n","      <th>mean_Temperature Fahrenheit</th>\n","      <th>mean_Tidal Volume (observed)</th>\n","      <th>mean_Tidal Volume (spontaneous)</th>\n","      <th>extubation_failure</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001884</td>\n","      <td>3.0</td>\n","      <td>6.0</td>\n","      <td>-1.0</td>\n","      <td>68.416171</td>\n","      <td>81.300472</td>\n","      <td>117.652355</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>74.750000</td>\n","      <td>...</td>\n","      <td>7.6</td>\n","      <td>6.1</td>\n","      <td>97.666667</td>\n","      <td>7.415708</td>\n","      <td>17.0</td>\n","      <td>20.000000</td>\n","      <td>98.862106</td>\n","      <td>472.138379</td>\n","      <td>470.899154</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002428</td>\n","      <td>3.0</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>61.666667</td>\n","      <td>81.166667</td>\n","      <td>118.500000</td>\n","      <td>43.000000</td>\n","      <td>127.000000</td>\n","      <td>105.833333</td>\n","      <td>...</td>\n","      <td>11.5</td>\n","      <td>9.0</td>\n","      <td>99.833333</td>\n","      <td>7.430000</td>\n","      <td>20.5</td>\n","      <td>22.000000</td>\n","      <td>98.366667</td>\n","      <td>380.000000</td>\n","      <td>355.250000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10004235</td>\n","      <td>4.0</td>\n","      <td>6.0</td>\n","      <td>-1.0</td>\n","      <td>68.416171</td>\n","      <td>81.300472</td>\n","      <td>117.652355</td>\n","      <td>37.500000</td>\n","      <td>100.500000</td>\n","      <td>104.833333</td>\n","      <td>...</td>\n","      <td>6.0</td>\n","      <td>10.5</td>\n","      <td>99.333333</td>\n","      <td>7.325000</td>\n","      <td>11.0</td>\n","      <td>13.666667</td>\n","      <td>98.862106</td>\n","      <td>472.138379</td>\n","      <td>470.899154</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10010867</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>-4.0</td>\n","      <td>68.416171</td>\n","      <td>81.300472</td>\n","      <td>117.652355</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>99.000000</td>\n","      <td>...</td>\n","      <td>8.9</td>\n","      <td>5.6</td>\n","      <td>97.666667</td>\n","      <td>7.415708</td>\n","      <td>16.0</td>\n","      <td>15.333333</td>\n","      <td>99.300000</td>\n","      <td>467.000000</td>\n","      <td>467.000000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10011365</td>\n","      <td>4.0</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>68.416171</td>\n","      <td>81.300472</td>\n","      <td>117.652355</td>\n","      <td>40.689586</td>\n","      <td>110.926241</td>\n","      <td>88.166667</td>\n","      <td>...</td>\n","      <td>7.5</td>\n","      <td>9.4</td>\n","      <td>93.166667</td>\n","      <td>7.415708</td>\n","      <td>12.0</td>\n","      <td>17.666667</td>\n","      <td>98.800000</td>\n","      <td>344.000000</td>\n","      <td>344.000000</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e9ffdb4d-2180-48b7-910b-7706437e042d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e9ffdb4d-2180-48b7-910b-7706437e042d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e9ffdb4d-2180-48b7-910b-7706437e042d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-20c7623b-e7a1-44d4-adec-711d520341eb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-20c7623b-e7a1-44d4-adec-711d520341eb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-20c7623b-e7a1-44d4-adec-711d520341eb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_aggregated"}},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["train_aggregated.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o7FRzinNNN5U","executionInfo":{"status":"ok","timestamp":1722957890894,"user_tz":-60,"elapsed":222,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"771b7152-bb2d-4b97-f1de-f4d75635c917"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3760, 21)"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["test_aggregated.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"27Vn3w0kNgvB","executionInfo":{"status":"ok","timestamp":1722957891995,"user_tz":-60,"elapsed":2,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}},"outputId":"d800eaf7-8b40-4790-e5bd-16aa00eb4182"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(941, 21)"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["# Save the data\n","train_aggregated.to_parquet('/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/data_analysis/datasets/08_model_input_data/02_feature_set_2/02_lgbm_data/train_aggregated_v2.parquet')\n","test_aggregated.to_parquet('/content/drive/MyDrive/MSc_Final_Project/02_data_analysis/mimic/data_analysis/datasets/08_model_input_data/02_feature_set_2/02_lgbm_data/test_aggregated_v2.parquet')"],"metadata":{"id":"DHT83MZyORkD","executionInfo":{"status":"ok","timestamp":1722957902315,"user_tz":-60,"elapsed":996,"user":{"displayName":"Akram Yoosoofsah","userId":"15428459772312358460"}}},"execution_count":24,"outputs":[]}]}